{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","common.speech/Exports.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","common/Error.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","sdk/Contracts.ts","common/Guid.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/webpack/buildin/global.js","sdk/Audio/AudioStreamFormat.ts","common.speech/HeaderNames.ts","common.speech/RecognitionEvents.ts","common.speech/IAuthentication.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/process/browser.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/prop-types/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","common/PlatformEvent.ts","sdk/Audio/AudioOutputStream.ts","sdk/SpeechSynthesisEventArgs.ts","sdk/SpeechSynthesisResult.ts","sdk/SpeechSynthesisWordBoundaryEventArgs.ts","sdk/SpeechSynthesisBookmarkEventArgs.ts","sdk/SpeechSynthesisVisemeEventArgs.ts","common.speech/SynthesisAdapterBase.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty.js","../../src/constant.js","../../src/decorators/staticMethods.js","../../src/decorators/customEvent.js","../../src/decorators/bodyMode.js","../../src/utils/getPosition.js","../../src/utils/getTipContent.js","../../src/utils/aria.js","../../src/utils/nodeListToArray.js","../../src/decorators/defaultStyles.js","../../src/decorators/styler.js","../../node_modules/core-js/internals/global.js","../../node_modules/core-js/internals/fails.js","../../node_modules/core-js/internals/descriptors.js","../../node_modules/core-js/internals/object-property-is-enumerable.js","../../node_modules/core-js/internals/create-property-descriptor.js","../../node_modules/core-js/internals/classof-raw.js","../../node_modules/core-js/internals/indexed-object.js","../../node_modules/core-js/internals/require-object-coercible.js","../../node_modules/core-js/internals/to-indexed-object.js","../../node_modules/core-js/internals/is-object.js","../../node_modules/core-js/internals/to-primitive.js","../../node_modules/core-js/internals/to-object.js","../../node_modules/core-js/internals/has.js","../../node_modules/core-js/internals/document-create-element.js","../../node_modules/core-js/internals/ie8-dom-define.js","../../node_modules/core-js/internals/object-get-own-property-descriptor.js","../../node_modules/core-js/internals/an-object.js","../../node_modules/core-js/internals/object-define-property.js","../../node_modules/core-js/internals/create-non-enumerable-property.js","../../node_modules/core-js/internals/set-global.js","../../node_modules/core-js/internals/shared-store.js","../../node_modules/core-js/internals/inspect-source.js","../../node_modules/core-js/internals/internal-state.js","../../node_modules/core-js/internals/native-weak-map.js","../../node_modules/core-js/internals/shared.js","../../node_modules/core-js/internals/uid.js","../../node_modules/core-js/internals/shared-key.js","../../node_modules/core-js/internals/hidden-keys.js","../../node_modules/core-js/internals/engine-v8-version.js","../../node_modules/core-js/internals/redefine.js","../../node_modules/core-js/internals/path.js","../../node_modules/core-js/internals/get-built-in.js","../../node_modules/core-js/internals/to-integer.js","../../node_modules/core-js/internals/to-length.js","../../node_modules/core-js/internals/to-absolute-index.js","../../node_modules/core-js/internals/array-includes.js","../../node_modules/core-js/internals/object-keys-internal.js","../../node_modules/core-js/internals/enum-bug-keys.js","../../node_modules/core-js/internals/object-get-own-property-names.js","../../node_modules/core-js/internals/object-get-own-property-symbols.js","../../node_modules/core-js/internals/own-keys.js","../../node_modules/core-js/internals/copy-constructor-properties.js","../../node_modules/core-js/internals/is-forced.js","../../node_modules/core-js/internals/export.js","../../node_modules/core-js/internals/function-bind-context.js","../../node_modules/core-js/internals/a-function.js","../../node_modules/core-js/internals/is-array.js","../../node_modules/core-js/internals/engine-user-agent.js","../../node_modules/core-js/internals/object-create.js","../../node_modules/core-js/internals/native-symbol.js","../../node_modules/core-js/internals/use-symbol-as-uid.js","../../node_modules/core-js/internals/well-known-symbol.js","../../node_modules/core-js/internals/array-species-create.js","../../node_modules/core-js/internals/array-iteration.js","../../node_modules/core-js/internals/object-keys.js","../../node_modules/core-js/internals/object-define-properties.js","../../node_modules/core-js/internals/html.js","../../node_modules/core-js/internals/add-to-unscopables.js","../../node_modules/core-js/modules/es.array.find.js","../../src/decorators/trackRemoval.js","../../src/index.js","../../src/decorators/windowListener.js","../../src/decorators/isCapture.js","../../src/decorators/getEffect.js","../../src/utils/uuid.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/microsoft-cognitiveservices-speech-sdk/node_modules/uuid/lib/rng-browser.js","../node_modules/microsoft-cognitiveservices-speech-sdk/node_modules/uuid/lib/bytesToUuid.js","common.speech/RecognizerConfig.ts","../node_modules/buffer/index.js","sdk/Audio/AudioOutputFormat.ts","common.speech/SpeechConnectionMessage.Internal.ts","common.speech/SynthesisContext.ts","common.speech/AgentConfig.ts","common.speech/ServiceMessages/SynthesisAudioMetadata.ts","common.speech/WebsocketMessageFormatter.ts","common.speech/ServiceMessages/SpeechHypothesis.ts","common.speech/ServiceMessages/SimpleSpeechPhrase.ts","common.speech/ServiceMessages/Enums.ts","common.speech/EnumTranslation.ts","common.speech/ServiceMessages/DetailedSpeechPhrase.ts","common.speech/DynamicGrammarBuilder.ts","common.speech/SpeechContext.ts","common.speech/ServiceMessages/SpeechDetected.ts","common.speech/CognitiveSubscriptionKeyAuthentication.ts","common.speech/CognitiveTokenAuthentication.ts","common/ConnectionOpenResponse.ts","common.browser/WebsocketMessageAdapter.ts","common.browser/WebsocketConnection.ts","common.browser/ProxyInfo.ts","common.speech/QueryParameterNames.ts","common.speech/ConnectionFactoryBase.ts","common.speech/SpeechConnectionFactory.ts","sdk/SpeechRecognitionResult.ts","sdk/RecognitionResult.ts","sdk/SpeechRecognitionEventArgs.ts","sdk/SpeechRecognitionCanceledEventArgs.ts","sdk/CancellationEventArgsBase.ts","common.speech/SpeechServiceRecognizer.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","common.browser/ReplayableAudioNode.ts","common/Timeout.ts","common.speech/ServiceRecognizerBase.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","common.speech/SynthesisEvents.ts","common.speech/SynthesisTurn.ts","common.speech/ServiceTelemetryListener.Internal.ts","common.speech/RequestSession.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/path-browserify/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","sdk/SpeechSynthesisOutputFormat.ts","common/Promise.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/node_modules/uuid/index.js","../node_modules/microsoft-cognitiveservices-speech-sdk/node_modules/uuid/v1.js","../node_modules/microsoft-cognitiveservices-speech-sdk/node_modules/uuid/v4.js","common/EventSource.ts","sdk/Audio/AudioInputStream.ts","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","common/ConnectionMessage.ts","common.browser/CertChecks.ts","../node_modules/url-parse/index.js","../node_modules/requires-port/index.js","../node_modules/querystringify/index.js","common/OCSPEvents.ts","common/Queue.ts","common/List.ts","sdk/PropertyId.ts","sdk/PropertyCollection.ts","sdk/OutputFormat.ts","sdk/ServicePropertyChannel.ts","common/AudioSourceEvents.ts","common/ChunkedArrayBufferStream.ts","common/Stream.ts","common/Events.ts","sdk/CancellationReason.ts","sdk/CancellationErrorCodes.ts","sdk/ResultReason.ts","common/ConnectionEvents.ts","common/IConnection.ts","common/BackgroundError.ts","common/RawWebsocketMessage.ts","sdk/RecognitionEventArgs.ts","sdk/SessionEventArgs.ts","common/RiffPcmEncoder.ts","common.browser/PCMRecorder.ts","common.browser/MicAudioSource.ts","common.browser/FileAudioSource.ts","sdk/Audio/PullAudioInputStreamCallback.ts","sdk/Audio/SpeakerAudioDestination.ts","sdk/Audio/PushAudioOutputStreamCallback.ts","sdk/Audio/AudioFileWriter.ts","sdk/Audio/AudioConfig.ts","../node_modules/react-tooltip/node_modules/uuid/dist/esm-browser/rng.js","../node_modules/react-tooltip/node_modules/uuid/dist/esm-browser/bytesToUuid.js","../node_modules/react-tooltip/node_modules/uuid/dist/esm-browser/v4.js","sdk/ProfanityOption.ts","sdk/SpeechConfig.ts","sdk/SpeechRecognizer.ts","sdk/Recognizer.ts"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","module","exports","_inherits","subClass","superClass","create","constructor","value","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","this","Reflect","construct","arguments","apply","OutputFormatPropertyName","CancellationErrorCodePropertyName","ServicePropertiesPropertyName","ForceDictationPropertyName","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","F","s","n","done","e","_e","f","err","normalCompletion","didErr","step","next","_e2","Parent","args","Class","isNativeReflectConstruct","a","push","Function","bind","setPrototypeOf","_cache","Map","undefined","fn","toString","call","indexOf","has","get","set","Wrapper","getPrototypeOf","argumentName","name","message","Error","error","objectName","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","Promise","then","_asyncToGenerator","self","Contracts","param","throwIfNullOrUndefined","trim","isDisposed","array","item","throwIfNullOrWhitespace","createNoDashGuid","replace","RegExp","toUpperCase","unsupportedIterableToArray","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","source","forEach","getOwnPropertyDescriptors","defineProperties","_getPrototypeOf","__proto__","g","window","AudioStreamFormat","AudioStreamFormatImpl","getDefaultInputFormat","samplesPerSecond","bitsPerSample","channels","samplesPerSec","setString","view","offset","str","setUint8","charCodeAt","formatTag","avgBytesPerSec","blockAlign","Math","max","privHeader","ArrayBuffer","DataView","setUint32","setUint16","sampleRate","AudioContext","webkitAudioContext","navigator","mediaDevices","getSupportedConstraints","HeaderNames","AuthKey","ConnectionId","ContentType","CustomCommandsAppId","Path","RequestId","RequestStreamId","RequestTimestamp","RecognitionCompletionStatus","SpeechRecognitionEvent","eventName","requestId","sessionId","eventType","Info","privRequestId","privSessionId","RecognitionTriggeredEvent","audioSourceId","audioNodeId","privAudioSourceId","privAudioNodeId","ListeningStartedEvent","ConnectingToServiceEvent","authFetchEventid","privAuthFetchEventid","RecognitionStartedEvent","authFetchEventId","privAuthFetchEventId","AuthInfo","headerName","token","privHeaderName","privToken","arrayLikeToArray","minLen","slice","from","test","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","require","_defineProperty","obj","_setPrototypeOf","p","EventType","PlatformEvent","privName","privEventId","privEventTime","Date","toISOString","privEventType","privMetadata","AudioOutputStream","PullAudioOutputStream","PullAudioOutputStreamImpl","privId","privStream","privFormat","format","getDefaultOutputFormat","isClosed","dataBuffer","intView","Int8Array","totalBytes","privLastChunkView","byteLength","isReadEnded","read","chunk","isEnd","tmpBuffer","buffer","readEnded","writeStreamChunk","timeReceived","now","close","PushAudioOutputStream","callback","PushAudioOutputStreamImpl","privCallback","write","privResult","resultId","reason","audioData","errorDetails","properties","privResultId","privReason","privAudioData","privErrorDetails","privProperties","audioOffset","text","wordLength","textOffset","privAudioOffset","privText","privWordLength","privTextOffset","visemeId","animation","privVisemeId","privAnimation","authentication","connectionFactory","synthesizerConfig","speechSynthesizer","audioDestination","speakOverride","receiveMessageOverride","connectImplOverride","configConnectionOverride","sendSynthesisContext","connection","synthesisContextJson","synthesisContext","toJSON","send","Text","privSynthesisTurn","sendSpeechServiceConfig","SpeechServiceConfigJson","sendSsmlMessage","ssml","privAuthentication","privConnectionFactory","privSynthesizerConfig","privIsDisposed","privSpeechSynthesizer","privSessionAudioDestination","SynthesisTurn","privConnectionEvents","EventSource","privServiceEvents","privSynthesisContext","SynthesisContext","privAgentConfig","AgentConfig","connectionEvents","attach","connectionEvent","connectionClosedEvent","statusCode","cancelSynthesisLocal","CancellationReason","BadRequestParameters","ConnectionFailure","privActivityTemplate","messagePayload","privAudioOutputFormat","audioOutputFormat","privConnectionConfigurationPromise","dispose","connectImpl","path","payload","type","Binary","contentType","fetchConnection","isSSML","successCallback","errorCallBack","buildSsml","privSuccessCallback","privErrorCallback","startNewSynthesis","synthesisStartEventArgs","ResultReason","SynthesizingAudioStarted","synthesisStarted","receiveMessage","cancellationReason","errorCode","PropertyCollection","setProperty","Canceled","SynthesisCanceled","cancelEvent","isSynthesizing","onStopSynthesizing","cancelSynthesis","connectionMessage","privServiceHasSentMessage","fromConnectionMessage","toLowerCase","onServiceTurnStartResponse","onServiceResponseMessage","textBody","streamId","binaryBody","onAudioChunkReceived","synthesizing","audioWithHeader","SynthesisAdapterBase","addHeader","ev","SynthesizingAudio","metadataList","SynthesisAudioMetadata","fromJSON","Metadata","metadata","Type","WordBoundary","Bookmark","Viseme","onWordBoundaryEvent","Data","wordBoundaryEventArgs","Offset","Length","currentTextOffset","wordBoundary","bookmarkEventArgs","bookmarkReached","onVisemeMetadataReceived","IsLastAnimation","visemeEventArgs","VisemeId","getAndClearVisemeAnimation","visemeReceived","onServiceTurnEndResponse","getAllReceivedAudioWithHeader","audioBuffer","SynthesizingAudioCompleted","synthesisCompleted","processTypeSpecificMessages","serviceEvents","onEvent","isUnAuthorized","privConnectionPromise","state","Disconnected","privConnectionId","onPreConnectionStart","authPromise","fetchOnExpiry","fetch","onAuthCompleted","events","event","open","response","onConnectionEstablishCompleted","parameters","getProperty","PropertyId","SpeechServiceConnection_Endpoint","catch","configureConnection","SpeechServiceConfig","serialize","audio","hasHeader","updateHeader","tmp","Uint8Array","header","telemetryDataEnabled","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arr","arr2","HIDE","REBUILD","SHOW","dispatchGlobalEvent","opts","detail","document","checkStatus","show","id","isCapture","currentItem","hideTooltip","setUntargetItems","getTargetArray","targetArray","currentTarget","customListeners","map","bodyListener","options","respectEffect","customEvent","tip","forId","isCustomEvent","isTargetBelongsToTooltip","getEffect","proxy","makeProxy","findCustomEvents","dataAttribute","getBody","getDimensions","tipWidth","tipHeight","targetWidth","targetHeight","getCurrentOffset","mouseX","mouseY","defaultOffset","getDefaultPosition","calculateOffset","extraOffsetX","extraOffsetY","windowWidth","windowHeight","getParent","parentTop","parentLeft","getTipOffsetLeft","place","offsetX","getTipOffsetTop","offsetY","outsideRight","getTipOffsetRight","outsideBottom","getTipOffsetBottom","outside","outsideLeft","outsideTop","inside","placesList","insideList","isNewState","shouldUpdatePlace","desiredPlace","newPlace","newState","position","left","parseInt","top","node","height","width","effect","boundingClientRect","targetTop","targetLeft","clientY","l","r","t","b","bottom","disToMouse","right","JSON","currentParent","computedStyle","children","getContent","regexp","multiline","className","parseAria","ariaObj","prop","nodeList","fill","index","defaultColors","dark","background","border","arrow","success","warning","light","generateTooltipStyle","uuid","customColors","hasBorder","colors","textColor","backgroundColor","borderColor","arrowColor","generateStyle","getDefaultPopupColors","getPopupColors","check","globalThis","global","exec","fails","$propertyIsEnumerable","propertyIsEnumerable","1","V","bitmap","split","classof","IndexedObject","requireObjectCoercible","input","PREFERRED_STRING","isObject","val","valueOf","argument","hasOwnProperty","toObject","EXISTS","createElement","DESCRIPTORS","$getOwnPropertyDescriptor","O","P","toIndexedObject","toPrimitive","IE8_DOM_DEFINE","createPropertyDescriptor","propertyIsEnumerableModule","String","$defineProperty","Attributes","anObject","definePropertyModule","createNonEnumerableProperty","SHARED","setGlobal","functionToString","store","inspectSource","WeakMap","mode","copyright","postfix","random","shared","uid","OBJECT_ALREADY_INITIALIZED","NATIVE_WEAK_MAP","wmget","wmhas","wmset","facade","STATE","sharedKey","hiddenKeys","objectHas","match","enforce","getterFor","TYPE","getInternalState","InternalStateModule","enforceInternalState","TEMPLATE","unsafe","simple","noTargetGet","join","aFunction","variable","namespace","method","ceil","floor","isNaN","min","toInteger","createMethod","IS_INCLUDES","$this","el","fromIndex","toLength","integer","toAbsoluteIndex","includes","names","enumBugKeys","getOwnPropertyNames","internalObjectKeys","getBuiltIn","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","getOwnPropertyDescriptorModule","replacement","isForced","feature","detection","data","normalize","POLYFILL","NATIVE","string","require$$0","that","c","v8","userAgent","activeXDocument","sham","V8_VERSION","NATIVE_SYMBOL","WellKnownSymbolsStore","createWellKnownSymbol","USE_SYMBOL_AS_UID","withoutSetter","SPECIES","wellKnownSymbol","originalArray","C","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","IS_FILTER_OUT","NO_HOLES","callbackfn","specificCreate","boundFunction","arraySpeciesCreate","some","every","find","findIndex","filterOut","Properties","objectKeys","IE_PROTO","EmptyConstructor","scriptTag","content","LT","domain","ActiveXObject","temp","parentWindow","NullProtoObjectViaActiveX","iframeDocument","iframe","documentCreateElement","style","display","html","appendChild","src","contentWindow","NullProtoObjectViaIFrame","UNSCOPABLES","ArrayPrototype","$find","FIND","SKIPS_HOLES","targetProperty","sourceProperty","TARGET","GLOBAL","STATIC","stat","forced","copyConstructorProperties","redefine","$","proto","ReactTooltip","CONSTANT","hasTarget","staticMethods","windowListener","ele","eventOff","dataEvent","dataEventOff","customListener","dataEffect","possibleCustomEvents","possibleCustomEventsOff","body","customEvents","customEventsOff","bodyModeListeners","targetEventOff","bodyMode","trackRemoval","extraClass","delayHide","delayShow","currentEvent","ariaProps","isEmptyTip","disable","originTooltip","isMultiline","PropTypes","insecure","class","delayUpdate","globalEventOff","afterShow","afterHide","overridePosition","scrollHide","resizeHide","wrapper","clickable","bool","methodArray","tooltipRef","parentNode","domRoot","matches","escaped","selector","nodeListToArray","element","isCaptureMode","getTipContent","placeholder","isGlobalCall","switchToSolid","getPosition","reshowDelay","updateState","setInterval","eventTarget","delayTime","isInvisible","isScroll","isMyElement","resetState","isVisible","setState","clearInterval","Boolean","color","tooltipClass","hasCustomColors","wrapperClassName","htmlContent","ref","data-id","dangerouslySetInnerHTML","__html","aria-hidden","nextProps","prevState","newAriaProps","React","Component","MutationObserver","observer","mutations","m1","mutation","m2","childList","subtree","_isNativeReflectConstruct","Proxy","getRandomValues","crypto","msCrypto","rnds8","rnds","byteToHex","substr","buf","bth","RecognitionMode","SpeechResultFormat","connectivity","RecognizerConfig","speechServiceConfig","privRecognitionMode","Interactive","privSpeechServiceConfig","Context","privParameters","privRecognitionActivityTimeout","Recognition","SpeechServiceConnection_AutoDetectSourceLanguages","context","stringify","k","charAt","substring","recognition","os","system","System","build","lang","OS","platform","base64","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","RangeError","encodingOrOffset","allocUnsafe","byteOffset","fromArrayLike","fromArrayBuffer","encoding","isEncoding","actual","fromString","isBuffer","checked","copy","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","compare","x","y","list","pos","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","isFinite","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","dst","AudioFormatTag","AudioOutputFormatImpl","audioFormatString","requestAudioFormatString","priAudioFormatString","priRequestAudioFormatString","priHasHeader","audioLength","speechSynthesisOutputFormat","fromSpeechSynthesisOutputFormatString","SpeechSynthesisOutputFormatToString","speechSynthesisOutputFormatString","PCM","Siren","MP3","SILKSkype","MuLaw","OGG_OPUS","WEBM_OPUS","Raw8Khz8BitMonoMULaw","Riff16Khz16KbpsMonoSiren","Audio16Khz16KbpsMonoSiren","Audio16Khz32KBitRateMonoMp3","Audio16Khz128KBitRateMonoMp3","Audio16Khz64KBitRateMonoMp3","Audio24Khz48KBitRateMonoMp3","Audio24Khz96KBitRateMonoMp3","Audio24Khz160KBitRateMonoMp3","Raw16Khz16BitMonoTrueSilk","Riff16Khz16BitMonoPcm","Riff8Khz16BitMonoPcm","Riff24Khz16BitMonoPcm","Riff8Khz8BitMonoMULaw","Raw16Khz16BitMonoPcm","Raw24Khz16BitMonoPcm","Raw8Khz16BitMonoPcm","Ogg16Khz16BitMonoOpus","Ogg24Khz16BitMonoOpus","Raw48Khz16BitMonoPcm","Riff48Khz16BitMonoPcm","Audio48Khz96KBitRateMonoMp3","Audio48Khz192KBitRateMonoMp3","Ogg48Khz16BitMonoOpus","Webm16Khz16BitMonoOpus","Webm24Khz16BitMonoOpus","SpeechConnectionMessage","messageType","additionalHeaders","headers","privPath","privContentType","privStreamId","privAdditionalHeaders","privContext","sectionName","synthesisSection","buildSynthesisContext","setSection","metadataOptions","bookmarkEnabled","sentenceBoundaryEnabled","visemeEnabled","wordBoundaryEnabled","outputFormat","language","autoDetection","autoDetectSourceLanguage","iPrivConfig","MetadataType","json","privSynthesisAudioMetadata","parse","WebsocketMessageFormatter","toConnectionMessage","deferral","textMessage","textContent","headerBodySplit","parseHeaders","binaryMessage","binaryContent","dataView","headerLength","getInt16","headersString","getInt8","promise","makeHeaders","headerBuffer","stringToArrayBuffer","headerInt8Array","payloadInt8Array","bodyInt8Array","headerMatches","separatorIndex","headerValue","SpeechHypothesis","privSpeechHypothesis","Duration","PrimaryLanguage","Language","Confidence","SpeakerId","SimpleSpeechPhrase","privSimpleSpeechPhrase","RecognitionStatus","DisplayText","SynthesisStatus","EnumTranslation","recognitionStatus","Success","RecognizedSpeech","NoMatch","InitialSilenceTimeout","BabbleTimeout","EndOfDictation","EndOfStream","NoError","ServiceError","TooManyRequests","DetailedSpeechPhrase","privDetailedSpeechPhrase","NBest","DynamicGrammarBuilder","phrase","privPhrases","grammar","privGrammars","retObj","ReferenceGrammars","retPhrases","Groups","Items","SpeechContext","dynamicGrammar","privDynamicGrammar","params","phraseDetection","enrichment","pronunciationAssessment","phraseOutput","detailed","dgi","generateGrammarObject","SpeechDetected","privSpeechStartDetected","CognitiveSubscriptionKeyAuthentication","subscriptionKey","privAuthInfo","AuthHeader","CognitiveTokenAuthentication","fetchCallback","fetchOnExpiryCallback","privFetchCallback","privFetchOnExpiryCallback","privStatusCode","uri","connectionId","messageFormatter","proxyInfo","enableCompression","privConnectionState","privConnectionEstablishDeferral","privCertificateValidatedDeferral","Connecting","WebSocket","WebsocketMessageAdapter","forceNpmWebSocket","privHeaders","perMessageDeflate","privEnableCompression","checkAgent","agent","GetAgent","privWebsocketClient","privUri","binaryType","privReceivingMessageQueue","Queue","privDisconnectDeferral","privSendMessageQueue","processSendQueue","Events","onopen","Connected","onerror","privLastErrorReceived","onclose","onClose","onmessage","networkReceivedTime","deferred","enqueueFromPromise","rawMessage","RawWebsocketMessage","privMessageFormatter","messageSendStatusDeferral","messageSendDeferral","Message","sendStatusDeferral","dequeue","sendRawMessage","sendItem","isWebsocketOpen","stack","None","closeReason","drainAndDispose","pendingReceiveItem","pendingSendItem","itemToSend","readyState","OPEN","queryParameters","privConnectionMessageAdapter","queryParams","paramName","encodeURIComponent","proxyHostName","proxyPort","proxyUserName","proxyPassword","privProxyHostName","privProxyPort","privProxyUserName","privProxyPassword","ProxyInfo","SpeechServiceConnection_ProxyHostName","SpeechServiceConnection_ProxyPort","SpeechServiceConnection_ProxyUserName","SpeechServiceConnection_ProxyPassword","config","fromParameters","BotId","CustomSpeechDeploymentId","CustomVoiceDeploymentId","EnableAudioLogging","EnableLanguageId","EnableWordLevelTimestamps","EndSilenceTimeoutMs","Format","InitialSilenceTimeoutMs","Profanity","RequestBotStatusMessages","StableIntermediateThreshold","StableTranslation","TestHooks","endpoint","setUrlParameter","SpeechServiceConnection_EnableAudioLogging","SpeechServiceResponse_RequestWordLevelTimestamps","SpeechServiceResponse_ProfanityOption","SpeechServiceConnection_InitialSilenceTimeoutMs","SpeechServiceConnection_EndSilenceTimeoutMs","SpeechServiceResponse_StablePartialResultThreshold","serviceProperties","num","propId","parameterName","search","toLocaleLowerCase","interactiveRelativeUri","conversationRelativeUri","dictationRelativeUri","authInfo","region","SpeechServiceConnection_Region","hostSuffix","startsWith","host","SpeechServiceConnection_Host","endpointId","SpeechServiceConnection_EndpointId","SpeechServiceConnection_RecoLanguage","OutputFormat","Simple","autoDetectSourceLanguages","setCommonUrlParams","recognitionMode","Conversation","Dictation","SpeechServiceConnection_Url","fromRecognizerConfig","duration","languageDetectionConfidence","speakerId","privSpeakerId","privDuration","privOffset","privLanguage","privLanguageDetectionConfidence","privJson","RecognitionEventArgs","privErrorCode","audioSource","recognizerConfig","speechRecognizer","privSpeechRecognizer","sourceLanguages","privSpeechContext","languages","onSuccess","action","onUnknown","interimResults","resultType","phraseResults","resultProps","SpeechServiceResponse_JsonResult","processed","hypothesis","privRequestSession","currentTurnAudioOffset","RecognizingSpeech","LanguageDetectionConfidence","onHypothesis","recognizing","resultReason","implTranslateRecognitionResult","onPhraseRecognized","cancelReason","implTranslateCancelResult","cancelRecognitionLocal","implTranslateCancelErrorCode","isSpeechEnded","privRecognizerConfig","Display","recognized","canceled","ServiceRecognizerBase","_typeof","_possibleConstructorReturn","ReferenceError","bytesPerSecond","privBuffers","privReplayOffset","privLastShrinkOffset","privBufferStartOffset","privBufferSerial","privBufferedBytes","privReplay","privLastChunkAcquiredTime","privAudioNode","privBytesPerSecond","offsetToSeek","bytesToSeek","round","retVal","detach","startOffset","endOffset","serial","workerTimers","timerId","timers","func","delay","load","url","scheduledTimeoutFunctions","unhandledRequests","worker","Worker","addEventListener","isCallNotification","idOrFunc","unhandledTimerId","delete","isClearResponse","postMessage","performance","loadWorkerTimers","blob","Blob","URL","createObjectURL","revokeObjectURL","recognizer","privSetTimeout","privIsLiveAudio","recognizeOverride","disconnectOverride","sendSpeechContext","speechContextJson","speechContext","sendPrePayloadJSONOverride","postConnectImplOverride","requestSession","privMustReportEndOfStream","privAudioSource","privRecognizer","RequestSession","ConversationTranslator_Token","auth","recoMode","startNewRecognition","listenForServiceTelemetry","conPromise","audioStreamNode","deviceInfo","Microphones","audioNode","onAudioSourceAttachCompleted","onStopRecognizing","sessionStartEventArgs","SessionEventArgs","sessionStarted","sendAudio","RuntimeError","isRecognizing","turnOff","sendFinalAudio","turnCompletionPromise","cb","telemetryData","getTelemetry","cancelRecognition","speechStartDetected","speechStartEventArgs","speechStopDetected","isContinuousRecognition","onServiceRecognized","speechStopEventArgs","speechEndDetected","sendTelemetryData","sessionStopEventArgs","sessionStopped","sendPrePayloadJSON","sendWaveHeader","Speech_SessionId","audioFormat","nextSendTime","fastLaneSizeMs","maxSendUnthrottledBytes","startRecogNumber","recogNumber","readAndUploadCycle","audioStreamChunk","sendDelay","onAudioSent","bytesSent","onSpeechEnded","delayMs","readView","padStart","console","property","receiver","base","desc","sessionAudioDestinationId","turnAudioDestinationId","privSessionAudioDestinationId","privTurnAudioDestinationId","privIsSynthesizing","privIsSynthesisEnded","privBytesReceived","privInTurn","privNextSearchTextIndex","isError","onComplete","responseJson","privTurnDeferral","privAudioOutputStream","privTurnAudioDestination","privReceivedAudio","readAllAudioFromStream","privReceivedAudioWithHeader","getAllReceivedAudio","rawText","privRawText","privIsSSML","privPartialVisemeAnimation","updateTextOffset","AnimationChunk","bytesReceived","privListeningTriggerMetric","privMicMetric","privConnectionEstablishMetric","End","eventTime","Name","Start","privMicStartTime","privConnectionStartTime","Id","getConnectionError","privReceivedMessages","metrics","privPhraseLatencies","PhraseLatencyMs","privHypothesisLatencies","FirstHypothesisLatencyMs","telemetry","Metrics","ReceivedMessages","audioReceivedTime","privDetachables","privIsAudioNodeDetached","privIsRecognizing","privIsSpeechEnded","privTurnStartAudioOffset","privLastRecoOffset","privHypothesisReceived","privBytesSent","privRecogNumber","privServiceTelemetryListener","hasTelemetry","eventSource","attachListener","replay","continuousRecognition","hypothesisReceived","findTimeAtOffset","phraseReceived","shrinkBuffers","detachable","detachAudioNode","_n","_d","_s","_i","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","_invoke","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","iter","reverse","pop","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","xs","resolvedPath","resolvedAbsolute","isAbsolute","trailingSlash","paths","relative","to","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","hasRoot","matchedSlash","basename","extname","startDot","startPart","preDotState","arrayWithoutHoles","iterableToArray","nonIterableSpread","possibleConstructorReturn","assertThisInitialized","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","number","symbol","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","SpeechSynthesisOutputFormat","PromiseState","Deferred","privResolve","privReject","privPromise","marshalPromiseToCallbacks","typedError","v1","v4","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","clockseq","seedBytes","msecs","getTime","nsecs","dt","tl","tmh","ii","privEventListeners","eventId","onEventCallback","listener","AudioInputStream","PushAudioInputStream","PullAudioInputStream","PushAudioInputStreamImpl","privEvents","bufferData","readCycle","XMLHttpRequest","toBuffer","turnOn","stream","bitspersample","channelcount","Unknown","manufacturer","model","samplerate","Stream","arrayBuffer","PullAudioInputStreamImpl","privIsClosed","privBufferSize","transmitBuff","readBuff","pulledBytes","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","rt","abs","log","LN2","MessageType","ConnectionMessage","privBody","privMessageType","privSize","CertCheckAgent","privProxyInfo","privDiskCache","supportBuffer","SPEECH_OCSP_CACHE_ROOT","disableStapling","Agent","CreateConnection","HostName","Port","request","socketPromise","enableOCSP","NODE_TLS_REJECT_UNAUTHORIZED","SPEECH_CONDUCT_OCSP_CHECK","secureEndpoint","requestOCSP","forceDisableOCSPStapling","servername","baseAgent","GetProxyAgent","socket","OCSPCheck","privMemCache","httpProxyOptions","port","UserName","Password","resolved","cork","tlsSocket","stapling","destroy","peer","getPeerCertificate","GetIssuer","issuer","ocspRequest","generate","raw","sig","GetResponseFromCache","cacheEntry","VerifyOCSPResponse","uncork","issuerCertificate","fetchIssuer","signature","cachedResponse","diskCacheResponse","isCached","StoreMemoryCacheEntry","cachedOcspResponse","parseResponse","tbsData","tbsResponseData","responses","cachedStartTime","thisUpdate","cachedNextTime","nextUpdate","testTimeOffset","minUpdate","UpdateCache","cacheValue","ocspResponse","certID","GetOCSPResponse","StoreCacheEntry","req","rawResponse","StoreDiskCacheEntry","getAuthorityInfo","cert","parsedUri","pathname","getResponse","required","qs","slashes","protocolre","trimLeft","rules","address","ignore","hash","query","lolcation","finaldestination","protocol","Url","unescape","href","extractProtocol","rest","parser","extracted","instruction","instructions","hostname","username","password","origin","part","char","ins","decode","decodeURIComponent","encode","prefix","pairs","undef","OCSPEvent","privSignature","OCSPMemoryCacheHitEvent","Debug","OCSPCacheMissEvent","OCSPDiskCacheHitEvent","OCSPCacheUpdateNeededEvent","OCSPMemoryCacheStoreEvent","OCSPDiskCacheStoreEvent","OCSPCacheUpdatehCompleteEvent","OCSPStapleReceivedEvent","OCSPCacheEntryExpiredEvent","serialNumber","expireTime","privExpireTime","OCSPCacheEntryNeedsRefreshEvent","startTime","privStartTime","OCSPCacheHitEvent","privExpireTimeString","toLocaleDateString","privStartTimeString","toLocaleTimeString","OCSPVerificationFailedEvent","privError","OCSPCacheFetchErrorEvent","OCSPResponseRetrievedEvent","OCSPCacheUpdateErrorEvent","SubscriberType","privSubscriptionIdCounter","privAddSubscriptions","privRemoveSubscriptions","privDisposedSubscriptions","privDisposeReason","itemIndex","throwIfDisposed","privList","first","add","insertAt","triggerSubscriptions","removeFirst","removeAt","removeLast","remove","count","removedElements","clear","onAdded","addedCallback","subscriptionId","onRemoved","removedCallback","onDisposed","disposedCallback","seperator","toArray","cloneCopy","where","all","select","selectList","List","filteredList","orderBy","compareFn","orderedArray","sort","orderByDesc","clone","concatArray","subscriptions","privPromiseStore","privIsDrainInProgress","privIsDisposing","enqueue","throwIfDispose","deferredSubscriber","privSubscribers","Dequeue","drain","peek","Peek","subs","lists","subscriber","dequeuedItem","pendingItemProcessor","promiseArray","finally","privKeys","privValues","def","keyToUse","clonedMap","destinationCollection","ServicePropertyChannel","AudioSourceEvent","AudioSourceInitializingEvent","AudioSourceReadyEvent","AudioSourceOffEvent","AudioSourceErrorEvent","AudioStreamNodeEvent","AudioStreamNodeAttachingEvent","AudioStreamNodeAttachedEvent","AudioStreamNodeDetachedEvent","AudioStreamNodeErrorEvent","ChunkedArrayBufferStream","targetChunkSize","privTargetChunkSize","privNextBufferReadyBytes","bytesCopiedFromBuffer","privNextBufferToWrite","privNextBufferStartTime","bytesToCopy","targetView","sourceView","privIsWriteEnded","privIsReadEnded","privReaderQueue","streamChunk","throwIfClosed","privInstance","setEventSource","CancellationErrorCode","ServiceEvent","jsonstring","privJsonResult","ConnectionEvent","ConnectionStartEvent","ConnectionEstablishedEvent","ConnectionClosedEvent","ConnectionErrorEvent","privMessage","privType","ConnectionEstablishErrorEvent","statuscode","ConnectionMessageReceivedEvent","networkReceivedTimeISO","privNetworkReceivedTime","ConnectionMessageSentEvent","networkSentTimeISO","privNetworkSentTime","ConnectionState","BackgroundEvent","privPayload","actualSampleRate","desiredSampleRate","actualAudioFrame","audioFrame","downSampleAudioFrame","privActualSampleRate","privDesiredSampleRate","floatTo16BitPCM","setInt16","srcFrame","srcRate","dstRate","ratio","dstLength","dstFrame","Float32Array","srcOffset","dstOffset","nextSrcOffset","accum","mediaStream","outputStream","scriptNode","bufferSize","createScriptProcessor","audioSampleRate","waveStreamEncoder","onaudioprocess","inputFrame","inputBuffer","getChannelData","waveFrame","micInput","createMediaStreamSource","privSpeechProcessorScript","audioWorklet","addModule","workletNode","AudioWorkletNode","connect","destination","privMediaResources","scriptProcessorNode","releaseMediaResources","disconnect","getTracks","track","privRecorder","deviceId","privStreams","privInitializeDeferral","createAudioContext","nav","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","constraints","errorCallback","privMediaStream","active","video","errorMsg","resume","listen","privOutputChunkSize","getAudioContext","MicAudioSource","AUDIOFORMAT","destroyAudioContext","getMicrophoneLabel","label","setWorkletUrl","defaultMicrophoneName","privMicrophoneLabel","microphoneDeviceId","getSettings","enumerateDevices","devices","device","hasClose","suspend","file","filename","privHeaderEnd","privFilename","upload","privSource","privAudioFormatPromise","readHeader","File","headerResult","processHeader","getWord","getUint8","formatSize","getInt32","channelCount","getUint16","getUint32","maxHeaderSize","getWaveFormatPCM","reader","FileReader","onload","readAsArrayBuffer","h","processFile","buff","fileBuffer","AudioFormatToMimeType","audioDestinationId","privPlaybackStarted","privAppendingToBuffer","privMediaSourceOpened","privIsPaused","privAudioBuffer","updateSourceBuffer","privSourceBuffer","handleSourceBufferUpdateEnd","receivedAudio","_","audioBlob","privAudio","notifyPlayback","mimeType","warn","MediaSource","isTypeSupported","Audio","privMediaSource","onsourceopen","addSourceBuffer","onupdate","onupdateend","onupdatestart","currentTime","pause","play","sourceBufferAvailable","binary","shift","appendBuffer","canEndStream","endOfStream","onAudioStart","onended","onAudioEnd","updating","privFd","throwIfNotUndefined","privAudioFormat","headerOffset","privWriteStream","fd","autoClose","bytesWritten","pcmRecorder","audioStream","MediaStream","player","AudioConfig","fromDefaultSpeakerOutput","throwIfNull","privDestination","ProfanityOption","speechImpl","SpeechServiceConnection_IntentRegion","SpeechServiceConnection_Key","hostName","authorizationToken","speechRecognitionLanguage","SpeechServiceAuthorization_Token","channel","currentProperties","profanity","SpeechConfigImpl","SpeechServiceConnection_SynthLanguage","SpeechServiceConnection_SynthVoice","voice","SpeechServiceConnection_SynthOutputFormat","speechConfig","audioConfig","speechConfigImpl","SpeechConnectionFactory","privDisposedRecognizer","Detailed","recognizeOnceAsyncImpl","startContinuousRecognitionAsyncImpl","stopContinuousRecognitionAsyncImpl","errorCb","disposing","implRecognizerStop","configImpl","SpeechServiceRecognizer","autoDetectSourceLanguageConfig","mergeTo","SpeechRecognizer","fromDefaultMicrophoneInput","privDisposed","implCommonRecognizerSetup","privReco","osPlatform","osName","osVersion","appVersion","createRecognizerConfig","createServiceRecognizer","Recognizer","getAuthFromProperties","recognize","stopRecognizing","enabled"],"mappings":"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D,OAAO,IAAIV,EACPD,EAAea,MACf,EACA,KACA,IACA,GACA,EACAF,EACAA,GACA,GACR,IAAK,kCACD,OAAO,IAAIV,EACPD,EAAec,IACf,EACA,KACA,KACA,EACA,GACAH,EACAA,GACA,GACR,IAAK,mCACD,OAAO,IAAIV,EACPD,EAAec,IACf,EACA,KACA,MACA,EACA,GACAH,EACAA,GACA,GACR,IAAK,kCACD,OAAO,IAAIV,EACPD,EAAec,IACf,EACA,KACA,KACA,EACA,GACAH,EACAA,GACA,GACR,IAAK,kCACD,OAAO,IAAIV,EACPD,EAAec,IACf,EACA,KACA,KACA,EACA,GACAH,EACAA,GACA,GACR,IAAK,kCACD,OAAO,IAAIV,EACPD,EAAec,IACf,EACA,KACA,MACA,EACA,GACAH,EACAA,GACA,GACR,IAAK,mCACD,OAAO,IAAIV,EACPD,EAAec,IACf,EACA,KACA,MACA,EACA,GACAH,EACAA,GACA,GACR,IAAK,gCACD,OAAO,IAAIV,EACPD,EAAee,UACf,EACA,KACA,KACA,EACA,GACAJ,EACAA,GACA,GAER,IAAK,2BACD,OAAO,IAAIV,EACPD,EAAeY,IACf,EACA,IACA,KACA,EACA,GACAD,EACA,2BACA,GACR,IAAK,4BACD,OAAO,IAAIV,EACPD,EAAeY,IACf,EACA,KACA,KACA,EACA,GACAD,EACA,4BACA,GACR,IAAK,4BACD,OAAO,IAAIV,EACPD,EAAegB,MACf,EACA,IACA,IACA,EACA,EACAL,EACA,4BACA,GACR,IAAK,2BACD,OAAO,IAAIV,EACPD,EAAeY,IACf,EACA,KACA,KACA,EACA,GACAD,EACA,4BACA,GACR,IAAK,2BACD,OAAO,IAAIV,EACPD,EAAeY,IACf,EACA,KACA,KACA,EACA,GACAD,EACA,4BACA,GACR,IAAK,0BACD,OAAO,IAAIV,EACPD,EAAeY,IACf,EACA,IACA,KACA,EACA,GACAD,EACA,2BACA,GACR,IAAK,4BACD,OAAO,IAAIV,EACPD,EAAeiB,SACf,EACA,KACA,KACA,EACA,GACAN,EACAA,GACA,GACR,IAAK,4BACD,OAAO,IAAIV,EACPD,EAAeiB,SACf,EACA,KACA,KACA,EACA,GACAN,EACAA,GACA,GACR,IAAK,2BACD,OAAO,IAAIV,EACPD,EAAeY,IACf,EACA,KACA,KACA,EACA,GACAD,EACA,4BACA,GACR,IAAK,4BACD,OAAO,IAAIV,EACPD,EAAeY,IACf,EACA,KACA,KACA,EACA,GACAD,EACA,4BACA,GACR,IAAK,kCACD,OAAO,IAAIV,EACPD,EAAec,IACf,EACA,KACA,MACA,EACA,GACAH,EACAA,GACA,GACR,IAAK,mCACD,OAAO,IAAIV,EACPD,EAAec,IACf,EACA,KACA,MACA,EACA,GACAH,EACAA,GACA,GACR,IAAK,4BACD,OAAO,IAAIV,EACPD,EAAeiB,SACf,EACA,KACA,KACA,EACA,GACAN,EACAA,GACA,GACR,IAAK,6BACD,OAAO,IAAIV,EACPD,EAAekB,UACf,EACA,KACA,IACA,EACA,GACAP,EACAA,GACA,GACR,IAAK,6BACD,OAAO,IAAIV,EACPD,EAAekB,UACf,EACA,KACA,IACA,EACA,GACAP,EACAA,GACA,GACR,IAAK,4BACL,QACI,OAAO,IAAIV,EACPD,EAAeY,IACf,EACA,KACA,KACA,EACA,GACA,4BACA,4BACA,MA7WpB,oCAiXW,WACH,OAAOX,EAAsBQ,sCACN,qBAAX37B,OAA0B,kCAAoC,iCAnXlF,GAA2C,KACzB,EAAA47B,qCAAA,mBACT,IAA4BS,qBAAuB,4BAD1C,cAET,IAA4BC,yBAA2B,gCAF9C,cAGT,IAA4BC,0BAA4B,iCAH/C,cAIT,IAA4BC,4BAA8B,mCAJjD,cAKT,IAA4BC,6BAA+B,oCALlD,cAMT,IAA4BC,4BAA8B,mCANjD,cAOT,IAA4BC,4BAA8B,mCAPjD,cAQT,IAA4BC,4BAA8B,mCARjD,cAST,IAA4BC,6BAA+B,oCATlD,cAUT,IAA4BC,0BAA4B,iCAV/C,cAWT,IAA4BC,sBAAwB,6BAX3C,cAYT,IAA4BC,qBAAuB,4BAZ1C,cAaT,IAA4BC,sBAAwB,6BAb3C,cAcT,IAA4BC,sBAAwB,6BAd3C,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","file":"static/js/0.98509559.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","module.exports = require(\"regenerator-runtime\");\n","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// Make sure not to export internal modules.\r\n//\r\nexport * from \"./CognitiveSubscriptionKeyAuthentication\";\r\nexport * from \"./CognitiveTokenAuthentication\";\r\nexport * from \"./IAuthentication\";\r\nexport * from \"./IConnectionFactory\";\r\nexport * from \"./ISynthesisConnectionFactory\";\r\nexport * from \"./IntentConnectionFactory\";\r\nexport * from \"./RecognitionEvents\";\r\nexport * from \"./ServiceRecognizerBase\";\r\nexport * from \"./RecognizerConfig\";\r\nexport * from \"./SpeechServiceInterfaces\";\r\nexport * from \"./WebsocketMessageFormatter\";\r\nexport * from \"./SpeechConnectionFactory\";\r\nexport * from \"./TranscriberConnectionFactory\";\r\nexport * from \"./TranslationConnectionFactory\";\r\nexport * from \"./SpeechSynthesisConnectionFactory\";\r\nexport * from \"./EnumTranslation\";\r\nexport * from \"./ServiceMessages/Enums\";\r\nexport * from \"./ServiceMessages/TranslationSynthesisEnd\";\r\nexport * from \"./ServiceMessages/TranslationHypothesis\";\r\nexport * from \"./ServiceMessages/TranslationPhrase\";\r\nexport * from \"./TranslationServiceRecognizer\";\r\nexport * from \"./ServiceMessages/SpeechDetected\";\r\nexport * from \"./ServiceMessages/SpeechHypothesis\";\r\nexport * from \"./SpeechServiceRecognizer\";\r\nexport * from \"./TranscriptionServiceRecognizer\";\r\nexport * from \"./ServiceMessages/DetailedSpeechPhrase\";\r\nexport * from \"./ServiceMessages/SimpleSpeechPhrase\";\r\nexport * from \"./AddedLmIntent\";\r\nexport * from \"./IntentServiceRecognizer\";\r\nexport * from \"./ServiceMessages/IntentResponse\";\r\nexport * from \"./RequestSession\";\r\nexport * from \"./SpeechContext\";\r\nexport * from \"./DynamicGrammarBuilder\";\r\nexport * from \"./DynamicGrammarInterfaces\";\r\nexport * from \"./DialogServiceAdapter\";\r\nexport * from \"./AgentConfig\";\r\nexport * from \"./Transcription/Exports\";\r\nexport * from \"./ServiceMessages/SynthesisAudioMetadata\";\r\nexport * from \"./SynthesisTurn\";\r\nexport * from \"./SynthesisAdapterBase\";\r\nexport * from \"./SynthesizerConfig\";\r\nexport * from \"./SynthesisContext\";\r\nexport * from \"./SpeakerRecognitionConfig\";\r\nexport * from \"./SpeakerIdMessageAdapter\";\r\n\r\nexport const OutputFormatPropertyName: string = \"OutputFormat\";\r\nexport const CancellationErrorCodePropertyName: string = \"CancellationErrorCode\";\r\nexport const ServicePropertiesPropertyName: string = \"ServiceProperties\";\r\nexport const ForceDictationPropertyName: string = \"ForceDictation\";\r\nexport const AutoDetectSourceLanguagesOpenRangeOptionName: string = \"OpenRange\";\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\n/**\r\n * The error that is thrown when an argument passed in is null.\r\n *\r\n * @export\r\n * @class ArgumentNullError\r\n * @extends {Error}\r\n */\r\nexport class ArgumentNullError extends Error {\r\n\r\n    /**\r\n     * Creates an instance of ArgumentNullError.\r\n     *\r\n     * @param {string} argumentName - Name of the argument that is null\r\n     *\r\n     * @memberOf ArgumentNullError\r\n     */\r\n    public constructor(argumentName: string) {\r\n        super(argumentName);\r\n        this.name = \"ArgumentNull\";\r\n        this.message = argumentName;\r\n    }\r\n}\r\n\r\n/**\r\n * The error that is thrown when an invalid operation is performed in the code.\r\n *\r\n * @export\r\n * @class InvalidOperationError\r\n * @extends {Error}\r\n */\r\nexport class InvalidOperationError extends Error {\r\n\r\n    /**\r\n     * Creates an instance of InvalidOperationError.\r\n     *\r\n     * @param {string} error - The error\r\n     *\r\n     * @memberOf InvalidOperationError\r\n     */\r\n    public constructor(error: string) {\r\n        super(error);\r\n        this.name = \"InvalidOperation\";\r\n        this.message = error;\r\n    }\r\n}\r\n\r\n/**\r\n * The error that is thrown when an object is disposed.\r\n *\r\n * @export\r\n * @class ObjectDisposedError\r\n * @extends {Error}\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class ObjectDisposedError extends Error {\r\n\r\n    /**\r\n     * Creates an instance of ObjectDisposedError.\r\n     *\r\n     * @param {string} objectName - The object that is disposed\r\n     * @param {string} error - The error\r\n     *\r\n     * @memberOf ObjectDisposedError\r\n     */\r\n    public constructor(objectName: string, error?: string) {\r\n        super(error);\r\n        this.name = objectName + \"ObjectDisposed\";\r\n        this.message = error;\r\n    }\r\n}\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * @class Contracts\r\n * @private\r\n */\r\nexport class Contracts {\r\n    public static throwIfNullOrUndefined(param: any, name: string): void {\r\n        if (param === undefined || param === null) {\r\n            throw new Error(\"throwIfNullOrUndefined:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfNull(param: any, name: string): void {\r\n        if (param === null) {\r\n            throw new Error(\"throwIfNull:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfNullOrWhitespace(param: string, name: string): void {\r\n        Contracts.throwIfNullOrUndefined(param, name);\r\n\r\n        if ((\"\" + param).trim().length < 1) {\r\n            throw new Error(\"throwIfNullOrWhitespace:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfDisposed(isDisposed: boolean): void {\r\n        if (isDisposed) {\r\n            throw new Error(\"the object is already disposed\");\r\n        }\r\n    }\r\n\r\n    public static throwIfArrayEmptyOrWhitespace(array: string[], name: string): void {\r\n        Contracts.throwIfNullOrUndefined(array, name);\r\n\r\n        if (array.length === 0) {\r\n            throw new Error(\"throwIfArrayEmptyOrWhitespace:\" + name);\r\n        }\r\n\r\n        for (const item of array) {\r\n            Contracts.throwIfNullOrWhitespace(item, name);\r\n        }\r\n    }\r\n\r\n    public static throwIfFileDoesNotExist(param: any, name: string): void {\r\n        Contracts.throwIfNullOrWhitespace(param, name);\r\n\r\n        // TODO check for file existence.\r\n    }\r\n\r\n    public static throwIfNotUndefined(param: any, name: string): void {\r\n        if (param !== undefined) {\r\n            throw new Error(\"throwIfNotUndefined:\" + name);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst createGuid: () => string = (): string => {\r\n    return uuid();\r\n};\r\n\r\nconst createNoDashGuid: () => string = (): string => {\r\n    return createGuid().replace(new RegExp(\"-\", \"g\"), \"\").toUpperCase();\r\n};\r\n\r\nexport { createGuid, createNoDashGuid };\r\n","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Represents audio stream format used for custom audio input configurations.\r\n * @class AudioStreamFormat\r\n */\r\nexport abstract class AudioStreamFormat {\r\n    /**\r\n     * Creates an audio stream format object representing the default audio stream\r\n     * format (16KHz 16bit mono PCM).\r\n     * @member AudioStreamFormat.getDefaultInputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {AudioStreamFormat} The audio stream format being created.\r\n     */\r\n    public static getDefaultInputFormat(): AudioStreamFormat {\r\n        return AudioStreamFormatImpl.getDefaultInputFormat();\r\n    }\r\n\r\n    /**\r\n     * Creates an audio stream format object with the specified pcm waveformat characteristics.\r\n     * @member AudioStreamFormat.getWaveFormatPCM\r\n     * @function\r\n     * @public\r\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\r\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\r\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\r\n     *        uses one channel and stereo data uses two channels.\r\n     * @returns {AudioStreamFormat} The audio stream format being created.\r\n     */\r\n    public static getWaveFormatPCM(samplesPerSecond: number, bitsPerSample: number, channels: number): AudioStreamFormat {\r\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels);\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioStreamFormat.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * @private\r\n * @class AudioStreamFormatImpl\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class AudioStreamFormatImpl extends AudioStreamFormat {\r\n    protected privHeader: ArrayBuffer;\r\n\r\n    /**\r\n     * Creates an instance with the given values.\r\n     * @constructor\r\n     * @param {number} samplesPerSec - Samples per second.\r\n     * @param {number} bitsPerSample - Bits per sample.\r\n     * @param {number} channels - Number of channels.\r\n     */\r\n    public constructor(samplesPerSec: number = 16000, bitsPerSample: number = 16, channels: number = 1) {\r\n        super();\r\n        this.formatTag = 1;\r\n        this.bitsPerSample = bitsPerSample;\r\n        this.samplesPerSec = samplesPerSec;\r\n        this.channels = channels;\r\n        this.avgBytesPerSec = this.samplesPerSec * this.channels * (this.bitsPerSample / 8);\r\n        this.blockAlign = this.channels * Math.max(this.bitsPerSample, 8);\r\n\r\n        this.privHeader = new ArrayBuffer(44);\r\n\r\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\r\n        const view = new DataView(this.privHeader);\r\n\r\n        /* RIFF identifier */\r\n        this.setString(view, 0, \"RIFF\");\r\n        /* file length */\r\n        view.setUint32(4, 0, true);\r\n        /* RIFF type & Format */\r\n        this.setString(view, 8, \"WAVEfmt \");\r\n        /* format chunk length */\r\n        view.setUint32(16, 16, true);\r\n        /* sample format (raw) */\r\n        view.setUint16(20, 1, true);\r\n        /* channel count */\r\n        view.setUint16(22, this.channels, true);\r\n        /* sample rate */\r\n        view.setUint32(24, this.samplesPerSec, true);\r\n        /* byte rate (sample rate * block align) */\r\n        view.setUint32(28, this.avgBytesPerSec, true);\r\n        /* block align (channel count * bytes per sample) */\r\n        view.setUint16(32, this.channels * (this.bitsPerSample / 8), true);\r\n        /* bits per sample */\r\n        view.setUint16(34, this.bitsPerSample, true);\r\n        /* data chunk identifier */\r\n        this.setString(view, 36, \"data\");\r\n        /* data chunk length */\r\n        view.setUint32(40, 0, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the default input format.\r\n     * @member AudioStreamFormatImpl.getDefaultInputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {AudioStreamFormatImpl} The default input format.\r\n     */\r\n    public static getDefaultInputFormat(): AudioStreamFormatImpl {\r\n        return new AudioStreamFormatImpl();\r\n    }\r\n\r\n    /**\r\n     * Creates an audio context appropriate to current browser\r\n     * @member AudioStreamFormatImpl.getAudioContext\r\n     * @function\r\n     * @public\r\n     * @returns {AudioContext} An audio context instance\r\n     */\r\n    public static getAudioContext(sampleRate?: number): AudioContext {\r\n        // Workaround for Speech SDK bug in Safari.\r\n        const AudioContext = (window as any).AudioContext // our preferred impl\r\n            || (window as any).webkitAudioContext // fallback, mostly when on Safari\r\n            || false; // could not find.\r\n\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\r\n        if (!!AudioContext) {\r\n            if (sampleRate !== undefined && navigator.mediaDevices.getSupportedConstraints().sampleRate) {\r\n                return new AudioContext({ sampleRate });\r\n            } else {\r\n                return new AudioContext();\r\n            }\r\n        } else {\r\n            throw new Error(\"Browser does not support Web Audio API (AudioContext is not available).\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Closes the configuration object.\r\n     * @member AudioStreamFormatImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void { return; }\r\n\r\n    /**\r\n     * The format of the audio, valid values: 1 (PCM)\r\n     * @member AudioStreamFormatImpl.prototype.formatTag\r\n     * @function\r\n     * @public\r\n     */\r\n    public formatTag: number;\r\n\r\n    /**\r\n     * The number of channels, valid values: 1 (Mono).\r\n     * @member AudioStreamFormatImpl.prototype.channels\r\n     * @function\r\n     * @public\r\n     */\r\n    public channels: number;\r\n\r\n    /**\r\n     * The sample rate, valid values: 16000.\r\n     * @member AudioStreamFormatImpl.prototype.samplesPerSec\r\n     * @function\r\n     * @public\r\n     */\r\n    public samplesPerSec: number;\r\n\r\n    /**\r\n     * The bits per sample, valid values: 16\r\n     * @member AudioStreamFormatImpl.prototype.b\r\n     * @function\r\n     * @public\r\n     */\r\n    public bitsPerSample: number;\r\n\r\n    /**\r\n     * Average bytes per second, usually calculated as nSamplesPerSec * nChannels * ceil(wBitsPerSample, 8).\r\n     * @member AudioStreamFormatImpl.prototype.avgBytesPerSec\r\n     * @function\r\n     * @public\r\n     */\r\n    public avgBytesPerSec: number;\r\n\r\n    /**\r\n     * The size of a single frame, valid values: nChannels * ceil(wBitsPerSample, 8).\r\n     * @member AudioStreamFormatImpl.prototype.blockAlign\r\n     * @function\r\n     * @public\r\n     */\r\n    public blockAlign: number;\r\n\r\n    public get header(): ArrayBuffer {\r\n        return this.privHeader;\r\n    }\r\n\r\n    protected setString = (view: DataView, offset: number, str: string): void => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint8(offset + i, str.charCodeAt(i));\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class HeaderNames {\r\n    public static AuthKey: string = \"Ocp-Apim-Subscription-Key\";\r\n    public static ConnectionId: string = \"X-ConnectionId\";\r\n    public static ContentType: string = \"Content-Type\";\r\n    public static CustomCommandsAppId: string = \"X-CommandsAppId\";\r\n    public static Path: string = \"Path\";\r\n    public static RequestId: string = \"X-RequestId\";\r\n    public static RequestStreamId: string = \"X-StreamId\";\r\n    public static RequestTimestamp: string = \"X-Timestamp\";\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { EventType, PlatformEvent } from \"../common/Exports\";\r\n\r\nexport class SpeechRecognitionEvent extends PlatformEvent {\r\n    private privRequestId: string;\r\n    private privSessionId: string;\r\n\r\n    constructor(eventName: string, requestId: string, sessionId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n\r\n        this.privRequestId = requestId;\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n\r\nexport class RecognitionTriggeredEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    constructor(requestId: string, sessionId: string, audioSourceId: string, audioNodeId: string) {\r\n        super(\"RecognitionTriggeredEvent\", requestId, sessionId);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class ListeningStartedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    constructor(requestId: string, sessionId: string, audioSourceId: string, audioNodeId: string) {\r\n        super(\"ListeningStartedEvent\", requestId, sessionId);\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class ConnectingToServiceEvent extends SpeechRecognitionEvent {\r\n    private privAuthFetchEventid: string;\r\n\r\n    constructor(requestId: string, authFetchEventid: string, sessionId: string) {\r\n        super(\"ConnectingToServiceEvent\", requestId, sessionId);\r\n        this.privAuthFetchEventid = authFetchEventid;\r\n    }\r\n\r\n    public get authFetchEventid(): string {\r\n        return this.privAuthFetchEventid;\r\n    }\r\n}\r\n\r\nexport class RecognitionStartedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAuthFetchEventId: string;\r\n\r\n    constructor(requestId: string, audioSourceId: string, audioNodeId: string, authFetchEventId: string, sessionId: string) {\r\n        super(\"RecognitionStartedEvent\", requestId, sessionId);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n\r\nexport enum RecognitionCompletionStatus {\r\n    Success,\r\n    AudioSourceError,\r\n    AudioSourceTimeout,\r\n    AuthTokenFetchError,\r\n    AuthTokenFetchTimeout,\r\n    UnAuthorized,\r\n    ConnectTimeout,\r\n    ConnectError,\r\n    ClientRecognitionActivityTimeout,\r\n    UnknownError,\r\n}\r\n\r\nexport class RecognitionEndedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAuthFetchEventId: string;\r\n    private privServiceTag: string;\r\n    private privStatus: RecognitionCompletionStatus;\r\n    private privError: string;\r\n\r\n    constructor(\r\n        requestId: string,\r\n        audioSourceId: string,\r\n        audioNodeId: string,\r\n        authFetchEventId: string,\r\n        sessionId: string,\r\n        serviceTag: string,\r\n        status: RecognitionCompletionStatus,\r\n        error: string) {\r\n\r\n        super(\"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? EventType.Info : EventType.Error);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.privStatus = status;\r\n        this.privError = error;\r\n        this.privServiceTag = serviceTag;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n\r\n    public get serviceTag(): string {\r\n        return this.privServiceTag;\r\n    }\r\n\r\n    public get status(): RecognitionCompletionStatus {\r\n        return this.privStatus;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport interface IAuthentication {\r\n    fetch(authFetchEventId: string): Promise<AuthInfo>;\r\n    fetchOnExpiry(authFetchEventId: string): Promise<AuthInfo>;\r\n}\r\n\r\nexport class AuthInfo {\r\n    private privHeaderName: string;\r\n    private privToken: string;\r\n\r\n    public constructor(headerName: string, token: string) {\r\n        this.privHeaderName = headerName;\r\n        this.privToken = token;\r\n    }\r\n\r\n    public get headerName(): string {\r\n        return this.privHeaderName;\r\n    }\r\n\r\n    public get token(): string {\r\n        return this.privToken;\r\n    }\r\n}\r\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var defineProperty = require(\"./defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread2;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\n\r\nexport enum EventType {\r\n    Debug,\r\n    Info,\r\n    Warning,\r\n    Error,\r\n}\r\n\r\nexport class PlatformEvent {\r\n    private privName: string;\r\n    private privEventId: string;\r\n    private privEventTime: string;\r\n    private privEventType: EventType;\r\n    private privMetadata: IStringDictionary<string>;\r\n\r\n    constructor(eventName: string, eventType: EventType) {\r\n        this.privName = eventName;\r\n        this.privEventId = createNoDashGuid();\r\n        this.privEventTime = new Date().toISOString();\r\n        this.privEventType = eventType;\r\n        this.privMetadata = { };\r\n    }\r\n\r\n    public get name(): string {\r\n        return this.privName;\r\n    }\r\n\r\n    public get eventId(): string {\r\n        return this.privEventId;\r\n    }\r\n\r\n    public get eventTime(): string {\r\n        return this.privEventTime;\r\n    }\r\n\r\n    public get eventType(): EventType {\r\n        return this.privEventType;\r\n    }\r\n\r\n    public get metadata(): IStringDictionary<string> {\r\n        return this.privMetadata;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    IAudioDestination,\r\n    IStreamChunk,\r\n    Stream,\r\n} from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    AudioStreamFormat,\r\n    PushAudioOutputStreamCallback\r\n} from \"../Exports\";\r\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat\";\r\n\r\n/**\r\n * Represents audio output stream used for custom audio output configurations.\r\n * @class AudioOutputStream\r\n */\r\nexport abstract class AudioOutputStream {\r\n\r\n    /**\r\n     * Creates and initializes an instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() { }\r\n\r\n    /**\r\n     * Sets the format of the AudioOutputStream\r\n     * Note: the format is set by the synthesizer before writing. Do not set it before passing it to AudioConfig\r\n     * @member AudioOutputStream.prototype.format\r\n     */\r\n    public abstract set format(format: AudioStreamFormat);\r\n\r\n    /**\r\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\r\n     * @member AudioOutputStream.createPullStream\r\n     * @function\r\n     * @public\r\n     * @returns {PullAudioOutputStream} The audio output stream being created.\r\n     */\r\n    public static createPullStream(): PullAudioOutputStream {\r\n        return PullAudioOutputStream.create();\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioOutputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio output stream used for custom audio output configurations.\r\n * @class PullAudioOutputStream\r\n */\r\nexport abstract class PullAudioOutputStream extends AudioOutputStream {\r\n\r\n    /**\r\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\r\n     * @member PullAudioOutputStream.create\r\n     * @function\r\n     * @public\r\n     * @returns {PullAudioOutputStream} The push audio output stream being created.\r\n     */\r\n    public static create(): PullAudioOutputStream {\r\n        return new PullAudioOutputStreamImpl();\r\n    }\r\n\r\n    /**\r\n     * Reads audio data from the internal buffer.\r\n     * @member PullAudioOutputStream.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - An ArrayBuffer to store the read data.\r\n     * @returns {Promise<number>} Audio buffer length has been read.\r\n     */\r\n    public abstract read(dataBuffer: ArrayBuffer): Promise<number>;\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PullAudioOutputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio output stream used for custom audio output configurations.\r\n * @private\r\n * @class PullAudioOutputStreamImpl\r\n */\r\nexport class PullAudioOutputStreamImpl extends PullAudioOutputStream implements IAudioDestination {\r\n    private privFormat: AudioOutputFormatImpl;\r\n    private privId: string;\r\n    private privStream: Stream<ArrayBuffer>;\r\n    private privLastChunkView: Int8Array;\r\n\r\n    /**\r\n     * Creates and initializes an instance with the given values.\r\n     * @constructor\r\n     */\r\n    public constructor() {\r\n        super();\r\n        this.privId = createNoDashGuid();\r\n        this.privStream = new Stream<ArrayBuffer>();\r\n    }\r\n\r\n    /**\r\n     * Sets the format information to the stream. For internal use only.\r\n     * @param {AudioStreamFormat} format - the format to be set.\r\n     */\r\n    public set format(format: AudioStreamFormat) {\r\n        if (format === undefined || format === null) {\r\n            this.privFormat = AudioOutputFormatImpl.getDefaultOutputFormat();\r\n        }\r\n        this.privFormat = format as AudioOutputFormatImpl;\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): AudioStreamFormat {\r\n        return this.privFormat;\r\n    }\r\n\r\n    /**\r\n     * Checks if the stream is closed\r\n     * @member PullAudioOutputStreamImpl.prototype.isClosed\r\n     * @property\r\n     * @public\r\n     */\r\n    public get isClosed(): boolean {\r\n        return this.privStream.isClosed;\r\n    }\r\n\r\n    /**\r\n     * Gets the id of the stream\r\n     * @member PullAudioOutputStreamImpl.prototype.id\r\n     * @property\r\n     * @public\r\n     */\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    /**\r\n     * Reads audio data from the internal buffer.\r\n     * @member PullAudioOutputStreamImpl.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - An ArrayBuffer to store the read data.\r\n     * @returns {Promise<number>} - Audio buffer length has been read.\r\n     */\r\n    public async read(dataBuffer: ArrayBuffer): Promise<number> {\r\n        const intView: Int8Array = new Int8Array(dataBuffer);\r\n        let totalBytes: number = 0;\r\n\r\n        if (this.privLastChunkView !== undefined) {\r\n            if (this.privLastChunkView.length > dataBuffer.byteLength) {\r\n                intView.set(this.privLastChunkView.slice(0, dataBuffer.byteLength));\r\n                this.privLastChunkView = this.privLastChunkView.slice(dataBuffer.byteLength);\r\n                return Promise.resolve(dataBuffer.byteLength);\r\n            }\r\n            intView.set(this.privLastChunkView);\r\n            totalBytes = this.privLastChunkView.length;\r\n            this.privLastChunkView = undefined;\r\n        }\r\n\r\n        // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\r\n        while (totalBytes < dataBuffer.byteLength && !this.privStream.isReadEnded) {\r\n            const chunk: IStreamChunk<ArrayBuffer> = await this.privStream.read();\r\n            if (chunk !== undefined && !chunk.isEnd) {\r\n                let tmpBuffer: ArrayBuffer;\r\n                if (chunk.buffer.byteLength > dataBuffer.byteLength - totalBytes) {\r\n                    tmpBuffer = chunk.buffer.slice(0, dataBuffer.byteLength - totalBytes);\r\n                    this.privLastChunkView = new Int8Array(chunk.buffer.slice(dataBuffer.byteLength - totalBytes));\r\n                } else {\r\n                    tmpBuffer = chunk.buffer;\r\n                }\r\n                intView.set(new Int8Array(tmpBuffer), totalBytes);\r\n                totalBytes += tmpBuffer.byteLength;\r\n            } else {\r\n                await this.privStream.readEnded();\r\n            }\r\n        }\r\n        return totalBytes;\r\n    }\r\n\r\n    /**\r\n     * Writes the audio data specified by making an internal copy of the data.\r\n     * @member PullAudioOutputStreamImpl.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\r\n     */\r\n    public write(dataBuffer: ArrayBuffer): void {\r\n        Contracts.throwIfNullOrUndefined(this.privStream, \"must set format before writing\");\r\n        this.privStream.writeStreamChunk({\r\n            buffer: dataBuffer,\r\n            isEnd: false,\r\n            timeReceived: Date.now()\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PullAudioOutputStreamImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        this.privStream.close();\r\n    }\r\n}\r\n\r\n/*\r\n * Represents audio output stream used for custom audio output configurations.\r\n * @class PushAudioOutputStream\r\n */\r\nexport abstract class PushAudioOutputStream extends AudioOutputStream {\r\n    /**\r\n     * Creates and initializes and instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() { super(); }\r\n\r\n    /**\r\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\r\n     * write() and close() methods.\r\n     * @member PushAudioOutputStream.create\r\n     * @function\r\n     * @public\r\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\r\n     *        derived from PushAudioOutputStreamCallback\r\n     * @returns {PushAudioOutputStream} The push audio output stream being created.\r\n     */\r\n    public static create(callback: PushAudioOutputStreamCallback): PushAudioOutputStream {\r\n        return new PushAudioOutputStreamImpl(callback);\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member PushAudioOutputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n\r\n}\r\n\r\n/**\r\n * Represents audio output stream used for custom audio output configurations.\r\n * @private\r\n * @class PushAudioOutputStreamImpl\r\n */\r\nexport class PushAudioOutputStreamImpl extends PushAudioOutputStream implements IAudioDestination {\r\n    private readonly privId: string;\r\n    private privCallback: PushAudioOutputStreamCallback;\r\n\r\n    /**\r\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\r\n     * read() and close() methods.\r\n     * @constructor\r\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\r\n     *        derived from PushAudioOutputStreamCallback\r\n     */\r\n    public constructor(callback: PushAudioOutputStreamCallback) {\r\n        super();\r\n        this.privId = createNoDashGuid();\r\n        this.privCallback = callback;\r\n    }\r\n\r\n    // tslint:disable-next-line:no-empty\r\n    public set format(format: AudioStreamFormat) { }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        if (!!this.privCallback.write) {\r\n            this.privCallback.write(buffer);\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        if (!!this.privCallback.close) {\r\n            this.privCallback.close();\r\n        }\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SpeechSynthesisResult } from \"./Exports\";\r\n\r\n/**\r\n * Defines contents of speech synthesis events.\r\n * @class SpeechSynthesisEventArgs\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisEventArgs {\r\n    private readonly privResult: SpeechSynthesisResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {SpeechSynthesisResult} result - The speech synthesis result.\r\n     */\r\n    public constructor(result: SpeechSynthesisResult) {\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the synthesis result.\r\n     * @member SpeechSynthesisEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechSynthesisResult} the synthesis result.\r\n     */\r\n    public get result(): SpeechSynthesisResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason } from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech synthesis.\r\n * @class SpeechSynthesisResult\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisResult {\r\n    private privResultId: string;\r\n    private privReason: ResultReason;\r\n    private privAudioData: ArrayBuffer;\r\n    private privErrorDetails: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {number} audioData - The offset into the stream.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    constructor(resultId?: string, reason?: ResultReason,  audioData?: ArrayBuffer,\r\n                errorDetails?: string, properties?: PropertyCollection) {\r\n        this.privResultId = resultId;\r\n        this.privReason = reason;\r\n        this.privAudioData = audioData;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privProperties = properties;\r\n    }\r\n\r\n    /**\r\n     * Specifies the result identifier.\r\n     * @member SpeechSynthesisResult.prototype.resultId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Specifies the result identifier.\r\n     */\r\n    public get resultId(): string {\r\n        return this.privResultId;\r\n    }\r\n\r\n    /**\r\n     * Specifies status of the result.\r\n     * @member SpeechSynthesisResult.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {ResultReason} Specifies status of the result.\r\n     */\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * The synthesized audio data\r\n     * @member SpeechSynthesisResult.prototype.audioData\r\n     * @function\r\n     * @public\r\n     * @returns {ArrayBuffer} The synthesized audio data.\r\n     */\r\n    public get audioData(): ArrayBuffer {\r\n        return this.privAudioData;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful synthesis, provides details of the occurred error.\r\n     * @member SpeechSynthesisResult.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} a brief description of an error.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     *  The set of properties exposed in the result.\r\n     * @member SpeechSynthesisResult.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The set of properties exposed in the result.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines contents of speech synthesis word boundary event.\r\n * @class SpeechSynthesisWordBoundaryEventArgs\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisWordBoundaryEventArgs {\r\n    private privAudioOffset: number;\r\n    private privText: string;\r\n    private privWordLength: number;\r\n    private privTextOffset: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {string} text - The text.\r\n     * @param {number} wordLength - The length of the word.\r\n     * @param {number} textOffset - The text offset.\r\n     */\r\n    public constructor(audioOffset: number, text: string, wordLength: number, textOffset: number) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privText = text;\r\n        this.privWordLength = wordLength;\r\n        this.privTextOffset = textOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the text of the word boundary event.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} the text.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n\r\n    /**\r\n     * Specifies the word length\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.wordLength\r\n     * @function\r\n     * @public\r\n     * @returns {number} the word length\r\n     */\r\n    public get wordLength(): number {\r\n        return this.privWordLength;\r\n    }\r\n\r\n    /**\r\n     * Specifies the text offset.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.textOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the text offset.\r\n     */\r\n    public get textOffset(): number {\r\n        return this.privTextOffset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines contents of speech synthesis bookmark event.\r\n * @class SpeechSynthesisBookmarkEventArgs\r\n * Added in version 1.16.0\r\n */\r\nexport class SpeechSynthesisBookmarkEventArgs {\r\n    private privAudioOffset: number;\r\n    private privText: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {string} text - The bookmark text.\r\n     */\r\n    public constructor(audioOffset: number, text: string) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privText = text;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the bookmark.\r\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} the bookmark text.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines contents of speech synthesis viseme event.\r\n * @class SpeechSynthesisVisemeEventArgs\r\n * Added in version 1.16.0\r\n */\r\nexport class SpeechSynthesisVisemeEventArgs {\r\n    private privAudioOffset: number;\r\n    private privVisemeId: number;\r\n    private privAnimation: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {number} visemeId - The viseme ID.\r\n     * @param {string} animation - The animation, could be in svg or other format.\r\n     */\r\n    public constructor(audioOffset: number, visemeId: number, animation: string) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privVisemeId = visemeId;\r\n        this.privAnimation = animation;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisVisemeEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the viseme ID.\r\n     * @member SpeechSynthesisVisemeEventArgs.prototype.visemeId\r\n     * @function\r\n     * @public\r\n     * @returns {number} the viseme ID.\r\n     */\r\n    public get visemeId(): number {\r\n        return this.privVisemeId;\r\n    }\r\n\r\n    /**\r\n     * Specifies the animation.\r\n     * @member SpeechSynthesisVisemeEventArgs.prototype.animation\r\n     * @function\r\n     * @public\r\n     * @returns {string} the animation, could be in svg or other format.\r\n     */\r\n    public get animation(): string {\r\n        return this.privAnimation;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n    ConnectionClosedEvent,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    EventSource,\r\n    IAudioDestination,\r\n    IConnection,\r\n    IDisposable,\r\n    MessageType,\r\n    ServiceEvent,\r\n} from \"../common/Exports\";\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechSynthesisBookmarkEventArgs,\r\n    SpeechSynthesisEventArgs,\r\n    SpeechSynthesisResult,\r\n    SpeechSynthesisVisemeEventArgs,\r\n    SpeechSynthesisWordBoundaryEventArgs,\r\n    SpeechSynthesizer,\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    AgentConfig,\r\n    CancellationErrorCodePropertyName,\r\n    ISynthesisConnectionFactory,\r\n    MetadataType,\r\n    SynthesisAudioMetadata,\r\n    SynthesisContext,\r\n    SynthesisTurn,\r\n    SynthesizerConfig\r\n} from \"./Exports\";\r\nimport { AuthInfo, IAuthentication } from \"./IAuthentication\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\nexport class SynthesisAdapterBase implements IDisposable {\r\n    protected privSynthesisTurn: SynthesisTurn;\r\n    protected privConnectionId: string;\r\n    protected privSynthesizerConfig: SynthesizerConfig;\r\n    protected privSpeechSynthesizer: SpeechSynthesizer;\r\n    protected privSuccessCallback: (e: SpeechSynthesisResult) => void;\r\n    protected privErrorCallback: (e: string) => void;\r\n\r\n    public get synthesisContext(): SynthesisContext {\r\n        return this.privSynthesisContext;\r\n    }\r\n\r\n    public get agentConfig(): AgentConfig {\r\n        return this.privAgentConfig;\r\n    }\r\n\r\n    public get connectionEvents(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionEvents;\r\n    }\r\n\r\n    public get serviceEvents(): EventSource<ServiceEvent> {\r\n        return this.privServiceEvents;\r\n    }\r\n\r\n    protected speakOverride: (ssml: string, requestId: string, sc: (e: SpeechSynthesisResult) => void, ec: (e: string) => void) => any = undefined;\r\n\r\n    // Called when telemetry data is sent to the service.\r\n    // Used for testing Telemetry capture.\r\n    public static telemetryData: (json: string) => void;\r\n    public static telemetryDataEnabled: boolean = true;\r\n\r\n    public set activityTemplate(messagePayload: string) { this.privActivityTemplate = messagePayload; }\r\n    public get activityTemplate(): string { return this.privActivityTemplate; }\r\n\r\n    protected receiveMessageOverride: () => any = undefined;\r\n\r\n    protected connectImplOverride: (isUnAuthorized: boolean) => any = undefined;\r\n\r\n    protected configConnectionOverride: (connection: IConnection) => any = undefined;\r\n\r\n    public set audioOutputFormat(format: AudioOutputFormatImpl) {\r\n        this.privAudioOutputFormat = format;\r\n        this.privSynthesisTurn.audioOutputFormat = format;\r\n        if (this.privSessionAudioDestination !== undefined) {\r\n            this.privSessionAudioDestination.format = format;\r\n        }\r\n        if (this.synthesisContext !== undefined) {\r\n            this.synthesisContext.audioOutputFormat = format;\r\n        }\r\n    }\r\n    private privAuthentication: IAuthentication;\r\n    private privConnectionFactory: ISynthesisConnectionFactory;\r\n\r\n    // A promise for a configured connection.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionConfigurationPromise: Promise<IConnection>;\r\n\r\n    // A promise for a connection, but one that has not had the speech context sent yet.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionPromise: Promise<IConnection>;\r\n    private privAuthFetchEventId: string;\r\n    private privIsDisposed: boolean;\r\n    private privConnectionEvents: EventSource<ConnectionEvent>;\r\n    private privServiceEvents: EventSource<ServiceEvent>;\r\n    private privSynthesisContext: SynthesisContext;\r\n    private privAgentConfig: AgentConfig;\r\n    private privServiceHasSentMessage: boolean;\r\n    private privActivityTemplate: string;\r\n    private privAudioOutputFormat: AudioOutputFormatImpl;\r\n    private privSessionAudioDestination: IAudioDestination;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        synthesizerConfig: SynthesizerConfig,\r\n        speechSynthesizer: SpeechSynthesizer,\r\n        audioDestination: IAudioDestination) {\r\n\r\n        if (!authentication) {\r\n            throw new ArgumentNullError(\"authentication\");\r\n        }\r\n\r\n        if (!connectionFactory) {\r\n            throw new ArgumentNullError(\"connectionFactory\");\r\n        }\r\n\r\n        if (!synthesizerConfig) {\r\n            throw new ArgumentNullError(\"synthesizerConfig\");\r\n        }\r\n\r\n        this.privAuthentication = authentication;\r\n        this.privConnectionFactory = connectionFactory;\r\n        this.privSynthesizerConfig = synthesizerConfig;\r\n        this.privIsDisposed = false;\r\n        this.privSpeechSynthesizer = speechSynthesizer;\r\n        this.privSessionAudioDestination = audioDestination;\r\n        this.privSynthesisTurn = new SynthesisTurn();\r\n        this.privConnectionEvents = new EventSource<ConnectionEvent>();\r\n        this.privServiceEvents = new EventSource<ServiceEvent>();\r\n        this.privSynthesisContext = new SynthesisContext(this.privSpeechSynthesizer);\r\n        this.privAgentConfig = new AgentConfig();\r\n\r\n        this.connectionEvents.attach((connectionEvent: ConnectionEvent): void => {\r\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                const connectionClosedEvent = connectionEvent as ConnectionClosedEvent;\r\n                if (connectionClosedEvent.statusCode !== 1000) {\r\n                    this.cancelSynthesisLocal(CancellationReason.Error,\r\n                        connectionClosedEvent.statusCode === 1007 ? CancellationErrorCode.BadRequestParameters : CancellationErrorCode.ConnectionFailure,\r\n                        connectionClosedEvent.reason + \" websocket error code: \" + connectionClosedEvent.statusCode);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public static addHeader(audio: ArrayBuffer, format: AudioOutputFormatImpl): ArrayBuffer {\r\n        if (!format.hasHeader) {\r\n            return audio;\r\n        }\r\n        format.updateHeader(audio.byteLength);\r\n        const tmp = new Uint8Array(audio.byteLength + format.header.byteLength);\r\n        tmp.set(new Uint8Array(format.header), 0);\r\n        tmp.set(new Uint8Array(audio), format.header.byteLength);\r\n        return tmp.buffer;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        this.privIsDisposed = true;\r\n        if (this.privSessionAudioDestination !== undefined) {\r\n            this.privSessionAudioDestination.close();\r\n        }\r\n        if (this.privConnectionConfigurationPromise) {\r\n            const connection: IConnection = await this.privConnectionConfigurationPromise;\r\n            await connection.dispose(reason);\r\n        }\r\n    }\r\n\r\n    public async connect(): Promise<void> {\r\n        await this.connectImpl();\r\n    }\r\n\r\n    public async sendNetworkMessage(path: string, payload: string | ArrayBuffer): Promise<void> {\r\n        const type: MessageType = typeof payload === \"string\" ? MessageType.Text : MessageType.Binary;\r\n        const contentType: string = typeof payload === \"string\" ? \"application/json\" : \"\";\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        return connection.send(new SpeechConnectionMessage(type, path, this.privSynthesisTurn.requestId, contentType, payload));\r\n    }\r\n\r\n    public async Speak(\r\n        text: string,\r\n        isSSML: boolean,\r\n        requestId: string,\r\n        successCallback: (e: SpeechSynthesisResult) => void,\r\n        errorCallBack: (e: string) => void,\r\n        audioDestination: IAudioDestination,\r\n    ): Promise<void> {\r\n\r\n        let ssml: string;\r\n\r\n        if (isSSML) {\r\n            ssml = text;\r\n        } else {\r\n            ssml = this.privSpeechSynthesizer.buildSsml(text);\r\n        }\r\n\r\n        if (this.speakOverride !== undefined) {\r\n            return this.speakOverride(ssml, requestId, successCallback, errorCallBack);\r\n        }\r\n\r\n        this.privSuccessCallback = successCallback;\r\n        this.privErrorCallback = errorCallBack;\r\n\r\n        this.privSynthesisTurn.startNewSynthesis(requestId, text, isSSML, audioDestination);\r\n\r\n        try {\r\n            await this.connectImpl();\r\n            const connection: IConnection = await this.fetchConnection();\r\n            await this.sendSynthesisContext(connection);\r\n            await this.sendSsmlMessage(connection, ssml, requestId);\r\n            const synthesisStartEventArgs: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(\r\n                new SpeechSynthesisResult(\r\n                    requestId,\r\n                    ResultReason.SynthesizingAudioStarted,\r\n                )\r\n            );\r\n\r\n            if (!!this.privSpeechSynthesizer.synthesisStarted) {\r\n                this.privSpeechSynthesizer.synthesisStarted(this.privSpeechSynthesizer, synthesisStartEventArgs);\r\n            }\r\n\r\n            const messageRetrievalPromise = this.receiveMessage();\r\n        } catch (e) {\r\n            this.cancelSynthesisLocal(CancellationReason.Error, CancellationErrorCode.ConnectionFailure, e);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    // Cancels synthesis.\r\n    protected cancelSynthesis(\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n        const result: SpeechSynthesisResult = new SpeechSynthesisResult(\r\n            requestId,\r\n            ResultReason.Canceled,\r\n            undefined,\r\n            error,\r\n            properties\r\n        );\r\n\r\n        if (!!this.privSpeechSynthesizer.SynthesisCanceled) {\r\n            const cancelEvent: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(result);\r\n            try {\r\n                this.privSpeechSynthesizer.SynthesisCanceled(this.privSpeechSynthesizer, cancelEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    // Cancels synthesis.\r\n    protected cancelSynthesisLocal(\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        if (!!this.privSynthesisTurn.isSynthesizing) {\r\n            this.privSynthesisTurn.onStopSynthesizing();\r\n\r\n            this.cancelSynthesis(\r\n                this.privSynthesisTurn.requestId,\r\n                cancellationReason,\r\n                errorCode,\r\n                error);\r\n        }\r\n    }\r\n\r\n    protected processTypeSpecificMessages(\r\n        connectionMessage: SpeechConnectionMessage,\r\n        successCallback?: (e: SpeechSynthesisResult) => void,\r\n        errorCallBack?: (e: string) => void): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected async receiveMessage(): Promise<void> {\r\n        try {\r\n            const connection: IConnection = await this.fetchConnection();\r\n            const message: ConnectionMessage = await connection.read();\r\n\r\n            if (this.receiveMessageOverride !== undefined) {\r\n                return this.receiveMessageOverride();\r\n            }\r\n            if (this.privIsDisposed) {\r\n                // We're done.\r\n                return;\r\n            }\r\n\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!message) {\r\n                if (!this.privSynthesisTurn.isSynthesizing) {\r\n                    return;\r\n                } else {\r\n                    return this.receiveMessage();\r\n                }\r\n            }\r\n\r\n            this.privServiceHasSentMessage = true;\r\n\r\n            const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\r\n\r\n            if (connectionMessage.requestId.toLowerCase() === this.privSynthesisTurn.requestId.toLowerCase()) {\r\n                switch (connectionMessage.path.toLowerCase()) {\r\n                    case \"turn.start\":\r\n                        this.privSynthesisTurn.onServiceTurnStartResponse();\r\n                        break;\r\n                    case \"response\":\r\n                        this.privSynthesisTurn.onServiceResponseMessage(connectionMessage.textBody);\r\n                        break;\r\n                    case \"audio\":\r\n                        if (this.privSynthesisTurn.streamId.toLowerCase() === connectionMessage.streamId.toLowerCase()\r\n                            && !!connectionMessage.binaryBody) {\r\n                            this.privSynthesisTurn.onAudioChunkReceived(connectionMessage.binaryBody);\r\n                            if (!!this.privSpeechSynthesizer.synthesizing) {\r\n                                try {\r\n                                    const audioWithHeader = SynthesisAdapterBase.addHeader(connectionMessage.binaryBody, this.privSynthesisTurn.audioOutputFormat);\r\n                                    const ev: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(\r\n                                        new SpeechSynthesisResult(\r\n                                            this.privSynthesisTurn.requestId,\r\n                                            ResultReason.SynthesizingAudio,\r\n                                            audioWithHeader));\r\n                                    this.privSpeechSynthesizer.synthesizing(this.privSpeechSynthesizer, ev);\r\n                                } catch (error) {\r\n                                    // Not going to let errors in the event handler\r\n                                    // trip things up.\r\n                                }\r\n                            }\r\n                            if (this.privSessionAudioDestination !== undefined) {\r\n                                this.privSessionAudioDestination.write(connectionMessage.binaryBody);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"audio.metadata\":\r\n                        const metadataList = SynthesisAudioMetadata.fromJSON(connectionMessage.textBody).Metadata;\r\n                        for (const metadata of metadataList) {\r\n                            switch (metadata.Type) {\r\n                                case MetadataType.WordBoundary:\r\n                                    this.privSynthesisTurn.onWordBoundaryEvent(metadata.Data.text.Text);\r\n\r\n                                    const wordBoundaryEventArgs: SpeechSynthesisWordBoundaryEventArgs = new SpeechSynthesisWordBoundaryEventArgs(\r\n                                        metadata.Data.Offset,\r\n                                        metadata.Data.text.Text,\r\n                                        metadata.Data.text.Length,\r\n                                        this.privSynthesisTurn.currentTextOffset);\r\n\r\n                                    if (!!this.privSpeechSynthesizer.wordBoundary) {\r\n                                        try {\r\n                                            this.privSpeechSynthesizer.wordBoundary(this.privSpeechSynthesizer, wordBoundaryEventArgs);\r\n                                        } catch (error) {\r\n                                            // Not going to let errors in the event handler\r\n                                            // trip things up.\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case MetadataType.Bookmark:\r\n                                    const bookmarkEventArgs: SpeechSynthesisBookmarkEventArgs = new SpeechSynthesisBookmarkEventArgs(\r\n                                        metadata.Data.Offset,\r\n                                        metadata.Data.Bookmark);\r\n\r\n                                    if (!!this.privSpeechSynthesizer.bookmarkReached) {\r\n                                        try {\r\n                                            this.privSpeechSynthesizer.bookmarkReached(this.privSpeechSynthesizer, bookmarkEventArgs);\r\n                                        } catch (error) {\r\n                                            // Not going to let errors in the event handler\r\n                                            // trip things up.\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case MetadataType.Viseme:\r\n\r\n                                    this.privSynthesisTurn.onVisemeMetadataReceived(metadata);\r\n\r\n                                    if (metadata.Data.IsLastAnimation) {\r\n                                        const visemeEventArgs: SpeechSynthesisVisemeEventArgs = new SpeechSynthesisVisemeEventArgs(\r\n                                            metadata.Data.Offset,\r\n                                            metadata.Data.VisemeId,\r\n                                            this.privSynthesisTurn.getAndClearVisemeAnimation());\r\n\r\n                                        if (!!this.privSpeechSynthesizer.visemeReceived) {\r\n                                            try {\r\n                                                this.privSpeechSynthesizer.visemeReceived(this.privSpeechSynthesizer, visemeEventArgs);\r\n                                            } catch (error) {\r\n                                                // Not going to let errors in the event handler\r\n                                                // trip things up.\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"turn.end\":\r\n                        this.privSynthesisTurn.onServiceTurnEndResponse();\r\n                        let result: SpeechSynthesisResult;\r\n                        try {\r\n                            const audioBuffer: ArrayBuffer = await this.privSynthesisTurn.getAllReceivedAudioWithHeader();\r\n                            result = new SpeechSynthesisResult(\r\n                                this.privSynthesisTurn.requestId,\r\n                                ResultReason.SynthesizingAudioCompleted,\r\n                                audioBuffer\r\n                            );\r\n                            if (!!this.privSuccessCallback) {\r\n                                this.privSuccessCallback(result);\r\n                            }\r\n                        } catch (error) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(error);\r\n                            }\r\n                        }\r\n                        if (this.privSpeechSynthesizer.synthesisCompleted) {\r\n                            try {\r\n                                this.privSpeechSynthesizer.synthesisCompleted(\r\n                                    this.privSpeechSynthesizer,\r\n                                    new SpeechSynthesisEventArgs(result)\r\n                                );\r\n                            } catch (e) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n\r\n                        if (!this.processTypeSpecificMessages(connectionMessage)) {\r\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\r\n                            if (!!this.privServiceEvents) {\r\n                                this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\r\n                            }\r\n                        }\r\n\r\n                }\r\n            }\r\n\r\n            return this.receiveMessage();\r\n\r\n        } catch (e) {\r\n            // TODO: What goes here?\r\n        }\r\n    }\r\n\r\n    protected sendSynthesisContext = (connection: IConnection): Promise<void> => {\r\n        const synthesisContextJson = this.synthesisContext.toJSON();\r\n\r\n        if (synthesisContextJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"synthesis.context\",\r\n                this.privSynthesisTurn.requestId,\r\n                \"application/json\",\r\n                synthesisContextJson));\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected connectImpl(isUnAuthorized: boolean = false): Promise<IConnection> {\r\n        if (this.privConnectionPromise) {\r\n            return this.privConnectionPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionPromise = null;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.connectImpl();\r\n                }\r\n                return this.privConnectionPromise;\r\n            }, (error: string): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionPromise = null;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.connectImpl();\r\n            });\r\n        }\r\n        this.privAuthFetchEventId = createNoDashGuid();\r\n        this.privConnectionId = createNoDashGuid();\r\n\r\n        this.privSynthesisTurn.onPreConnectionStart(this.privAuthFetchEventId, this.privConnectionId);\r\n\r\n        const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\r\n\r\n        this.privConnectionPromise = authPromise.then(async (result: AuthInfo) => {\r\n            await this.privSynthesisTurn.onAuthCompleted(false);\r\n\r\n            const connection: IConnection = this.privConnectionFactory.create(this.privSynthesizerConfig, result, this.privConnectionId);\r\n\r\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\r\n            // it'll stop sending events.\r\n            connection.events.attach((event: ConnectionEvent) => {\r\n                this.connectionEvents.onEvent(event);\r\n            });\r\n            const response = await connection.open();\r\n            if (response.statusCode === 200) {\r\n                await this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode);\r\n                return Promise.resolve(connection);\r\n            } else if (response.statusCode === 403 && !isUnAuthorized) {\r\n                return this.connectImpl(true);\r\n            } else {\r\n                await this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode, response.reason);\r\n                return Promise.reject(`Unable to contact server. StatusCode: ${response.statusCode}, ${this.privSynthesizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint)} Reason: ${response.reason}`);\r\n            }\r\n        }, async (error: string): Promise<IConnection> => {\r\n            await this.privSynthesisTurn.onAuthCompleted(true, error);\r\n            throw new Error(error);\r\n        });\r\n\r\n        // Attach an empty handler to allow the promise to run in the background while\r\n        // other startup events happen. It'll eventually be awaited on.\r\n        this.privConnectionPromise.catch(() => { });\r\n\r\n        return this.privConnectionPromise;\r\n    }\r\n    protected sendSpeechServiceConfig = (connection: IConnection, SpeechServiceConfigJson: string): Promise<void> => {\r\n        if (SpeechServiceConfigJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.config\",\r\n                this.privSynthesisTurn.requestId,\r\n                \"application/json\",\r\n                SpeechServiceConfigJson));\r\n        }\r\n    }\r\n\r\n    protected sendSsmlMessage = (connection: IConnection, ssml: string, requestId: string): Promise<void> => {\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"ssml\",\r\n            requestId,\r\n            \"application/ssml+xml\",\r\n            ssml));\r\n    }\r\n\r\n    private async fetchConnection(): Promise<IConnection> {\r\n        if (this.privConnectionConfigurationPromise) {\r\n            return this.privConnectionConfigurationPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionConfigurationPromise = null;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.fetchConnection();\r\n                }\r\n                return this.privConnectionConfigurationPromise;\r\n            }, (error: string): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionConfigurationPromise = null;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.fetchConnection();\r\n            });\r\n        }\r\n        this.privConnectionConfigurationPromise = this.configureConnection();\r\n        return await this.privConnectionConfigurationPromise;\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\r\n    private async configureConnection(): Promise<IConnection> {\r\n        const connection: IConnection = await this.connectImpl();\r\n        if (this.configConnectionOverride !== undefined) {\r\n            return this.configConnectionOverride(connection);\r\n        }\r\n        await this.sendSpeechServiceConfig(connection, this.privSynthesizerConfig.SpeechServiceConfig.serialize());\r\n        return connection;\r\n    }\r\n}\r\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","export default {\n  GLOBAL: {\n    HIDE: '__react_tooltip_hide_event',\n    REBUILD: '__react_tooltip_rebuild_event',\n    SHOW: '__react_tooltip_show_event'\n  }\n};\n","/**\n * Static methods for react-tooltip\n */\nimport CONSTANT from '../constant';\n\nconst dispatchGlobalEvent = (eventName, opts) => {\n  // Compatible with IE\n  // @see http://stackoverflow.com/questions/26596123/internet-explorer-9-10-11-event-constructor-doesnt-work\n  // @see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n  let event;\n\n  if (typeof window.CustomEvent === 'function') {\n    event = new window.CustomEvent(eventName, { detail: opts });\n  } else {\n    event = document.createEvent('Event');\n    event.initEvent(eventName, false, true, opts);\n  }\n\n  window.dispatchEvent(event);\n};\n\nexport default function(target) {\n  /**\n   * Hide all tooltip\n   * @trigger ReactTooltip.hide()\n   */\n  target.hide = target => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.HIDE, { target });\n  };\n\n  /**\n   * Rebuild all tooltip\n   * @trigger ReactTooltip.rebuild()\n   */\n  target.rebuild = () => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.REBUILD);\n  };\n\n  /**\n   * Show specific tooltip\n   * @trigger ReactTooltip.show()\n   */\n  target.show = target => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.SHOW, { target });\n  };\n\n  target.prototype.globalRebuild = function() {\n    if (this.mount) {\n      this.unbindListener();\n      this.bindListener();\n    }\n  };\n\n  target.prototype.globalShow = function(event) {\n    if (this.mount) {\n      const hasTarget =\n        (event && event.detail && event.detail.target && true) || false;\n      // Create a fake event, specific show will limit the type to `solid`\n      // only `float` type cares e.clientX e.clientY\n      this.showTooltip(\n        { currentTarget: hasTarget && event.detail.target },\n        true\n      );\n    }\n  };\n\n  target.prototype.globalHide = function(event) {\n    if (this.mount) {\n      const hasTarget =\n        (event && event.detail && event.detail.target && true) || false;\n      this.hideTooltip(\n        { currentTarget: hasTarget && event.detail.target },\n        hasTarget\n      );\n    }\n  };\n}\n","/**\n * Custom events to control showing and hiding of tooltip\n *\n * @attributes\n * - `event` {String}\n * - `eventOff` {String}\n */\n\nexport const checkStatus = function(dataEventOff, e) {\n  const { show } = this.state;\n  const { id } = this.props;\n  const isCapture = this.isCapture(e.currentTarget);\n  const currentItem = e.currentTarget.getAttribute('currentItem');\n\n  if (!isCapture) e.stopPropagation();\n  if (show && currentItem === 'true') {\n    if (!dataEventOff) this.hideTooltip(e);\n  } else {\n    e.currentTarget.setAttribute('currentItem', 'true');\n    setUntargetItems(e.currentTarget, this.getTargetArray(id));\n    this.showTooltip(e);\n  }\n};\n\nconst setUntargetItems = function(currentTarget, targetArray) {\n  for (let i = 0; i < targetArray.length; i++) {\n    if (currentTarget !== targetArray[i]) {\n      targetArray[i].setAttribute('currentItem', 'false');\n    } else {\n      targetArray[i].setAttribute('currentItem', 'true');\n    }\n  }\n};\n\nconst customListeners = {\n  id: '9b69f92e-d3fe-498b-b1b4-c5e63a51b0cf',\n  set(target, event, listener) {\n    if (this.id in target) {\n      const map = target[this.id];\n      map[event] = listener;\n    } else {\n      // this is workaround for WeakMap, which is not supported in older browsers, such as IE\n      Object.defineProperty(target, this.id, {\n        configurable: true,\n        value: { [event]: listener }\n      });\n    }\n  },\n  get(target, event) {\n    const map = target[this.id];\n    if (map !== undefined) {\n      return map[event];\n    }\n  }\n};\n\nexport default function(target) {\n  target.prototype.isCustomEvent = function(ele) {\n    const { event } = this.state;\n    return event || !!ele.getAttribute('data-event');\n  };\n\n  /* Bind listener for custom event */\n  target.prototype.customBindListener = function(ele) {\n    const { event, eventOff } = this.state;\n    const dataEvent = ele.getAttribute('data-event') || event;\n    const dataEventOff = ele.getAttribute('data-event-off') || eventOff;\n\n    dataEvent.split(' ').forEach(event => {\n      ele.removeEventListener(event, customListeners.get(ele, event));\n      const customListener = checkStatus.bind(this, dataEventOff);\n      customListeners.set(ele, event, customListener);\n      ele.addEventListener(event, customListener, false);\n    });\n    if (dataEventOff) {\n      dataEventOff.split(' ').forEach(event => {\n        ele.removeEventListener(event, this.hideTooltip);\n        ele.addEventListener(event, this.hideTooltip, false);\n      });\n    }\n  };\n\n  /* Unbind listener for custom event */\n  target.prototype.customUnbindListener = function(ele) {\n    const { event, eventOff } = this.state;\n    const dataEvent = event || ele.getAttribute('data-event');\n    const dataEventOff = eventOff || ele.getAttribute('data-event-off');\n\n    ele.removeEventListener(dataEvent, customListeners.get(ele, event));\n    if (dataEventOff) ele.removeEventListener(dataEventOff, this.hideTooltip);\n  };\n}\n","/**\n * Util method to get effect\n */\nimport { checkStatus } from './customEvent';\n\nconst makeProxy = e => {\n  const proxy = {};\n  for (const key in e) {\n    if (typeof e[key] === 'function') {\n      proxy[key] = e[key].bind(e);\n    } else {\n      proxy[key] = e[key];\n    }\n  }\n  return proxy;\n};\n\nconst bodyListener = function(callback, options, e) {\n  const { respectEffect = false, customEvent = false } = options;\n  const { id } = this.props;\n\n  const tip = e.target.getAttribute('data-tip') || null;\n  const forId = e.target.getAttribute('data-for') || null;\n\n  const target = e.target;\n  if (this.isCustomEvent(target) && !customEvent) {\n    return;\n  }\n\n  const isTargetBelongsToTooltip =\n    (id == null && forId == null) || forId === id;\n\n  if (\n    tip != null &&\n    (!respectEffect || this.getEffect(target) === 'float') &&\n    isTargetBelongsToTooltip\n  ) {\n    const proxy = makeProxy(e);\n    proxy.currentTarget = target;\n    callback(proxy);\n  }\n};\n\nconst findCustomEvents = (targetArray, dataAttribute) => {\n  const events = {};\n  targetArray.forEach(target => {\n    const event = target.getAttribute(dataAttribute);\n    if (event) event.split(' ').forEach(event => (events[event] = true));\n  });\n\n  return events;\n};\n\nconst getBody = () => document.getElementsByTagName('body')[0];\n\nexport default function(target) {\n  target.prototype.isBodyMode = function() {\n    return !!this.props.bodyMode;\n  };\n\n  target.prototype.bindBodyListener = function(targetArray) {\n    const {\n      event,\n      eventOff,\n      possibleCustomEvents,\n      possibleCustomEventsOff\n    } = this.state;\n    const body = getBody();\n\n    const customEvents = findCustomEvents(targetArray, 'data-event');\n    const customEventsOff = findCustomEvents(targetArray, 'data-event-off');\n\n    if (event != null) customEvents[event] = true;\n    if (eventOff != null) customEventsOff[eventOff] = true;\n    possibleCustomEvents\n      .split(' ')\n      .forEach(event => (customEvents[event] = true));\n    possibleCustomEventsOff\n      .split(' ')\n      .forEach(event => (customEventsOff[event] = true));\n\n    this.unbindBodyListener(body);\n\n    const listeners = (this.bodyModeListeners = {});\n    if (event == null) {\n      listeners.mouseover = bodyListener.bind(this, this.showTooltip, {});\n      listeners.mousemove = bodyListener.bind(this, this.updateTooltip, {\n        respectEffect: true\n      });\n      listeners.mouseout = bodyListener.bind(this, this.hideTooltip, {});\n    }\n\n    for (const event in customEvents) {\n      listeners[event] = bodyListener.bind(\n        this,\n        e => {\n          const targetEventOff =\n            e.currentTarget.getAttribute('data-event-off') || eventOff;\n          checkStatus.call(this, targetEventOff, e);\n        },\n        { customEvent: true }\n      );\n    }\n    for (const event in customEventsOff) {\n      listeners[event] = bodyListener.bind(this, this.hideTooltip, {\n        customEvent: true\n      });\n    }\n    for (const event in listeners) {\n      body.addEventListener(event, listeners[event]);\n    }\n  };\n\n  target.prototype.unbindBodyListener = function(body) {\n    body = body || getBody();\n\n    const listeners = this.bodyModeListeners;\n    for (const event in listeners) {\n      body.removeEventListener(event, listeners[event]);\n    }\n  };\n}\n","/**\n * Calculate the position of tooltip\n *\n * @params\n * - `e` {Event} the event of current mouse\n * - `target` {Element} the currentTarget of the event\n * - `node` {DOM} the react-tooltip object\n * - `place` {String} top / right / bottom / left\n * - `effect` {String} float / solid\n * - `offset` {Object} the offset to default position\n *\n * @return {Object}\n * - `isNewState` {Bool} required\n * - `newState` {Object}\n * - `position` {Object} {left: {Number}, top: {Number}}\n */\nexport default function(e, target, node, place, desiredPlace, effect, offset) {\n  const { width: tipWidth, height: tipHeight } = getDimensions(node);\n\n  const { width: targetWidth, height: targetHeight } = getDimensions(target);\n\n  const { mouseX, mouseY } = getCurrentOffset(e, target, effect);\n  const defaultOffset = getDefaultPosition(\n    effect,\n    targetWidth,\n    targetHeight,\n    tipWidth,\n    tipHeight\n  );\n  const { extraOffsetX, extraOffsetY } = calculateOffset(offset);\n\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n\n  const { parentTop, parentLeft } = getParent(node);\n\n  // Get the edge offset of the tooltip\n  const getTipOffsetLeft = place => {\n    const offsetX = defaultOffset[place].l;\n    return mouseX + offsetX + extraOffsetX;\n  };\n  const getTipOffsetRight = place => {\n    const offsetX = defaultOffset[place].r;\n    return mouseX + offsetX + extraOffsetX;\n  };\n  const getTipOffsetTop = place => {\n    const offsetY = defaultOffset[place].t;\n    return mouseY + offsetY + extraOffsetY;\n  };\n  const getTipOffsetBottom = place => {\n    const offsetY = defaultOffset[place].b;\n    return mouseY + offsetY + extraOffsetY;\n  };\n\n  //\n  // Functions to test whether the tooltip's sides are inside\n  // the client window for a given orientation p\n  //\n  //  _____________\n  // |             | <-- Right side\n  // | p = 'left'  |\\\n  // |             |/  |\\\n  // |_____________|   |_\\  <-- Mouse\n  //      / \\           |\n  //       |\n  //       |\n  //  Bottom side\n  //\n  const outsideLeft = p => getTipOffsetLeft(p) < 0;\n  const outsideRight = p => getTipOffsetRight(p) > windowWidth;\n  const outsideTop = p => getTipOffsetTop(p) < 0;\n  const outsideBottom = p => getTipOffsetBottom(p) > windowHeight;\n\n  // Check whether the tooltip with orientation p is completely inside the client window\n  const outside = p =>\n    outsideLeft(p) || outsideRight(p) || outsideTop(p) || outsideBottom(p);\n  const inside = p => !outside(p);\n\n  const placesList = ['top', 'bottom', 'left', 'right'];\n  const insideList = [];\n  for (let i = 0; i < 4; i++) {\n    const p = placesList[i];\n    if (inside(p)) {\n      insideList.push(p);\n    }\n  }\n\n  let isNewState = false;\n  let newPlace;\n  const shouldUpdatePlace = desiredPlace !== place;\n  if (inside(desiredPlace) && shouldUpdatePlace) {\n    isNewState = true;\n    newPlace = desiredPlace;\n  } else if (insideList.length > 0 && outside(desiredPlace) && outside(place)) {\n    isNewState = true;\n    newPlace = insideList[0];\n  }\n\n  if (isNewState) {\n    return {\n      isNewState: true,\n      newState: { place: newPlace }\n    };\n  }\n\n  return {\n    isNewState: false,\n    position: {\n      left: parseInt(getTipOffsetLeft(place) - parentLeft, 10),\n      top: parseInt(getTipOffsetTop(place) - parentTop, 10)\n    }\n  };\n}\n\nconst getDimensions = node => {\n  const { height, width } = node.getBoundingClientRect();\n  return {\n    height: parseInt(height, 10),\n    width: parseInt(width, 10)\n  };\n};\n\n// Get current mouse offset\nconst getCurrentOffset = (e, currentTarget, effect) => {\n  const boundingClientRect = currentTarget.getBoundingClientRect();\n  const targetTop = boundingClientRect.top;\n  const targetLeft = boundingClientRect.left;\n  const { width: targetWidth, height: targetHeight } = getDimensions(\n    currentTarget\n  );\n\n  if (effect === 'float') {\n    return {\n      mouseX: e.clientX,\n      mouseY: e.clientY\n    };\n  }\n  return {\n    mouseX: targetLeft + targetWidth / 2,\n    mouseY: targetTop + targetHeight / 2\n  };\n};\n\n// List all possibility of tooltip final offset\n// This is useful in judging if it is necessary for tooltip to switch position when out of window\nconst getDefaultPosition = (\n  effect,\n  targetWidth,\n  targetHeight,\n  tipWidth,\n  tipHeight\n) => {\n  let top;\n  let right;\n  let bottom;\n  let left;\n  const disToMouse = 3;\n  const triangleHeight = 2;\n  const cursorHeight = 12; // Optimize for float bottom only, cause the cursor will hide the tooltip\n\n  if (effect === 'float') {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(tipHeight + disToMouse + triangleHeight),\n      b: -disToMouse\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: disToMouse + cursorHeight,\n      b: tipHeight + disToMouse + triangleHeight + cursorHeight\n    };\n    left = {\n      l: -(tipWidth + disToMouse + triangleHeight),\n      r: -disToMouse,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n    right = {\n      l: disToMouse,\n      r: tipWidth + disToMouse + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n  } else if (effect === 'solid') {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(targetHeight / 2 + tipHeight + triangleHeight),\n      b: -(targetHeight / 2)\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: targetHeight / 2,\n      b: targetHeight / 2 + tipHeight + triangleHeight\n    };\n    left = {\n      l: -(tipWidth + targetWidth / 2 + triangleHeight),\n      r: -(targetWidth / 2),\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n    right = {\n      l: targetWidth / 2,\n      r: tipWidth + targetWidth / 2 + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n  }\n\n  return { top, bottom, left, right };\n};\n\n// Consider additional offset into position calculation\nconst calculateOffset = offset => {\n  let extraOffsetX = 0;\n  let extraOffsetY = 0;\n\n  if (Object.prototype.toString.apply(offset) === '[object String]') {\n    offset = JSON.parse(offset.toString().replace(/'/g, '\"'));\n  }\n  for (const key in offset) {\n    if (key === 'top') {\n      extraOffsetY -= parseInt(offset[key], 10);\n    } else if (key === 'bottom') {\n      extraOffsetY += parseInt(offset[key], 10);\n    } else if (key === 'left') {\n      extraOffsetX -= parseInt(offset[key], 10);\n    } else if (key === 'right') {\n      extraOffsetX += parseInt(offset[key], 10);\n    }\n  }\n\n  return { extraOffsetX, extraOffsetY };\n};\n\n// Get the offset of the parent elements\nconst getParent = currentTarget => {\n  let currentParent = currentTarget;\n  while (currentParent) {\n    const computedStyle = window.getComputedStyle(currentParent);\n    // transform and will-change: transform change the containing block\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_Block\n    if (\n      computedStyle.getPropertyValue('transform') !== 'none' ||\n      computedStyle.getPropertyValue('will-change') === 'transform'\n    )\n      break;\n    currentParent = currentParent.parentElement;\n  }\n\n  const parentTop =\n    (currentParent && currentParent.getBoundingClientRect().top) || 0;\n  const parentLeft =\n    (currentParent && currentParent.getBoundingClientRect().left) || 0;\n\n  return { parentTop, parentLeft };\n};\n","/**\n * To get the tooltip content\n * it may comes from data-tip or this.props.children\n * it should support multiline\n *\n * @params\n * - `tip` {String} value of data-tip\n * - `children` {ReactElement} this.props.children\n * - `multiline` {Any} could be Bool(true/false) or String('true'/'false')\n *\n * @return\n * - String or react component\n */\nimport React from 'react';\n\nexport default function(tip, children, getContent, multiline) {\n  if (children) return children;\n  if (getContent !== undefined && getContent !== null) return getContent; // getContent can be 0, '', etc.\n  if (getContent === null) return null; // Tip not exist and children is null or undefined\n\n  const regexp = /<br\\s*\\/?>/;\n  if (!multiline || multiline === 'false' || !regexp.test(tip)) {\n    // No trim(), so that user can keep their input\n    return tip;\n  }\n\n  // Multiline tooltip content\n  return tip.split(regexp).map((d, i) => {\n    return (\n      <span key={i} className=\"multi-line\">\n        {d}\n      </span>\n    );\n  });\n}\n","/**\n * Support aria- and role in ReactTooltip\n *\n * @params props {Object}\n * @return {Object}\n */\nexport function parseAria(props) {\n  const ariaObj = {};\n  Object.keys(props)\n    .filter(prop => {\n      // aria-xxx and role is acceptable\n      return /(^aria-\\w+$|^role$)/.test(prop);\n    })\n    .forEach(prop => {\n      ariaObj[prop] = props[prop];\n    });\n\n  return ariaObj;\n}\n","/**\n * Convert nodelist to array\n * @see https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/core/createArrayFromMixed.js#L24\n * NodeLists are functions in Safari\n */\n\nexport default function(nodeList) {\n  const length = nodeList.length;\n  if (nodeList.hasOwnProperty) {\n    return Array.prototype.slice.call(nodeList);\n  }\n  return new Array(length).fill().map(index => nodeList[index]);\n}\n","/**\n * Default pop-up style values (text color, background color).\n */\nconst defaultColors = {\n  dark: {\n    text: '#fff',\n    background: '#222',\n    border: 'transparent',\n    arrow: '#222'\n  },\n  success: {\n    text: '#fff',\n    background: '#8DC572',\n    border: 'transparent',\n    arrow: '#8DC572'\n  },\n  warning: {\n    text: '#fff',\n    background: '#F0AD4E',\n    border: 'transparent',\n    arrow: '#F0AD4E'\n  },\n  error: {\n    text: '#fff',\n    background: '#BE6464',\n    border: 'transparent',\n    arrow: '#BE6464'\n  },\n  info: {\n    text: '#fff',\n    background: '#337AB7',\n    border: 'transparent',\n    arrow: '#337AB7'\n  },\n  light: {\n    text: '#222',\n    background: '#fff',\n    border: 'transparent',\n    arrow: '#fff'\n  }\n};\n\nexport function getDefaultPopupColors(type) {\n  return defaultColors[type] ? { ...defaultColors[type] } : undefined;\n}\n","import { getDefaultPopupColors } from './defaultStyles';\n\n/**\n * Generates the specific tooltip style for use on render.\n */\nexport function generateTooltipStyle(uuid, customColors, type, hasBorder) {\n  return generateStyle(uuid, getPopupColors(customColors, type, hasBorder));\n}\n\n/**\n * Generates the tooltip style rules based on the element-specified \"data-type\" property.\n */\nfunction generateStyle(uuid, colors) {\n  const textColor = colors.text;\n  const backgroundColor = colors.background;\n  const borderColor = colors.border;\n  const arrowColor = colors.arrow;\n\n  return `\n  \t.${uuid} {\n\t    color: ${textColor};\n\t    background: ${backgroundColor};\n\t    border: 1px solid ${borderColor};\n  \t}\n\n  \t.${uuid}.place-top {\n        margin-top: -10px;\n    }\n    .${uuid}.place-top::before {\n        border-top: 8px solid ${borderColor};\n    }\n    .${uuid}.place-top::after {\n        border-left: 8px solid transparent;\n        border-right: 8px solid transparent;\n        bottom: -6px;\n        left: 50%;\n        margin-left: -8px;\n        border-top-color: ${arrowColor};\n        border-top-style: solid;\n        border-top-width: 6px;\n    }\n\n    .${uuid}.place-bottom {\n        margin-top: 10px;\n    }\n    .${uuid}.place-bottom::before {\n        border-bottom: 8px solid ${borderColor};\n    }\n    .${uuid}.place-bottom::after {\n        border-left: 8px solid transparent;\n        border-right: 8px solid transparent;\n        top: -6px;\n        left: 50%;\n        margin-left: -8px;\n        border-bottom-color: ${arrowColor};\n        border-bottom-style: solid;\n        border-bottom-width: 6px;\n    }\n\n    .${uuid}.place-left {\n        margin-left: -10px;\n    }\n    .${uuid}.place-left::before {\n        border-left: 8px solid ${borderColor};\n    }\n    .${uuid}.place-left::after {\n        border-top: 5px solid transparent;\n        border-bottom: 5px solid transparent;\n        right: -6px;\n        top: 50%;\n        margin-top: -4px;\n        border-left-color: ${arrowColor};\n        border-left-style: solid;\n        border-left-width: 6px;\n    }\n\n    .${uuid}.place-right {\n        margin-left: 10px;\n    }\n    .${uuid}.place-right::before {\n        border-right: 8px solid ${borderColor};\n    }\n    .${uuid}.place-right::after {\n        border-top: 5px solid transparent;\n        border-bottom: 5px solid transparent;\n        left: -6px;\n        top: 50%;\n        margin-top: -4px;\n        border-right-color: ${arrowColor};\n        border-right-style: solid;\n        border-right-width: 6px;\n    }\n  `;\n}\n\nfunction getPopupColors(customColors, type, hasBorder) {\n  const textColor = customColors.text;\n  const backgroundColor = customColors.background;\n  const borderColor = customColors.border;\n  const arrowColor = customColors.arrow\n    ? customColors.arrow\n    : customColors.background;\n\n  const colors = getDefaultPopupColors(type);\n\n  if (textColor) {\n    colors.text = textColor;\n  }\n\n  if (backgroundColor) {\n    colors.background = backgroundColor;\n  }\n\n  if (hasBorder) {\n    if (borderColor) {\n      colors.border = borderColor;\n    } else {\n      colors.border = type === 'light' ? 'black' : 'white';\n    }\n  }\n\n  if (arrowColor) {\n    colors.arrow = arrowColor;\n  }\n\n  return colors;\n}\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var toObject = require('../internals/to-object');\n\nvar hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function hasOwn(it, key) {\n  return hasOwnProperty.call(toObject(it), key);\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- requied for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    if (wmhas.call(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (objectHas(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.12.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'\n});\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","module.exports = {};\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] < 4 ? 1 : match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = match[1];\n  }\n}\n\nmodule.exports = version && +version;\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  var state;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) {\n      createNonEnumerableProperty(value, 'name', key);\n    }\n    state = enforceInternalState(value);\n    if (!state.source) {\n      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');\n    }\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.es/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject -- old IE */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  return !String(Symbol()) ||\n    // Chrome 38 Symbol has incorrect toString conversion\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) {\n      WellKnownSymbolsStore[name] = Symbol[name];\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","var bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_OUT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push.call(target, value); // filterOut\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterOut` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterOut: createMethod(7)\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","/**\n * Tracking target removing from DOM.\n * It's necessary to hide tooltip when it's target disappears.\n * Otherwise, the tooltip would be shown forever until another target\n * is triggered.\n *\n * If MutationObserver is not available, this feature just doesn't work.\n */\n\n// https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/\nconst getMutationObserverClass = () => {\n  return (\n    window.MutationObserver ||\n    window.WebKitMutationObserver ||\n    window.MozMutationObserver\n  );\n};\n\nexport default function(target) {\n  target.prototype.bindRemovalTracker = function() {\n    const MutationObserver = getMutationObserverClass();\n    if (MutationObserver == null) return;\n\n    const observer = new MutationObserver(mutations => {\n      for (let m1 = 0; m1 < mutations.length; m1++) {\n        const mutation = mutations[m1];\n        for (let m2 = 0; m2 < mutation.removedNodes.length; m2++) {\n          const element = mutation.removedNodes[m2];\n          if (element === this.state.currentTarget) {\n            this.hideTooltip();\n            return;\n          }\n        }\n      }\n    });\n\n    observer.observe(window.document, { childList: true, subtree: true });\n\n    this.removalTracker = observer;\n  };\n\n  target.prototype.unbindRemovalTracker = function() {\n    if (this.removalTracker) {\n      this.removalTracker.disconnect();\n      this.removalTracker = null;\n    }\n  };\n}\n","/* eslint-disable no-unused-vars, dot-notation */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Decorators */\nimport staticMethods from './decorators/staticMethods';\nimport windowListener from './decorators/windowListener';\nimport customEvent from './decorators/customEvent';\nimport isCapture from './decorators/isCapture';\nimport getEffect from './decorators/getEffect';\nimport bodyMode from './decorators/bodyMode';\nimport trackRemoval from './decorators/trackRemoval';\n\n/* Utils */\nimport getPosition from './utils/getPosition';\nimport getTipContent from './utils/getTipContent';\nimport { parseAria } from './utils/aria';\nimport nodeListToArray from './utils/nodeListToArray';\nimport { generateUUID } from './utils/uuid';\n\n/* CSS */\nimport baseCss from './index.scss';\nimport { generateTooltipStyle } from './decorators/styler';\n\n/* Polyfill */\nimport 'core-js/modules/es.array.find';\n\n@staticMethods\n@windowListener\n@customEvent\n@isCapture\n@getEffect\n@bodyMode\n@trackRemoval\nclass ReactTooltip extends React.Component {\n  static get propTypes() {\n    return {\n      uuid: PropTypes.string,\n      children: PropTypes.any,\n      place: PropTypes.string,\n      type: PropTypes.string,\n      effect: PropTypes.string,\n      offset: PropTypes.object,\n      multiline: PropTypes.bool,\n      border: PropTypes.bool,\n      textColor: PropTypes.string,\n      backgroundColor: PropTypes.string,\n      borderColor: PropTypes.string,\n      arrowColor: PropTypes.string,\n      insecure: PropTypes.bool,\n      class: PropTypes.string,\n      className: PropTypes.string,\n      id: PropTypes.string,\n      html: PropTypes.bool,\n      delayHide: PropTypes.number,\n      delayUpdate: PropTypes.number,\n      delayShow: PropTypes.number,\n      event: PropTypes.string,\n      eventOff: PropTypes.string,\n      isCapture: PropTypes.bool,\n      globalEventOff: PropTypes.string,\n      getContent: PropTypes.any,\n      afterShow: PropTypes.func,\n      afterHide: PropTypes.func,\n      overridePosition: PropTypes.func,\n      disable: PropTypes.bool,\n      scrollHide: PropTypes.bool,\n      resizeHide: PropTypes.bool,\n      wrapper: PropTypes.string,\n      bodyMode: PropTypes.bool,\n      possibleCustomEvents: PropTypes.string,\n      possibleCustomEventsOff: PropTypes.string,\n      clickable: PropTypes.bool\n    };\n  }\n\n  static defaultProps = {\n    insecure: true,\n    resizeHide: true,\n    wrapper: 'div',\n    clickable: false\n  };\n\n  static supportedWrappers = ['div', 'span'];\n\n  static displayName = 'ReactTooltip';\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uuid: props.uuid || generateUUID(),\n      place: props.place || 'top', // Direction of tooltip\n      desiredPlace: props.place || 'top',\n      type: 'dark', // Color theme of tooltip\n      effect: 'float', // float or fixed\n      show: false,\n      border: false,\n      customColors: {},\n      offset: {},\n      extraClass: '',\n      html: false,\n      delayHide: 0,\n      delayShow: 0,\n      event: props.event || null,\n      eventOff: props.eventOff || null,\n      currentEvent: null, // Current mouse event\n      currentTarget: null, // Current target of mouse event\n      ariaProps: parseAria(props), // aria- and role attributes\n      isEmptyTip: false,\n      disable: false,\n      possibleCustomEvents: props.possibleCustomEvents || '',\n      possibleCustomEventsOff: props.possibleCustomEventsOff || '',\n      originTooltip: null,\n      isMultiline: false\n    };\n\n    this.bind([\n      'showTooltip',\n      'updateTooltip',\n      'hideTooltip',\n      'hideTooltipOnScroll',\n      'getTooltipContent',\n      'globalRebuild',\n      'globalShow',\n      'globalHide',\n      'onWindowResize',\n      'mouseOnToolTip'\n    ]);\n\n    this.mount = true;\n    this.delayShowLoop = null;\n    this.delayHideLoop = null;\n    this.delayReshow = null;\n    this.intervalUpdateContent = null;\n  }\n\n  /**\n   * For unify the bind and unbind listener\n   */\n  bind(methodArray) {\n    methodArray.forEach(method => {\n      this[method] = this[method].bind(this);\n    });\n  }\n\n  componentDidMount() {\n    const { insecure, resizeHide } = this.props;\n\n    this.bindListener(); // Bind listener for tooltip\n    this.bindWindowEvents(resizeHide); // Bind global event for static method\n    this.injectStyles(); // Inject styles for each DOM root having tooltip.\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { ariaProps } = prevState;\n    const newAriaProps = parseAria(nextProps);\n    const isChanged = Object.keys(newAriaProps).some(props => {\n      return newAriaProps[props] !== ariaProps[props];\n    });\n    if (!isChanged) {\n      return null;\n    }\n    return {\n      ...prevState,\n      ariaProps: newAriaProps\n    };\n  }\n\n  componentWillUnmount() {\n    this.mount = false;\n\n    this.clearTimer();\n\n    this.unbindListener();\n    this.removeScrollListener(this.state.currentTarget);\n    this.unbindWindowEvents();\n  }\n\n  /* Look for the closest DOM root having tooltip and inject styles. */\n  injectStyles() {\n    const { tooltipRef } = this;\n    if (!tooltipRef) {\n      return;\n    }\n\n    let parentNode = tooltipRef.parentNode;\n    while (parentNode.parentNode) {\n      parentNode = parentNode.parentNode;\n    }\n\n    let domRoot;\n\n    switch (parentNode.constructor.name) {\n      case 'Document':\n      case 'HTMLDocument':\n      case undefined:\n        domRoot = parentNode.head;\n        break;\n      case 'ShadowRoot':\n      default:\n        domRoot = parentNode;\n        break;\n    }\n\n    // Prevent styles duplication.\n    if (!domRoot.querySelector('style[data-react-tooltip]')) {\n      const style = document.createElement('style');\n      style.textContent = baseCss;\n      style.setAttribute('data-react-tooltip', 'true');\n\n      domRoot.appendChild(style);\n    }\n  }\n\n  /**\n   * Return if the mouse is on the tooltip.\n   * @returns {boolean} true - mouse is on the tooltip\n   */\n  mouseOnToolTip() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      /* old IE or Firefox work around */\n      if (!this.tooltipRef.matches) {\n        /* old IE work around */\n        if (this.tooltipRef.msMatchesSelector) {\n          this.tooltipRef.matches = this.tooltipRef.msMatchesSelector;\n        } else {\n          /* old Firefox work around */\n          this.tooltipRef.matches = this.tooltipRef.mozMatchesSelector;\n        }\n      }\n      return this.tooltipRef.matches(':hover');\n    }\n    return false;\n  }\n\n  /**\n   * Pick out corresponded target elements\n   */\n  getTargetArray(id) {\n    let targetArray = [];\n    let selector;\n    if (!id) {\n      selector = '[data-tip]:not([data-for])';\n    } else {\n      const escaped = id.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\n      selector = `[data-tip][data-for=\"${escaped}\"]`;\n    }\n\n    // Scan document for shadow DOM elements\n    nodeListToArray(document.getElementsByTagName('*'))\n      .filter(element => element.shadowRoot)\n      .forEach(element => {\n        targetArray = targetArray.concat(\n          nodeListToArray(element.shadowRoot.querySelectorAll(selector))\n        );\n      });\n    return targetArray.concat(\n      nodeListToArray(document.querySelectorAll(selector))\n    );\n  }\n\n  /**\n   * Bind listener to the target elements\n   * These listeners used to trigger showing or hiding the tooltip\n   */\n  bindListener() {\n    const { id, globalEventOff, isCapture } = this.props;\n    const targetArray = this.getTargetArray(id);\n\n    targetArray.forEach(target => {\n      if (target.getAttribute('currentItem') === null) {\n        target.setAttribute('currentItem', 'false');\n      }\n      this.unbindBasicListener(target);\n      if (this.isCustomEvent(target)) {\n        this.customUnbindListener(target);\n      }\n    });\n\n    if (this.isBodyMode()) {\n      this.bindBodyListener(targetArray);\n    } else {\n      targetArray.forEach(target => {\n        const isCaptureMode = this.isCapture(target);\n        const effect = this.getEffect(target);\n        if (this.isCustomEvent(target)) {\n          this.customBindListener(target);\n          return;\n        }\n\n        target.addEventListener('mouseenter', this.showTooltip, isCaptureMode);\n        target.addEventListener('focus', this.showTooltip, isCaptureMode);\n        if (effect === 'float') {\n          target.addEventListener(\n            'mousemove',\n            this.updateTooltip,\n            isCaptureMode\n          );\n        }\n        target.addEventListener('mouseleave', this.hideTooltip, isCaptureMode);\n        target.addEventListener('blur', this.hideTooltip, isCaptureMode);\n      });\n    }\n\n    // Global event to hide tooltip\n    if (globalEventOff) {\n      window.removeEventListener(globalEventOff, this.hideTooltip);\n      window.addEventListener(globalEventOff, this.hideTooltip, isCapture);\n    }\n\n    // Track removal of targetArray elements from DOM\n    this.bindRemovalTracker();\n  }\n\n  /**\n   * Unbind listeners on target elements\n   */\n  unbindListener() {\n    const { id, globalEventOff } = this.props;\n    if (this.isBodyMode()) {\n      this.unbindBodyListener();\n    } else {\n      const targetArray = this.getTargetArray(id);\n      targetArray.forEach(target => {\n        this.unbindBasicListener(target);\n        if (this.isCustomEvent(target)) this.customUnbindListener(target);\n      });\n    }\n\n    if (globalEventOff)\n      window.removeEventListener(globalEventOff, this.hideTooltip);\n    this.unbindRemovalTracker();\n  }\n\n  /**\n   * Invoke this before bind listener and unmount the component\n   * it is necessary to invoke this even when binding custom event\n   * so that the tooltip can switch between custom and default listener\n   */\n  unbindBasicListener(target) {\n    const isCaptureMode = this.isCapture(target);\n    target.removeEventListener('mouseenter', this.showTooltip, isCaptureMode);\n    target.removeEventListener('mousemove', this.updateTooltip, isCaptureMode);\n    target.removeEventListener('mouseleave', this.hideTooltip, isCaptureMode);\n  }\n\n  getTooltipContent() {\n    const { getContent, children } = this.props;\n\n    // Generate tooltip content\n    let content;\n    if (getContent) {\n      if (Array.isArray(getContent)) {\n        content = getContent[0] && getContent[0](this.state.originTooltip);\n      } else {\n        content = getContent(this.state.originTooltip);\n      }\n    }\n\n    return getTipContent(\n      this.state.originTooltip,\n      children,\n      content,\n      this.state.isMultiline\n    );\n  }\n\n  isEmptyTip(placeholder) {\n    return (\n      (typeof placeholder === 'string' && placeholder === '') ||\n      placeholder === null\n    );\n  }\n\n  /**\n   * When mouse enter, show the tooltip\n   */\n  showTooltip(e, isGlobalCall) {\n    if (!this.tooltipRef) {\n      return;\n    }\n\n    if (isGlobalCall) {\n      // Don't trigger other elements belongs to other ReactTooltip\n      const targetArray = this.getTargetArray(this.props.id);\n      const isMyElement = targetArray.some(ele => ele === e.currentTarget);\n      if (!isMyElement) return;\n    }\n    // Get the tooltip content\n    // calculate in this phrase so that tip width height can be detected\n    const { multiline, getContent } = this.props;\n    const originTooltip = e.currentTarget.getAttribute('data-tip');\n    const isMultiline =\n      e.currentTarget.getAttribute('data-multiline') || multiline || false;\n\n    // If it is focus event or called by ReactTooltip.show, switch to `solid` effect\n    const switchToSolid = e instanceof window.FocusEvent || isGlobalCall;\n\n    // if it needs to skip adding hide listener to scroll\n    let scrollHide = true;\n    if (e.currentTarget.getAttribute('data-scroll-hide')) {\n      scrollHide = e.currentTarget.getAttribute('data-scroll-hide') === 'true';\n    } else if (this.props.scrollHide != null) {\n      scrollHide = this.props.scrollHide;\n    }\n\n    // adding aria-describedby to target to make tooltips read by screen readers\n    if (e && e.currentTarget && e.currentTarget.setAttribute) {\n      e.currentTarget.setAttribute('aria-describedby', this.state.uuid);\n    }\n\n    // Make sure the correct place is set\n    const desiredPlace =\n      e.currentTarget.getAttribute('data-place') || this.props.place || 'top';\n    const effect =\n      (switchToSolid && 'solid') || this.getEffect(e.currentTarget);\n    const offset =\n      e.currentTarget.getAttribute('data-offset') || this.props.offset || {};\n    const result = getPosition(\n      e,\n      e.currentTarget,\n      this.tooltipRef,\n      desiredPlace,\n      desiredPlace,\n      effect,\n      offset\n    );\n    if (result.position && this.props.overridePosition) {\n      result.position = this.props.overridePosition(\n        result.position,\n        e,\n        e.currentTarget,\n        this.tooltipRef,\n        desiredPlace,\n        desiredPlace,\n        effect,\n        offset\n      );\n    }\n\n    const place = result.isNewState ? result.newState.place : desiredPlace;\n\n    // To prevent previously created timers from triggering\n    this.clearTimer();\n\n    const target = e.currentTarget;\n\n    const reshowDelay = this.state.show\n      ? target.getAttribute('data-delay-update') || this.props.delayUpdate\n      : 0;\n\n    const self = this;\n\n    const updateState = function updateState() {\n      self.setState(\n        {\n          originTooltip: originTooltip,\n          isMultiline: isMultiline,\n          desiredPlace: desiredPlace,\n          place: place,\n          type: target.getAttribute('data-type') || self.props.type || 'dark',\n          customColors: {\n            text:\n              target.getAttribute('data-text-color') ||\n              self.props.textColor ||\n              null,\n            background:\n              target.getAttribute('data-background-color') ||\n              self.props.backgroundColor ||\n              null,\n            border:\n              target.getAttribute('data-border-color') ||\n              self.props.borderColor ||\n              null,\n            arrow:\n              target.getAttribute('data-arrow-color') ||\n              self.props.arrowColor ||\n              null\n          },\n          effect: effect,\n          offset: offset,\n          html:\n            (target.getAttribute('data-html')\n              ? target.getAttribute('data-html') === 'true'\n              : self.props.html) || false,\n          delayShow:\n            target.getAttribute('data-delay-show') || self.props.delayShow || 0,\n          delayHide:\n            target.getAttribute('data-delay-hide') || self.props.delayHide || 0,\n          delayUpdate:\n            target.getAttribute('data-delay-update') ||\n            self.props.delayUpdate ||\n            0,\n          border:\n            (target.getAttribute('data-border')\n              ? target.getAttribute('data-border') === 'true'\n              : self.props.border) || false,\n          extraClass:\n            target.getAttribute('data-class') ||\n            self.props.class ||\n            self.props.className ||\n            '',\n          disable:\n            (target.getAttribute('data-tip-disable')\n              ? target.getAttribute('data-tip-disable') === 'true'\n              : self.props.disable) || false,\n          currentTarget: target\n        },\n        () => {\n          if (scrollHide) {\n            self.addScrollListener(self.state.currentTarget);\n          }\n\n          self.updateTooltip(e);\n\n          if (getContent && Array.isArray(getContent)) {\n            self.intervalUpdateContent = setInterval(() => {\n              if (self.mount) {\n                const { getContent } = self.props;\n                const placeholder = getTipContent(\n                  originTooltip,\n                  '',\n                  getContent[0](),\n                  isMultiline\n                );\n                const isEmptyTip = self.isEmptyTip(placeholder);\n                self.setState({ isEmptyTip });\n                self.updatePosition();\n              }\n            }, getContent[1]);\n          }\n        }\n      );\n    };\n\n    // If there is no delay call immediately, don't allow events to get in first.\n    if (reshowDelay) {\n      this.delayReshow = setTimeout(updateState, reshowDelay);\n    } else {\n      updateState();\n    }\n  }\n\n  /**\n   * When mouse hover, update tool tip\n   */\n  updateTooltip(e) {\n    const { delayShow, disable } = this.state;\n    const { afterShow } = this.props;\n    const placeholder = this.getTooltipContent();\n    const eventTarget = e.currentTarget || e.target;\n\n    // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n    if (this.mouseOnToolTip()) {\n      return;\n    }\n\n    // if the tooltip is empty, disable the tooltip\n    if (this.isEmptyTip(placeholder) || disable) {\n      return;\n    }\n\n    const delayTime = !this.state.show ? parseInt(delayShow, 10) : 0;\n\n    const updateState = () => {\n      if (\n        (Array.isArray(placeholder) && placeholder.length > 0) ||\n        placeholder\n      ) {\n        const isInvisible = !this.state.show;\n        this.setState(\n          {\n            currentEvent: e,\n            currentTarget: eventTarget,\n            show: true\n          },\n          () => {\n            this.updatePosition();\n            if (isInvisible && afterShow) {\n              afterShow(e);\n            }\n          }\n        );\n      }\n    };\n\n    clearTimeout(this.delayShowLoop);\n    if (delayTime) {\n      this.delayShowLoop = setTimeout(updateState, delayTime);\n    } else {\n      updateState();\n    }\n  }\n\n  /*\n   * If we're mousing over the tooltip remove it when we leave.\n   */\n  listenForTooltipExit() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      this.tooltipRef.addEventListener('mouseleave', this.hideTooltip);\n    }\n  }\n\n  removeListenerForTooltipExit() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      this.tooltipRef.removeEventListener('mouseleave', this.hideTooltip);\n    }\n  }\n\n  /**\n   * When mouse leave, hide tooltip\n   */\n  hideTooltip(e, hasTarget, options = { isScroll: false }) {\n    const { disable } = this.state;\n    const { isScroll } = options;\n    const delayHide = isScroll ? 0 : this.state.delayHide;\n    const { afterHide } = this.props;\n    const placeholder = this.getTooltipContent();\n    if (!this.mount) return;\n    if (this.isEmptyTip(placeholder) || disable) return; // if the tooltip is empty, disable the tooltip\n    if (hasTarget) {\n      // Don't trigger other elements belongs to other ReactTooltip\n      const targetArray = this.getTargetArray(this.props.id);\n      const isMyElement = targetArray.some(ele => ele === e.currentTarget);\n      if (!isMyElement || !this.state.show) return;\n    }\n\n    // clean up aria-describedby when hiding tooltip\n    if (e && e.currentTarget && e.currentTarget.removeAttribute) {\n      e.currentTarget.removeAttribute('aria-describedby');\n    }\n\n    const resetState = () => {\n      const isVisible = this.state.show;\n      // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n      if (this.mouseOnToolTip()) {\n        this.listenForTooltipExit();\n        return;\n      }\n\n      this.removeListenerForTooltipExit();\n\n      this.setState({ show: false }, () => {\n        this.removeScrollListener(this.state.currentTarget);\n        if (isVisible && afterHide) {\n          afterHide(e);\n        }\n      });\n    };\n\n    this.clearTimer();\n    if (delayHide) {\n      this.delayHideLoop = setTimeout(resetState, parseInt(delayHide, 10));\n    } else {\n      resetState();\n    }\n  }\n\n  /**\n   * When scroll, hide tooltip\n   */\n  hideTooltipOnScroll(event, hasTarget) {\n    this.hideTooltip(event, hasTarget, { isScroll: true });\n  }\n\n  /**\n   * Add scroll event listener when tooltip show\n   * automatically hide the tooltip when scrolling\n   */\n  addScrollListener(currentTarget) {\n    const isCaptureMode = this.isCapture(currentTarget);\n    window.addEventListener('scroll', this.hideTooltipOnScroll, isCaptureMode);\n  }\n\n  removeScrollListener(currentTarget) {\n    const isCaptureMode = this.isCapture(currentTarget);\n    window.removeEventListener(\n      'scroll',\n      this.hideTooltipOnScroll,\n      isCaptureMode\n    );\n  }\n\n  // Calculation the position\n  updatePosition() {\n    const {\n      currentEvent,\n      currentTarget,\n      place,\n      desiredPlace,\n      effect,\n      offset\n    } = this.state;\n    const node = this.tooltipRef;\n    const result = getPosition(\n      currentEvent,\n      currentTarget,\n      node,\n      place,\n      desiredPlace,\n      effect,\n      offset\n    );\n    if (result.position && this.props.overridePosition) {\n      result.position = this.props.overridePosition(\n        result.position,\n        currentEvent,\n        currentTarget,\n        node,\n        place,\n        desiredPlace,\n        effect,\n        offset\n      );\n    }\n\n    if (result.isNewState) {\n      // Switch to reverse placement\n      return this.setState(result.newState, () => {\n        this.updatePosition();\n      });\n    }\n\n    // Set tooltip position\n    node.style.left = result.position.left + 'px';\n    node.style.top = result.position.top + 'px';\n  }\n\n  /**\n   * CLear all kinds of timeout of interval\n   */\n  clearTimer() {\n    clearTimeout(this.delayShowLoop);\n    clearTimeout(this.delayHideLoop);\n    clearTimeout(this.delayReshow);\n    clearInterval(this.intervalUpdateContent);\n  }\n\n  hasCustomColors() {\n    return Boolean(\n      Object.keys(this.state.customColors).find(\n        color => color !== 'border' && this.state.customColors[color]\n      ) ||\n        (this.state.border && this.state.customColors['border'])\n    );\n  }\n\n  render() {\n    const { extraClass, html, ariaProps, disable, uuid } = this.state;\n    const content = this.getTooltipContent();\n    const isEmptyTip = this.isEmptyTip(content);\n    const style = generateTooltipStyle(\n      this.state.uuid,\n      this.state.customColors,\n      this.state.type,\n      this.state.border\n    );\n\n    const tooltipClass =\n      '__react_component_tooltip' +\n      ` ${this.state.uuid}` +\n      (this.state.show && !disable && !isEmptyTip ? ' show' : '') +\n      (this.state.border ? ' border' : '') +\n      ` place-${this.state.place}` + // top, bottom, left, right\n      ` type-${this.hasCustomColors() ? 'custom' : this.state.type}` + // dark, success, warning, error, info, light, custom\n      (this.props.delayUpdate ? ' allow_hover' : '') +\n      (this.props.clickable ? ' allow_click' : '');\n\n    let Wrapper = this.props.wrapper;\n\n    if (ReactTooltip.supportedWrappers.indexOf(Wrapper) < 0) {\n      Wrapper = ReactTooltip.defaultProps.wrapper;\n    }\n\n    const wrapperClassName = [tooltipClass, extraClass]\n      .filter(Boolean)\n      .join(' ');\n\n    if (html) {\n      const htmlContent = `${content}\\n<style aria-hidden=\"true\">${style}</style>`;\n\n      return (\n        <Wrapper\n          className={`${wrapperClassName}`}\n          id={this.props.id || uuid}\n          ref={ref => (this.tooltipRef = ref)}\n          {...ariaProps}\n          data-id=\"tooltip\"\n          dangerouslySetInnerHTML={{ __html: htmlContent }}\n        />\n      );\n    } else {\n      return (\n        <Wrapper\n          className={`${wrapperClassName}`}\n          id={this.props.id || uuid}\n          {...ariaProps}\n          ref={ref => (this.tooltipRef = ref)}\n          data-id=\"tooltip\"\n        >\n          <style\n            dangerouslySetInnerHTML={{ __html: style }}\n            aria-hidden=\"true\"\n          />\n          {content}\n        </Wrapper>\n      );\n    }\n  }\n}\n\nexport default ReactTooltip;\n","/**\n * Events that should be bound to the window\n */\nimport CONSTANT from '../constant';\n\nexport default function(target) {\n  target.prototype.bindWindowEvents = function(resizeHide) {\n    // ReactTooltip.hide\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.addEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide, false);\n\n    // ReactTooltip.rebuild\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.addEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild, false);\n\n    // ReactTooltip.show\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.addEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow, false);\n\n    // Resize\n    if (resizeHide) {\n      window.removeEventListener('resize', this.onWindowResize);\n      window.addEventListener('resize', this.onWindowResize, false);\n    }\n  };\n\n  target.prototype.unbindWindowEvents = function() {\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.removeEventListener('resize', this.onWindowResize);\n  };\n\n  /**\n   * invoked by resize event of window\n   */\n  target.prototype.onWindowResize = function() {\n    if (!this.mount) return;\n    this.hideTooltip();\n  };\n}\n","/**\n * Util method to judge if it should follow capture model\n */\n\nexport default function(target) {\n  target.prototype.isCapture = function(currentTarget) {\n    return (\n      (currentTarget &&\n        currentTarget.getAttribute('data-iscapture') === 'true') ||\n      this.props.isCapture ||\n      false\n    );\n  };\n}\n","/**\n * Util method to get effect\n */\n\nexport default function(target) {\n  target.prototype.getEffect = function(currentTarget) {\n    const dataEffect = currentTarget.getAttribute('data-effect');\n    return dataEffect || this.props.effect || 'float';\n  };\n}\n","import { v4 as uuid } from 'uuid';\n\nexport function generateUUID() {\n  return 't' + uuid();\n}\n","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { PropertyCollection, PropertyId } from \"../sdk/Exports\";\r\n\r\nexport enum RecognitionMode {\r\n    Interactive,\r\n    Conversation,\r\n    Dictation,\r\n}\r\n\r\nexport enum SpeechResultFormat {\r\n    Simple,\r\n    Detailed,\r\n}\r\n\r\nexport class RecognizerConfig {\r\n    private privRecognitionMode: RecognitionMode = RecognitionMode.Interactive;\r\n    private privSpeechServiceConfig: SpeechServiceConfig;\r\n    private privRecognitionActivityTimeout: number;\r\n    private privParameters: PropertyCollection;\r\n\r\n    constructor(\r\n        speechServiceConfig: SpeechServiceConfig,\r\n        parameters: PropertyCollection) {\r\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new SpeechServiceConfig(new Context(null));\r\n        this.privParameters = parameters;\r\n    }\r\n\r\n    public get parameters(): PropertyCollection {\r\n        return this.privParameters;\r\n    }\r\n\r\n    public get recognitionMode(): RecognitionMode {\r\n        return this.privRecognitionMode;\r\n    }\r\n\r\n    public set recognitionMode(value: RecognitionMode) {\r\n        this.privRecognitionMode = value;\r\n        this.privRecognitionActivityTimeout = value === RecognitionMode.Interactive ? 8000 : 25000;\r\n        this.privSpeechServiceConfig.Recognition = RecognitionMode[value];\r\n    }\r\n\r\n    public get SpeechServiceConfig(): SpeechServiceConfig {\r\n        return this.privSpeechServiceConfig;\r\n    }\r\n\r\n    public get recognitionActivityTimeout(): number {\r\n        return this.privRecognitionActivityTimeout;\r\n    }\r\n\r\n    public get isContinuousRecognition(): boolean {\r\n        return this.privRecognitionMode !== RecognitionMode.Interactive;\r\n    }\r\n\r\n    public get autoDetectSourceLanguages(): string {\r\n        return this.parameters.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, undefined);\r\n    }\r\n}\r\n\r\n// The config is serialized and sent as the Speech.Config\r\nexport class SpeechServiceConfig {\r\n    private context: Context;\r\n    private recognition: string;\r\n\r\n    constructor(context: Context) {\r\n        this.context = context;\r\n    }\r\n\r\n    public serialize = (): string => {\r\n        return JSON.stringify(this, (key: any, value: any): any => {\r\n            if (value && typeof value === \"object\") {\r\n                const replacement: any = {};\r\n                for (const k in value) {\r\n                    if (Object.hasOwnProperty.call(value, k)) {\r\n                        replacement[k && k.charAt(0).toLowerCase() + k.substring(1)] = value[k];\r\n                    }\r\n                }\r\n                return replacement;\r\n            }\r\n            return value;\r\n        });\r\n    }\r\n\r\n    public get Context(): Context {\r\n        return this.context;\r\n    }\r\n\r\n    public get Recognition(): string {\r\n        return this.recognition;\r\n    }\r\n\r\n    public set Recognition(value: string) {\r\n        this.recognition = value.toLowerCase();\r\n    }\r\n}\r\n\r\nexport class Context {\r\n    public system: System;\r\n    public os: OS;\r\n    public audio: ISpeechConfigAudio;\r\n\r\n    constructor(os: OS) {\r\n        this.system = new System();\r\n        this.os = os;\r\n    }\r\n}\r\n\r\nexport class System {\r\n    public name: string;\r\n    public version: string;\r\n    public build: string;\r\n    public lang: string;\r\n\r\n    constructor() {\r\n        // Note: below will be patched for official builds.\r\n        const SPEECHSDK_CLIENTSDK_VERSION = \"1.16.0\";\r\n\r\n        this.name = \"SpeechSDK\";\r\n        this.version = SPEECHSDK_CLIENTSDK_VERSION;\r\n        this.build = \"JavaScript\";\r\n        this.lang = \"JavaScript\";\r\n    }\r\n}\r\n\r\nexport class OS {\r\n    public platform: string;\r\n    public name: string;\r\n    public version: string;\r\n\r\n    constructor(platform: string, name: string, version: string) {\r\n        this.platform = platform;\r\n        this.name = name;\r\n        this.version = version;\r\n    }\r\n}\r\n\r\nexport class Device {\r\n    public manufacturer: string;\r\n    public model: string;\r\n    public version: string;\r\n\r\n    constructor(manufacturer: string, model: string, version: string) {\r\n        this.manufacturer = manufacturer;\r\n        this.model = model;\r\n        this.version = version;\r\n    }\r\n}\r\n\r\nexport interface ISpeechConfigAudio {\r\n    source?: ISpeechConfigAudioDevice;\r\n    playback?: ISpeechConfigAudioDevice;\r\n}\r\n\r\nexport interface ISpeechConfigAudioDevice {\r\n    manufacturer: string;\r\n    model: string;\r\n    connectivity: connectivity;\r\n    type: type;\r\n    samplerate: number;\r\n    bitspersample: number;\r\n    channelcount: number;\r\n}\r\n\r\nexport enum connectivity {\r\n    Bluetooth = \"Bluetooth\",\r\n    Wired = \"Wired\",\r\n    WiFi = \"WiFi\",\r\n    Cellular = \"Cellular\",\r\n    InBuilt = \"InBuilt\",\r\n    Unknown = \"Unknown\",\r\n}\r\n\r\nexport enum type {\r\n    Phone = \"Phone\",\r\n    Speaker = \"Speaker\",\r\n    Car = \"Car\",\r\n    Headset = \"Headset\",\r\n    Thermostat = \"Thermostat\",\r\n    Microphones = \"Microphones\",\r\n    Deskphone = \"Deskphone\",\r\n    RemoteControl = \"RemoteControl\",\r\n    Unknown = \"Unknown\",\r\n    File = \"File\",\r\n    Stream = \"Stream\",\r\n}\r\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { INumberDictionary } from \"../../common/Exports\";\r\nimport { SpeechSynthesisOutputFormat } from \"../SpeechSynthesisOutputFormat\";\r\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat\";\r\n\r\nexport enum AudioFormatTag {\r\n    PCM = 1,\r\n    MuLaw,\r\n    Siren,\r\n    MP3,\r\n    SILKSkype,\r\n    OGG_OPUS,\r\n    WEBM_OPUS,\r\n}\r\n\r\n/**\r\n * @private\r\n * @class AudioOutputFormatImpl\r\n * Updated in version 1.16.0\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class AudioOutputFormatImpl extends AudioStreamFormatImpl {\r\n    public static SpeechSynthesisOutputFormatToString: INumberDictionary<string> = {\r\n        [SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw]: \"raw-8khz-8bit-mono-mulaw\",\r\n        [SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren]: \"riff-16khz-16kbps-mono-siren\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren]: \"audio-16khz-16kbps-mono-siren\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3]: \"audio-16khz-32kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3]: \"audio-16khz-128kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3]: \"audio-16khz-64kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3]: \"audio-24khz-48kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3]: \"audio-24khz-96kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3]: \"audio-24khz-160kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk]: \"raw-16khz-16bit-mono-truesilk\",\r\n        [SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm]: \"riff-16khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm]: \"riff-8khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm]: \"riff-24khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw]: \"riff-8khz-8bit-mono-mulaw\",\r\n        [SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm]: \"raw-16khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm]: \"raw-24khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm]: \"raw-8khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus]: \"ogg-16khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus]: \"ogg-24khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm]: \"raw-48khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm]: \"riff-48khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3]: \"audio-48khz-96kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3]: \"audio-48khz-192kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus]: \"ogg-48khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus]: \"webm-16khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus]: \"webm-24khz-16bit-mono-opus\",\r\n    };\r\n    private priAudioFormatString: string;\r\n    /**\r\n     * audio format string for synthesis request, which may differ from priAudioFormatString.\r\n     * e.g. for riff format, we will request raw format and add a header in SDK side.\r\n     */\r\n    private readonly priRequestAudioFormatString: string;\r\n    private readonly priHasHeader: boolean;\r\n\r\n    /**\r\n     * Creates an instance with the given values.\r\n     * @constructor\r\n     * @param formatTag\r\n     * @param {number} channels - Number of channels.\r\n     * @param {number} samplesPerSec - Samples per second.\r\n     * @param {number} avgBytesPerSec - Average bytes per second.\r\n     * @param {number} blockAlign - Block alignment.\r\n     * @param {number} bitsPerSample - Bits per sample.\r\n     * @param {string} audioFormatString - Audio format string\r\n     * @param {string} requestAudioFormatString - Audio format string sent to service.\r\n     * @param {boolean} hasHeader - If the format has header or not.\r\n     */\r\n    public constructor(formatTag: AudioFormatTag,\r\n                       channels: number,\r\n                       samplesPerSec: number,\r\n                       avgBytesPerSec: number,\r\n                       blockAlign: number,\r\n                       bitsPerSample: number,\r\n                       audioFormatString: string,\r\n                       requestAudioFormatString: string,\r\n                       hasHeader: boolean) {\r\n        super(samplesPerSec, bitsPerSample, channels);\r\n        this.formatTag = formatTag;\r\n        this.avgBytesPerSec = avgBytesPerSec;\r\n        this.blockAlign = blockAlign;\r\n        this.priAudioFormatString = audioFormatString;\r\n        this.priRequestAudioFormatString = requestAudioFormatString;\r\n        this.priHasHeader = hasHeader;\r\n    }\r\n\r\n    public static fromSpeechSynthesisOutputFormat(speechSynthesisOutputFormat?: SpeechSynthesisOutputFormat): AudioOutputFormatImpl {\r\n        if (speechSynthesisOutputFormat === undefined) {\r\n            return AudioOutputFormatImpl.getDefaultOutputFormat();\r\n        }\r\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(\r\n            AudioOutputFormatImpl.SpeechSynthesisOutputFormatToString[speechSynthesisOutputFormat]);\r\n    }\r\n\r\n    public static fromSpeechSynthesisOutputFormatString(speechSynthesisOutputFormatString: string): AudioOutputFormatImpl {\r\n        switch (speechSynthesisOutputFormatString) {\r\n            case \"raw-8khz-8bit-mono-mulaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"riff-16khz-16kbps-mono-siren\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.Siren,\r\n                    1,\r\n                    16000,\r\n                    2000,\r\n                    40,\r\n                    0,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"audio-16khz-16kbps-mono-siren\",\r\n                    true);\r\n            case \"audio-16khz-16kbps-mono-siren\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.Siren,\r\n                    1,\r\n                    16000,\r\n                    2000,\r\n                    40,\r\n                    0,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-32kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    16000,\r\n                    32 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-128kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    16000,\r\n                    128 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-64kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    16000,\r\n                    64 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-48kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    24000,\r\n                    48 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-96kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    24000,\r\n                    96 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-160kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    24000,\r\n                    160 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-16khz-16bit-mono-truesilk\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.SILKSkype,\r\n                    1,\r\n                    16000,\r\n                    32000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n\r\n            case \"riff-8khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    8000,\r\n                    16000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"riff-24khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    24000,\r\n                    48000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-24khz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"riff-8khz-8bit-mono-mulaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MuLaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-8bit-mono-mulaw\",\r\n                    true);\r\n            case \"raw-16khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    16000,\r\n                    32000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-16khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"raw-24khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    24000,\r\n                    48000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-24khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"raw-8khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    8000,\r\n                    16000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"ogg-16khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OGG_OPUS,\r\n                    1,\r\n                    16000,\r\n                    8192,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"ogg-24khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OGG_OPUS,\r\n                    1,\r\n                    24000,\r\n                    8192,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-48khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    48000,\r\n                    96000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-48khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"riff-48khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    48000,\r\n                    96000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-48khz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"audio-48khz-96kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    48000,\r\n                    96 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-48khz-192kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    48000,\r\n                    192 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"ogg-48khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OGG_OPUS,\r\n                    1,\r\n                    48000,\r\n                    12000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"webm-16khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.WEBM_OPUS,\r\n                    1,\r\n                    16000,\r\n                    8000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"webm-24khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.WEBM_OPUS,\r\n                    1,\r\n                    24000,\r\n                    8000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"riff-16khz-16bit-mono-pcm\":\r\n            default:\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    16000,\r\n                    32000,\r\n                    2,\r\n                    16,\r\n                    \"riff-16khz-16bit-mono-pcm\",\r\n                    \"raw-16khz-16bit-mono-pcm\",\r\n                    true);\r\n        }\r\n    }\r\n\r\n    public static getDefaultOutputFormat(): AudioOutputFormatImpl {\r\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(\r\n            (typeof window !== \"undefined\") ? \"audio-24khz-48kbitrate-mono-mp3\" : \"riff-16khz-16bit-mono-pcm\");\r\n    }\r\n\r\n    /**\r\n     * The format tag of the audio\r\n     * @AudioFormatTag AudioOutputFormatImpl.prototype.formatTag\r\n     * @function\r\n     * @public\r\n     */\r\n    public formatTag: AudioFormatTag;\r\n\r\n    /**\r\n     * Specifies if this audio output format has a header\r\n     * @boolean AudioOutputFormatImpl.prototype.hasHeader\r\n     * @function\r\n     * @public\r\n     */\r\n    public get hasHeader(): boolean {\r\n        return this.priHasHeader;\r\n    }\r\n\r\n    /**\r\n     * Specifies the header of this format\r\n     * @ArrayBuffer AudioOutputFormatImpl.prototype.header\r\n     * @function\r\n     * @public\r\n     */\r\n    public get header(): ArrayBuffer {\r\n        if (this.hasHeader) {\r\n            return this.privHeader;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Updates the header based on the audio length\r\n     * @member AudioOutputFormatImpl.updateHeader\r\n     * @function\r\n     * @public\r\n     * @param {number} audioLength - the audio length\r\n     */\r\n    public updateHeader(audioLength: number): void {\r\n        if (this.priHasHeader) {\r\n            const view = new DataView(this.privHeader);\r\n            view.setUint32(40, audioLength, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio format string to be sent to the service\r\n     * @string AudioOutputFormatImpl.prototype.requestAudioFormatString\r\n     * @function\r\n     * @public\r\n     */\r\n    public get requestAudioFormatString(): string {\r\n        return this.priRequestAudioFormatString;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError, ConnectionMessage, IStringDictionary, MessageType } from \"../common/Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\n\r\nexport class SpeechConnectionMessage extends ConnectionMessage {\r\n\r\n    private privPath: string;\r\n    private privRequestId: string;\r\n    private privContentType: string;\r\n    private privStreamId: string;\r\n    private privAdditionalHeaders: IStringDictionary<string>;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        path: string,\r\n        requestId: string,\r\n        contentType: string,\r\n        body: any,\r\n        streamId?: string,\r\n        additionalHeaders?: IStringDictionary<string>,\r\n        id?: string) {\r\n\r\n        if (!path) {\r\n            throw new ArgumentNullError(\"path\");\r\n        }\r\n\r\n        if (!requestId) {\r\n            throw new ArgumentNullError(\"requestId\");\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        headers[HeaderNames.Path] = path;\r\n        headers[HeaderNames.RequestId] = requestId;\r\n        headers[HeaderNames.RequestTimestamp] = new Date().toISOString();\r\n        if (contentType) {\r\n            headers[HeaderNames.ContentType] = contentType;\r\n        }\r\n\r\n        if (streamId) {\r\n            headers[HeaderNames.RequestStreamId] = streamId;\r\n        }\r\n\r\n        if (additionalHeaders) {\r\n            for (const headerName in additionalHeaders) {\r\n                if (headerName) {\r\n                    headers[headerName] = additionalHeaders[headerName];\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (id) {\r\n            super(messageType, body, headers, id);\r\n        } else {\r\n            super(messageType, body, headers);\r\n        }\r\n\r\n        this.privPath = path;\r\n        this.privRequestId = requestId;\r\n        this.privContentType = contentType;\r\n        this.privStreamId = streamId;\r\n        this.privAdditionalHeaders = additionalHeaders;\r\n    }\r\n\r\n    public get path(): string {\r\n        return this.privPath;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get contentType(): string {\r\n        return this.privContentType;\r\n    }\r\n\r\n    public get streamId(): string {\r\n        return this.privStreamId;\r\n    }\r\n\r\n    public get additionalHeaders(): IStringDictionary<string> {\r\n        return this.privAdditionalHeaders;\r\n    }\r\n\r\n    public static fromConnectionMessage = (message: ConnectionMessage): SpeechConnectionMessage => {\r\n        let path = null;\r\n        let requestId = null;\r\n        let contentType = null;\r\n        let requestTimestamp = null;\r\n        let streamId = null;\r\n        const additionalHeaders: IStringDictionary<string> = {};\r\n\r\n        if (message.headers) {\r\n            for (const headerName in message.headers) {\r\n                if (headerName) {\r\n                    if (headerName.toLowerCase() === HeaderNames.Path.toLowerCase()) {\r\n                        path = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.RequestId.toLowerCase()) {\r\n                        requestId = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.RequestTimestamp.toLowerCase()) {\r\n                        requestTimestamp = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.ContentType.toLowerCase()) {\r\n                        contentType = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.RequestStreamId.toLowerCase()) {\r\n                        streamId = message.headers[headerName];\r\n                    } else {\r\n                        additionalHeaders[headerName] = message.headers[headerName];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return new SpeechConnectionMessage(\r\n            message.messageType,\r\n            path,\r\n            requestId,\r\n            contentType,\r\n            message.body,\r\n            streamId,\r\n            additionalHeaders,\r\n            message.id);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport { SpeechSynthesizer } from \"../sdk/Exports\";\r\n\r\n/**\r\n * Represents the JSON used in the synthesis.context message sent to the speech service.\r\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\r\n */\r\nexport class SynthesisContext {\r\n    private privContext: { [section: string]: any } = {};\r\n    private privSpeechSynthesizer: SpeechSynthesizer;\r\n    private privAudioOutputFormat: AudioOutputFormatImpl;\r\n\r\n    constructor(speechSynthesizer: SpeechSynthesizer) {\r\n        this.privSpeechSynthesizer = speechSynthesizer;\r\n    }\r\n\r\n    /**\r\n     * Adds a section to the synthesis.context object.\r\n     * @param sectionName Name of the section to add.\r\n     * @param value JSON serializable object that represents the value.\r\n     */\r\n    public setSection(sectionName: string, value: any): void {\r\n        this.privContext[sectionName] = value;\r\n    }\r\n\r\n    /**\r\n     * Sets the audio output format for synthesis context generation.\r\n     * @param format {AudioOutputFormatImpl} the output format\r\n     */\r\n    public set audioOutputFormat(format: AudioOutputFormatImpl) {\r\n        this.privAudioOutputFormat = format;\r\n    }\r\n\r\n    public toJSON(): string {\r\n\r\n        const synthesisSection: ISynthesisSection = this.buildSynthesisContext();\r\n        this.setSection(\"synthesis\", synthesisSection);\r\n\r\n        return JSON.stringify(this.privContext);\r\n    }\r\n\r\n    private buildSynthesisContext(): ISynthesisSection {\r\n        return {\r\n            audio: {\r\n                metadataOptions: {\r\n                    bookmarkEnabled: (!!this.privSpeechSynthesizer.bookmarkReached),\r\n                    sentenceBoundaryEnabled: false,\r\n                    visemeEnabled: (!!this.privSpeechSynthesizer.visemeReceived),\r\n                    wordBoundaryEnabled: (!!this.privSpeechSynthesizer.wordBoundary),\r\n                },\r\n                outputFormat: this.privAudioOutputFormat.requestAudioFormatString,\r\n            },\r\n            language: {\r\n                autoDetection: this.privSpeechSynthesizer.autoDetectSourceLanguage\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\ninterface ISynthesisSection {\r\n    audio: {\r\n        outputFormat: string,\r\n        metadataOptions: {\r\n            bookmarkEnabled: boolean,\r\n            wordBoundaryEnabled: boolean,\r\n            visemeEnabled: boolean,\r\n            sentenceBoundaryEnabled: boolean,\r\n        }\r\n    };\r\n    language: {\r\n        autoDetection: boolean\r\n    };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Represents the JSON used in the agent.config message sent to the speech service.\r\n */\r\nexport class AgentConfig {\r\n    private iPrivConfig: IAgentConfig;\r\n\r\n    public toJsonString(): string {\r\n        return JSON.stringify(this.iPrivConfig);\r\n    }\r\n\r\n    public get(): IAgentConfig {\r\n        return this.iPrivConfig;\r\n    }\r\n\r\n    /**\r\n     * Setter for the agent.config object.\r\n     * @param value a JSON serializable object.\r\n     */\r\n    public set(value: IAgentConfig): void {\r\n        this.iPrivConfig = value;\r\n    }\r\n}\r\n\r\nexport interface IAgentConfig {\r\n    botInfo: {\r\n        commType: string,\r\n        connectionId: string,\r\n        conversationId: string,\r\n        fromId: string\r\n        commandsCulture: string,\r\n        ttsAudioFormat: string\r\n    };\r\n    version: number;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport enum MetadataType {\r\n    WordBoundary = \"WordBoundary\",\r\n    Bookmark = \"Bookmark\",\r\n    Viseme = \"Viseme\"\r\n}\r\n\r\nexport interface ISynthesisMetadata {\r\n    Type: MetadataType;\r\n    Data: {\r\n        Offset: number;\r\n        text: {\r\n            Text: string;\r\n            Length: number;\r\n        };\r\n        Bookmark: string;\r\n        VisemeId: number;\r\n        AnimationChunk: string;\r\n        IsLastAnimation: boolean;\r\n    };\r\n}\r\n\r\n// audio.metadata\r\nexport interface ISynthesisAudioMetadata {\r\n    Metadata: ISynthesisMetadata[];\r\n}\r\n\r\nexport class SynthesisAudioMetadata implements ISynthesisAudioMetadata {\r\n    private privSynthesisAudioMetadata: ISynthesisAudioMetadata;\r\n\r\n    private constructor(json: string) {\r\n        this.privSynthesisAudioMetadata = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): SynthesisAudioMetadata {\r\n        return new SynthesisAudioMetadata(json);\r\n    }\r\n\r\n    public get Metadata(): ISynthesisMetadata[] {\r\n        return this.privSynthesisAudioMetadata.Metadata;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionMessage,\r\n    Deferred,\r\n    IStringDictionary,\r\n    IWebsocketMessageFormatter,\r\n    MessageType,\r\n    RawWebsocketMessage,\r\n} from \"../common/Exports\";\r\n\r\nconst CRLF: string = \"\\r\\n\";\r\n\r\nexport class WebsocketMessageFormatter implements IWebsocketMessageFormatter {\r\n\r\n    public toConnectionMessage = (message: RawWebsocketMessage): Promise<ConnectionMessage> => {\r\n        const deferral = new Deferred<ConnectionMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const textMessage: string = message.textContent;\r\n                let headers: IStringDictionary<string> = {};\r\n                let body: string = null;\r\n\r\n                if (textMessage) {\r\n                    const headerBodySplit = textMessage.split(\"\\r\\n\\r\\n\");\r\n                    if (headerBodySplit && headerBodySplit.length > 0) {\r\n                        headers = this.parseHeaders(headerBodySplit[0]);\r\n                        if (headerBodySplit.length > 1) {\r\n                            body = headerBodySplit[1];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                deferral.resolve(new ConnectionMessage(message.messageType, body, headers, message.id));\r\n            } else if (message.messageType === MessageType.Binary) {\r\n                const binaryMessage: ArrayBuffer = message.binaryContent;\r\n                let headers: IStringDictionary<string> = {};\r\n                let body: ArrayBuffer = null;\r\n\r\n                if (!binaryMessage || binaryMessage.byteLength < 2) {\r\n                    throw new Error(\"Invalid binary message format. Header length missing.\");\r\n                }\r\n\r\n                const dataView = new DataView(binaryMessage);\r\n                const headerLength = dataView.getInt16(0);\r\n\r\n                if (binaryMessage.byteLength < headerLength + 2) {\r\n                    throw new Error(\"Invalid binary message format. Header content missing.\");\r\n                }\r\n\r\n                let headersString = \"\";\r\n                for (let i = 0; i < headerLength; i++) {\r\n                    headersString += String.fromCharCode((dataView).getInt8(i + 2));\r\n                }\r\n\r\n                headers = this.parseHeaders(headersString);\r\n\r\n                if (binaryMessage.byteLength > headerLength + 2) {\r\n                    body = binaryMessage.slice(2 + headerLength);\r\n                }\r\n\r\n                deferral.resolve(new ConnectionMessage(message.messageType, body, headers, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. Error: ${e}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n\r\n    public fromConnectionMessage = (message: ConnectionMessage): Promise<RawWebsocketMessage> => {\r\n        const deferral = new Deferred<RawWebsocketMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const payload = `${this.makeHeaders(message)}${CRLF}${message.textBody ? message.textBody : \"\"}`;\r\n\r\n                deferral.resolve(new RawWebsocketMessage(MessageType.Text, payload, message.id));\r\n\r\n            } else if (message.messageType === MessageType.Binary) {\r\n                const headersString = this.makeHeaders(message);\r\n                const content = message.binaryBody;\r\n\r\n                const headerBuffer = this.stringToArrayBuffer(headersString);\r\n                const headerInt8Array = new Int8Array(headerBuffer);\r\n                const headerLength = headerInt8Array.byteLength;\r\n\r\n                const payloadInt8Array = new Int8Array(2 + headerLength + (content ? content.byteLength : 0));\r\n                payloadInt8Array[0] = ((headerLength >> 8) & 0xff);\r\n                payloadInt8Array[1] = headerLength & 0xff;\r\n                payloadInt8Array.set(headerInt8Array, 2);\r\n\r\n                if (content) {\r\n                    const bodyInt8Array = new Int8Array(content);\r\n                    payloadInt8Array.set(bodyInt8Array, 2 + headerLength);\r\n                }\r\n\r\n                const payload: ArrayBuffer = payloadInt8Array.buffer;\r\n\r\n                deferral.resolve(new RawWebsocketMessage(MessageType.Binary, payload, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. ${e}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n\r\n    private makeHeaders = (message: ConnectionMessage): string => {\r\n        let headersString: string = \"\";\r\n\r\n        if (message.headers) {\r\n            for (const header in message.headers) {\r\n                if (header) {\r\n                    headersString += `${header}: ${message.headers[header]}${CRLF}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return headersString;\r\n    }\r\n\r\n    private parseHeaders = (headersString: string): IStringDictionary<string> => {\r\n        const headers: IStringDictionary<string> = {};\r\n\r\n        if (headersString) {\r\n            const headerMatches = headersString.match(/[^\\r\\n]+/g);\r\n            if (headers) {\r\n                for (const header of headerMatches) {\r\n                    if (header) {\r\n                        const separatorIndex = header.indexOf(\":\");\r\n                        const headerName = separatorIndex > 0 ? header.substr(0, separatorIndex).trim().toLowerCase() : header;\r\n                        const headerValue =\r\n                            separatorIndex > 0 && header.length > (separatorIndex + 1) ?\r\n                                header.substr(separatorIndex + 1).trim() :\r\n                                \"\";\r\n\r\n                        headers[headerName] = headerValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    private stringToArrayBuffer = (str: string): ArrayBuffer => {\r\n        const buffer = new ArrayBuffer(str.length);\r\n        const view = new DataView(buffer);\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint8(i, str.charCodeAt(i));\r\n        }\r\n        return buffer;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IPrimaryLanguage } from \"./SimpleSpeechPhrase\";\r\n\r\n// speech.hypothesis\r\nexport interface ISpeechHypothesis {\r\n    Text: string;\r\n    Offset: number;\r\n    Duration: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    SpeakerId?: string;\r\n}\r\n\r\nexport class SpeechHypothesis implements ISpeechHypothesis {\r\n    private privSpeechHypothesis: ISpeechHypothesis;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechHypothesis = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechHypothesis {\r\n        return new SpeechHypothesis(json);\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privSpeechHypothesis.Text;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechHypothesis.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSpeechHypothesis.Duration;\r\n    }\r\n\r\n    public get Language(): string {\r\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Language;\r\n    }\r\n\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Confidence;\r\n    }\r\n\r\n    public get SpeakerId(): string {\r\n        return this.privSpeechHypothesis.SpeakerId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionStatus } from \"../Exports\";\r\n\r\n// speech.phrase\r\nexport interface ISimpleSpeechPhrase {\r\n    RecognitionStatus: RecognitionStatus;\r\n    DisplayText: string;\r\n    Offset?: number;\r\n    Duration?: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    SpeakerId?: string;\r\n}\r\n\r\nexport interface IPrimaryLanguage {\r\n    Language: string;\r\n    Confidence: string;\r\n}\r\n\r\nexport class SimpleSpeechPhrase implements ISimpleSpeechPhrase {\r\n    private privSimpleSpeechPhrase: ISimpleSpeechPhrase;\r\n\r\n    private constructor(json: string) {\r\n        this.privSimpleSpeechPhrase = JSON.parse(json);\r\n        this.privSimpleSpeechPhrase.RecognitionStatus = (RecognitionStatus as any)[this.privSimpleSpeechPhrase.RecognitionStatus];\r\n    }\r\n\r\n    public static fromJSON(json: string): SimpleSpeechPhrase {\r\n        return new SimpleSpeechPhrase(json);\r\n    }\r\n\r\n    public get RecognitionStatus(): RecognitionStatus {\r\n        return this.privSimpleSpeechPhrase.RecognitionStatus;\r\n    }\r\n\r\n    public get DisplayText(): string {\r\n        return this.privSimpleSpeechPhrase.DisplayText;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSimpleSpeechPhrase.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSimpleSpeechPhrase.Duration;\r\n    }\r\n\r\n    public get Language(): string {\r\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Language;\r\n    }\r\n\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Confidence;\r\n    }\r\n\r\n    public get SpeakerId(): string {\r\n        return this.privSimpleSpeechPhrase.SpeakerId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * @class SynthesisStatus\r\n * @private\r\n */\r\nexport enum SynthesisStatus {\r\n    /**\r\n     * The response contains valid audio data.\r\n     * @member SynthesisStatus.Success\r\n     */\r\n    Success,\r\n\r\n    /**\r\n     * Indicates the end of audio data. No valid audio data is included in the message.\r\n     * @member SynthesisStatus.SynthesisEnd\r\n     */\r\n    SynthesisEnd,\r\n\r\n    /**\r\n     * Indicates an error occurred during synthesis data processing.\r\n     * @member SynthesisStatus.Error\r\n     */\r\n    Error,\r\n}\r\n\r\nexport enum RecognitionStatus {\r\n    Success,\r\n    NoMatch,\r\n    InitialSilenceTimeout,\r\n    BabbleTimeout,\r\n    Error,\r\n    EndOfDictation,\r\n    TooManyRequests,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ResultReason\r\n} from \"../sdk/Exports\";\r\nimport { RecognitionStatus } from \"./Exports\";\r\n\r\nexport class EnumTranslation {\r\n    public static implTranslateRecognitionResult(recognitionStatus: RecognitionStatus): ResultReason {\r\n        let reason = ResultReason.Canceled;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n                reason = ResultReason.RecognizedSpeech;\r\n                break;\r\n            case RecognitionStatus.NoMatch:\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n            case RecognitionStatus.EndOfDictation:\r\n                reason = ResultReason.NoMatch;\r\n                break;\r\n            case RecognitionStatus.Error:\r\n            default:\r\n                reason = ResultReason.Canceled;\r\n                break;\r\n        }\r\n        return reason;\r\n    }\r\n\r\n    public static implTranslateCancelResult(recognitionStatus: RecognitionStatus): CancellationReason {\r\n        let reason = CancellationReason.EndOfStream;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n            case RecognitionStatus.EndOfDictation:\r\n            case RecognitionStatus.NoMatch:\r\n                reason = CancellationReason.EndOfStream;\r\n                break;\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n            case RecognitionStatus.Error:\r\n            default:\r\n                reason = CancellationReason.Error;\r\n                break;\r\n        }\r\n        return reason;\r\n    }\r\n\r\n    public static implTranslateCancelErrorCode(recognitionStatus: RecognitionStatus): CancellationErrorCode {\r\n        let reason: CancellationErrorCode = CancellationErrorCode.NoError;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Error:\r\n                reason = CancellationErrorCode.ServiceError;\r\n                break;\r\n            case RecognitionStatus.TooManyRequests:\r\n                reason = CancellationErrorCode.TooManyRequests;\r\n                break;\r\n            default:\r\n                reason = CancellationErrorCode.NoError;\r\n                break;\r\n        }\r\n\r\n        return reason;\r\n\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IPrimaryLanguage, RecognitionStatus } from \"../Exports\";\r\n\r\n// speech.phrase for detailed\r\nexport interface IDetailedSpeechPhrase {\r\n    RecognitionStatus: RecognitionStatus;\r\n    NBest: IPhrase[];\r\n    Duration?: number;\r\n    Offset?: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n}\r\n\r\nexport interface IPhrase {\r\n    Confidence?: number;\r\n    Lexical: string;\r\n    ITN: string;\r\n    MaskedITN: string;\r\n    Display: string;\r\n}\r\n\r\nexport class DetailedSpeechPhrase implements IDetailedSpeechPhrase {\r\n    private privDetailedSpeechPhrase: IDetailedSpeechPhrase;\r\n\r\n    private constructor(json: string) {\r\n        this.privDetailedSpeechPhrase = JSON.parse(json);\r\n        this.privDetailedSpeechPhrase.RecognitionStatus = (RecognitionStatus as any)[this.privDetailedSpeechPhrase.RecognitionStatus];\r\n    }\r\n\r\n    public static fromJSON(json: string): DetailedSpeechPhrase {\r\n        return new DetailedSpeechPhrase(json);\r\n    }\r\n\r\n    public get RecognitionStatus(): RecognitionStatus {\r\n        return this.privDetailedSpeechPhrase.RecognitionStatus;\r\n    }\r\n    public get NBest(): IPhrase[] {\r\n        return this.privDetailedSpeechPhrase.NBest;\r\n    }\r\n    public get Duration(): number {\r\n        return this.privDetailedSpeechPhrase.Duration;\r\n    }\r\n    public get Offset(): number {\r\n        return this.privDetailedSpeechPhrase.Offset;\r\n    }\r\n    public get Language(): string {\r\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Language;\r\n    }\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Confidence;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IDynamicGrammar,\r\n    IDynamicGrammarGeneric,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Responsible for building the object to be sent to the speech service to support dynamic grammars.\r\n * @class DynamicGrammarBuilder\r\n */\r\nexport class DynamicGrammarBuilder {\r\n\r\n    private privPhrases: string[];\r\n    private privGrammars: string[];\r\n\r\n    // Adds one more reference phrases to the dynamic grammar to send.\r\n    // All added phrases are generic phrases.\r\n    public addPhrase(phrase: string | string[]): void {\r\n        if (!this.privPhrases) {\r\n            this.privPhrases = [];\r\n        }\r\n\r\n        if (phrase instanceof Array) {\r\n            this.privPhrases = this.privPhrases.concat(phrase as string[]);\r\n        } else {\r\n            this.privPhrases.push(phrase as string);\r\n        }\r\n    }\r\n\r\n    // Clears all phrases stored in the current object.\r\n    public clearPhrases(): void {\r\n        this.privPhrases = undefined;\r\n    }\r\n\r\n    // Adds one or more reference grammars to the current grammar.\r\n    public addReferenceGrammar(grammar: string | string[]): void {\r\n        if (!this.privGrammars) {\r\n            this.privGrammars = [];\r\n        }\r\n\r\n        if (grammar instanceof Array) {\r\n            this.privGrammars = this.privGrammars.concat(grammar as string[]);\r\n        } else {\r\n            this.privGrammars.push(grammar as string);\r\n        }\r\n    }\r\n\r\n    // clears all grammars stored on the recognizer.\r\n    public clearGrammars(): void {\r\n        this.privGrammars = undefined;\r\n    }\r\n\r\n    // Generates an object that represents the dynamic grammar used by the Speech Service.\r\n    // This is done by building an object with the correct layout based on the phrases and reference grammars added to this instance\r\n    // of a DynamicGrammarBuilder\r\n    public generateGrammarObject(): IDynamicGrammar {\r\n        if (this.privGrammars === undefined && this.privPhrases === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        const retObj: IDynamicGrammar = {};\r\n        retObj.ReferenceGrammars = this.privGrammars;\r\n\r\n        if (undefined !== this.privPhrases && 0 !== this.privPhrases.length) {\r\n            const retPhrases: IDynamicGrammarGeneric[] = [];\r\n\r\n            this.privPhrases.forEach((value: string, index: number, array: string[]): void => {\r\n                retPhrases.push({\r\n                    Text: value,\r\n                });\r\n            });\r\n\r\n            retObj.Groups = [{ Type: \"Generic\", Items: retPhrases }];\r\n        }\r\n\r\n        return retObj;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    IDynamicGrammar,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Represents the JSON used in the speech.context message sent to the speech service.\r\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\r\n */\r\nexport class SpeechContext {\r\n    private privContext: { [section: string]: any } = {};\r\n    private privDynamicGrammar: DynamicGrammarBuilder;\r\n\r\n    constructor(dynamicGrammar: DynamicGrammarBuilder) {\r\n        this.privDynamicGrammar = dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Adds a section to the speech.context object.\r\n     * @param sectionName Name of the section to add.\r\n     * @param value JSON serializable object that represents the value.\r\n     */\r\n    public setSection(sectionName: string, value: any): void {\r\n        this.privContext[sectionName] = value;\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * This is only used by pronunciation assessment config.\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public setPronunciationAssessmentParams(params: string): void {\r\n        if (this.privContext.phraseDetection === undefined) {\r\n            this.privContext.phraseDetection = {\r\n                enrichment: {\r\n                    pronunciationAssessment: {}\r\n                }\r\n            };\r\n        }\r\n        this.privContext.phraseDetection.enrichment.pronunciationAssessment = JSON.parse(params);\r\n        if (this.privContext.phraseOutput === undefined) {\r\n            this.privContext.phraseOutput = {\r\n                detailed: {\r\n                    options: []\r\n                },\r\n                format: {}\r\n            };\r\n        }\r\n        this.privContext.phraseOutput.format = \"Detailed\";\r\n        this.privContext.phraseOutput.detailed.options.push(\"PronunciationAssessment\");\r\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"WordTimings\") === -1) {\r\n            this.privContext.phraseOutput.detailed.options.push(\"WordTimings\");\r\n        }\r\n    }\r\n\r\n    public toJSON(): string {\r\n\r\n        const dgi: IDynamicGrammar = this.privDynamicGrammar.generateGrammarObject();\r\n        this.setSection(\"dgi\", dgi);\r\n\r\n        const ret: string = JSON.stringify(this.privContext);\r\n        return ret;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// speech.endDetected\r\nexport interface ISpeechDetected {\r\n    Offset: number;\r\n}\r\n\r\nexport class SpeechDetected implements ISpeechDetected {\r\n    private privSpeechStartDetected: ISpeechDetected;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechStartDetected = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechDetected {\r\n        return new SpeechDetected(json);\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechStartDetected.Offset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n} from \"../common/Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport {\r\n    AuthInfo,\r\n    IAuthentication\r\n} from \"./IAuthentication\";\r\n\r\n/**\r\n * @class\r\n */\r\nexport class CognitiveSubscriptionKeyAuthentication implements IAuthentication {\r\n    private privAuthInfo: AuthInfo;\r\n\r\n    /**\r\n     * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\r\n     * @constructor\r\n     * @param {string} subscriptionKey - The subscription key\r\n     */\r\n    constructor(subscriptionKey: string) {\r\n        if (!subscriptionKey) {\r\n            throw new ArgumentNullError(\"subscriptionKey\");\r\n        }\r\n\r\n        this.privAuthInfo = new AuthInfo(HeaderNames.AuthKey, subscriptionKey);\r\n    }\r\n\r\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\r\n    public fetch = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return Promise.resolve(this.privAuthInfo);\r\n    }\r\n\r\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\r\n    public fetchOnExpiry = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return Promise.resolve(this.privAuthInfo);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError } from \"../common/Exports\";\r\nimport { AuthInfo, IAuthentication } from \"./IAuthentication\";\r\n\r\nconst AuthHeader: string = \"Authorization\";\r\n\r\nexport class CognitiveTokenAuthentication implements IAuthentication {\r\n    private privFetchCallback: (authFetchEventId: string) => Promise<string>;\r\n    private privFetchOnExpiryCallback: (authFetchEventId: string) => Promise<string>;\r\n\r\n    constructor(fetchCallback: (authFetchEventId: string) => Promise<string>, fetchOnExpiryCallback: (authFetchEventId: string) => Promise<string>) {\r\n        if (!fetchCallback) {\r\n            throw new ArgumentNullError(\"fetchCallback\");\r\n        }\r\n\r\n        if (!fetchOnExpiryCallback) {\r\n            throw new ArgumentNullError(\"fetchOnExpiryCallback\");\r\n        }\r\n\r\n        this.privFetchCallback = fetchCallback;\r\n        this.privFetchOnExpiryCallback = fetchOnExpiryCallback;\r\n    }\r\n\r\n    public fetch = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return this.privFetchCallback(authFetchEventId).then((token: string) => new AuthInfo(AuthHeader, token));\r\n    }\r\n\r\n    public fetchOnExpiry = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return this.privFetchOnExpiryCallback(authFetchEventId).then((token: string) => new AuthInfo(AuthHeader, token));\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class ConnectionOpenResponse {\r\n    private privStatusCode: number;\r\n    private privReason: string;\r\n\r\n    constructor(statusCode: number, reason: string) {\r\n        this.privStatusCode = statusCode;\r\n        this.privReason = reason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { HeaderNames } from \"../common.speech/HeaderNames\";\r\nimport {\r\n    ArgumentNullError,\r\n    BackgroundEvent,\r\n    ConnectionClosedEvent,\r\n    ConnectionErrorEvent,\r\n    ConnectionEstablishedEvent,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    ConnectionMessageReceivedEvent,\r\n    ConnectionMessageSentEvent,\r\n    ConnectionOpenResponse,\r\n    ConnectionStartEvent,\r\n    ConnectionState,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IWebsocketMessageFormatter,\r\n    MessageType,\r\n    Queue,\r\n    RawWebsocketMessage,\r\n} from \"../common/Exports\";\r\nimport { ProxyInfo } from \"./ProxyInfo\";\r\n\r\n// Node.JS specific web socket / browser support.\r\nimport ws from \"ws\";\r\nimport { CertCheckAgent } from \"./CertChecks\";\r\n\r\ninterface ISendItem {\r\n    Message: ConnectionMessage;\r\n    RawWebsocketMessage: RawWebsocketMessage;\r\n    sendStatusDeferral: Deferred<void>;\r\n}\r\n\r\nexport class WebsocketMessageAdapter {\r\n    private privConnectionState: ConnectionState;\r\n    private privMessageFormatter: IWebsocketMessageFormatter;\r\n    private privWebsocketClient: WebSocket | ws;\r\n\r\n    private privSendMessageQueue: Queue<ISendItem>;\r\n    private privReceivingMessageQueue: Queue<ConnectionMessage>;\r\n    private privConnectionEstablishDeferral: Deferred<ConnectionOpenResponse>;\r\n    private privCertificateValidatedDeferral: Deferred<void>;\r\n    private privDisconnectDeferral: Deferred<void>;\r\n    private privConnectionEvents: EventSource<ConnectionEvent>;\r\n    private privConnectionId: string;\r\n    private privUri: string;\r\n    private proxyInfo: ProxyInfo;\r\n    private privHeaders: { [key: string]: string; };\r\n    private privLastErrorReceived: string;\r\n    private privEnableCompression: boolean;\r\n\r\n    public static forceNpmWebSocket: boolean = false;\r\n\r\n    public constructor(\r\n        uri: string,\r\n        connectionId: string,\r\n        messageFormatter: IWebsocketMessageFormatter,\r\n        proxyInfo: ProxyInfo,\r\n        headers: { [key: string]: string; },\r\n        enableCompression: boolean) {\r\n\r\n        if (!uri) {\r\n            throw new ArgumentNullError(\"uri\");\r\n        }\r\n\r\n        if (!messageFormatter) {\r\n            throw new ArgumentNullError(\"messageFormatter\");\r\n        }\r\n\r\n        this.proxyInfo = proxyInfo;\r\n        this.privConnectionEvents = new EventSource<ConnectionEvent>();\r\n        this.privConnectionId = connectionId;\r\n        this.privMessageFormatter = messageFormatter;\r\n        this.privConnectionState = ConnectionState.None;\r\n        this.privUri = uri;\r\n        this.privHeaders = headers;\r\n        this.privEnableCompression = enableCompression;\r\n\r\n        // Add the connection ID to the headers\r\n        this.privHeaders[HeaderNames.ConnectionId] = this.privConnectionId;\r\n\r\n        this.privLastErrorReceived = \"\";\r\n    }\r\n\r\n    public get state(): ConnectionState {\r\n        return this.privConnectionState;\r\n    }\r\n\r\n    public open = (): Promise<ConnectionOpenResponse> => {\r\n        if (this.privConnectionState === ConnectionState.Disconnected) {\r\n            return Promise.reject<ConnectionOpenResponse>(`Cannot open a connection that is in ${this.privConnectionState} state`);\r\n        }\r\n\r\n        if (this.privConnectionEstablishDeferral) {\r\n            return this.privConnectionEstablishDeferral.promise;\r\n        }\r\n\r\n        this.privConnectionEstablishDeferral = new Deferred<ConnectionOpenResponse>();\r\n        this.privCertificateValidatedDeferral = new Deferred<void>();\r\n\r\n        this.privConnectionState = ConnectionState.Connecting;\r\n\r\n        try {\r\n\r\n            if (typeof WebSocket !== \"undefined\" && !WebsocketMessageAdapter.forceNpmWebSocket) {\r\n                // Browser handles cert checks.\r\n                this.privCertificateValidatedDeferral.resolve();\r\n\r\n                this.privWebsocketClient = new WebSocket(this.privUri);\r\n            } else {\r\n                const options: ws.ClientOptions = { headers: this.privHeaders, perMessageDeflate: this.privEnableCompression };\r\n                // The ocsp library will handle validation for us and fail the connection if needed.\r\n                this.privCertificateValidatedDeferral.resolve();\r\n                const checkAgent: CertCheckAgent = new CertCheckAgent(this.proxyInfo);\r\n\r\n                options.agent = checkAgent.GetAgent();\r\n                this.privWebsocketClient = new ws(this.privUri, options);\r\n            }\r\n\r\n            this.privWebsocketClient.binaryType = \"arraybuffer\";\r\n            this.privReceivingMessageQueue = new Queue<ConnectionMessage>();\r\n            this.privDisconnectDeferral = new Deferred<void>();\r\n            this.privSendMessageQueue = new Queue<ISendItem>();\r\n            this.processSendQueue().catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n        } catch (error) {\r\n            this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(500, error));\r\n            return this.privConnectionEstablishDeferral.promise;\r\n        }\r\n\r\n        this.onEvent(new ConnectionStartEvent(this.privConnectionId, this.privUri));\r\n\r\n        this.privWebsocketClient.onopen = (e: { target: WebSocket | ws }) => {\r\n            this.privCertificateValidatedDeferral.promise.then((): void => {\r\n                this.privConnectionState = ConnectionState.Connected;\r\n                this.onEvent(new ConnectionEstablishedEvent(this.privConnectionId));\r\n                this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(200, \"\"));\r\n            }, (error: string): void => {\r\n                this.privConnectionEstablishDeferral.reject(error);\r\n            });\r\n        };\r\n\r\n        this.privWebsocketClient.onerror = (e: { error: any; message: string; type: string; target: WebSocket | ws }) => {\r\n            this.onEvent(new ConnectionErrorEvent(this.privConnectionId, e.message, e.type));\r\n            this.privLastErrorReceived = e.message;\r\n        };\r\n\r\n        this.privWebsocketClient.onclose = (e: { wasClean: boolean; code: number; reason: string; target: WebSocket | ws }) => {\r\n            if (this.privConnectionState === ConnectionState.Connecting) {\r\n                this.privConnectionState = ConnectionState.Disconnected;\r\n                // this.onEvent(new ConnectionEstablishErrorEvent(this.connectionId, e.code, e.reason));\r\n                this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(e.code, e.reason + \" \" + this.privLastErrorReceived));\r\n            } else {\r\n                this.privConnectionState = ConnectionState.Disconnected;\r\n                this.onEvent(new ConnectionClosedEvent(this.privConnectionId, e.code, e.reason));\r\n            }\r\n\r\n            this.onClose(e.code, e.reason).catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n        };\r\n\r\n        this.privWebsocketClient.onmessage = (e: { data: ws.Data; type: string; target: WebSocket | ws }) => {\r\n            const networkReceivedTime = new Date().toISOString();\r\n            if (this.privConnectionState === ConnectionState.Connected) {\r\n                const deferred = new Deferred<ConnectionMessage>();\r\n                // let id = ++this.idCounter;\r\n                this.privReceivingMessageQueue.enqueueFromPromise(deferred.promise);\r\n                if (e.data instanceof ArrayBuffer) {\r\n                    const rawMessage = new RawWebsocketMessage(MessageType.Binary, e.data);\r\n                    this.privMessageFormatter\r\n                        .toConnectionMessage(rawMessage)\r\n                        .then((connectionMessage: ConnectionMessage) => {\r\n                            this.onEvent(new ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\r\n                            deferred.resolve(connectionMessage);\r\n                        }, (error: string) => {\r\n                            // TODO: Events for these ?\r\n                            deferred.reject(`Invalid binary message format. Error: ${error}`);\r\n                        });\r\n                } else {\r\n                    const rawMessage = new RawWebsocketMessage(MessageType.Text, e.data);\r\n                    this.privMessageFormatter\r\n                        .toConnectionMessage(rawMessage)\r\n                        .then((connectionMessage: ConnectionMessage) => {\r\n                            this.onEvent(new ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\r\n                            deferred.resolve(connectionMessage);\r\n                        }, (error: string) => {\r\n                            // TODO: Events for these ?\r\n                            deferred.reject(`Invalid text message format. Error: ${error}`);\r\n                        });\r\n                }\r\n            }\r\n        };\r\n\r\n        return this.privConnectionEstablishDeferral.promise;\r\n    }\r\n\r\n    public send = (message: ConnectionMessage): Promise<void> => {\r\n        if (this.privConnectionState !== ConnectionState.Connected) {\r\n            return Promise.reject(`Cannot send on connection that is in ${ConnectionState[this.privConnectionState]} state`);\r\n        }\r\n\r\n        const messageSendStatusDeferral = new Deferred<void>();\r\n        const messageSendDeferral = new Deferred<ISendItem>();\r\n\r\n        this.privSendMessageQueue.enqueueFromPromise(messageSendDeferral.promise);\r\n\r\n        this.privMessageFormatter\r\n            .fromConnectionMessage(message)\r\n            .then((rawMessage: RawWebsocketMessage) => {\r\n                messageSendDeferral.resolve({\r\n                    Message: message,\r\n                    RawWebsocketMessage: rawMessage,\r\n                    sendStatusDeferral: messageSendStatusDeferral,\r\n                });\r\n            }, (error: string) => {\r\n                messageSendDeferral.reject(`Error formatting the message. ${error}`);\r\n            });\r\n\r\n        return messageSendStatusDeferral.promise;\r\n    }\r\n\r\n    public read = (): Promise<ConnectionMessage> => {\r\n        if (this.privConnectionState !== ConnectionState.Connected) {\r\n            return Promise.reject<ConnectionMessage>(`Cannot read on connection that is in ${this.privConnectionState} state`);\r\n        }\r\n\r\n        return this.privReceivingMessageQueue.dequeue();\r\n    }\r\n\r\n    public close = (reason?: string): Promise<void> => {\r\n        if (this.privWebsocketClient) {\r\n            if (this.privConnectionState !== ConnectionState.Disconnected) {\r\n                this.privWebsocketClient.close(1000, reason ? reason : \"Normal closure by client\");\r\n            }\r\n        } else {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return this.privDisconnectDeferral.promise;\r\n    }\r\n\r\n    public get events(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionEvents;\r\n    }\r\n\r\n    private sendRawMessage = (sendItem: ISendItem): Promise<void> => {\r\n        try {\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!sendItem) {\r\n                return Promise.resolve();\r\n            }\r\n\r\n            this.onEvent(new ConnectionMessageSentEvent(this.privConnectionId, new Date().toISOString(), sendItem.Message));\r\n\r\n            // add a check for the ws readystate in order to stop the red console error 'WebSocket is already in CLOSING or CLOSED state' appearing\r\n            if (this.isWebsocketOpen) {\r\n                this.privWebsocketClient.send(sendItem.RawWebsocketMessage.payload);\r\n            } else {\r\n                return Promise.reject(\"websocket send error: Websocket not ready \" + this.privConnectionId + \" \" + sendItem.Message.id + \" \" + new Error().stack);\r\n            }\r\n            return Promise.resolve();\r\n\r\n        } catch (e) {\r\n            return Promise.reject(`websocket send error: ${e}`);\r\n        }\r\n    }\r\n\r\n    private async onClose(code: number, reason: string): Promise<void> {\r\n        const closeReason = `Connection closed. ${code}: ${reason}`;\r\n        this.privConnectionState = ConnectionState.Disconnected;\r\n        this.privDisconnectDeferral.resolve();\r\n        await this.privReceivingMessageQueue.drainAndDispose((pendingReceiveItem: ConnectionMessage) => {\r\n            // TODO: Events for these ?\r\n            // Logger.instance.onEvent(new LoggingEvent(LogType.Warning, null, `Failed to process received message. Reason: ${closeReason}, Message: ${JSON.stringify(pendingReceiveItem)}`));\r\n        }, closeReason);\r\n\r\n        await this.privSendMessageQueue.drainAndDispose((pendingSendItem: ISendItem) => {\r\n            pendingSendItem.sendStatusDeferral.reject(closeReason);\r\n        }, closeReason);\r\n    }\r\n\r\n    private async processSendQueue(): Promise<void> {\r\n        while (true) {\r\n            const itemToSend: Promise<ISendItem> = this.privSendMessageQueue.dequeue();\r\n            const sendItem: ISendItem = await itemToSend;\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!sendItem) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                await this.sendRawMessage(sendItem);\r\n                sendItem.sendStatusDeferral.resolve();\r\n            } catch (sendError) {\r\n                sendItem.sendStatusDeferral.reject(sendError);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onEvent = (event: ConnectionEvent): void => {\r\n        this.privConnectionEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private get isWebsocketOpen(): boolean {\r\n        return this.privWebsocketClient && this.privWebsocketClient.readyState === this.privWebsocketClient.OPEN;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    ConnectionOpenResponse,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    EventSource,\r\n    IConnection,\r\n    IStringDictionary,\r\n    IWebsocketMessageFormatter,\r\n} from \"../common/Exports\";\r\nimport { ProxyInfo } from \"./ProxyInfo\";\r\nimport { WebsocketMessageAdapter } from \"./WebsocketMessageAdapter\";\r\n\r\nexport class WebsocketConnection implements IConnection {\r\n\r\n    private privUri: string;\r\n    private privMessageFormatter: IWebsocketMessageFormatter;\r\n    private privConnectionMessageAdapter: WebsocketMessageAdapter;\r\n    private privId: string;\r\n    private privIsDisposed: boolean = false;\r\n\r\n    public constructor(\r\n        uri: string,\r\n        queryParameters: IStringDictionary<string>,\r\n        headers: IStringDictionary<string>,\r\n        messageFormatter: IWebsocketMessageFormatter,\r\n        proxyInfo: ProxyInfo,\r\n        enableCompression: boolean = false,\r\n        connectionId?: string) {\r\n\r\n        if (!uri) {\r\n            throw new ArgumentNullError(\"uri\");\r\n        }\r\n\r\n        if (!messageFormatter) {\r\n            throw new ArgumentNullError(\"messageFormatter\");\r\n        }\r\n\r\n        this.privMessageFormatter = messageFormatter;\r\n\r\n        let queryParams = \"\";\r\n        let i = 0;\r\n\r\n        if (queryParameters) {\r\n            for (const paramName in queryParameters) {\r\n                if (paramName) {\r\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\r\n                    const val = encodeURIComponent(queryParameters[paramName]);\r\n                    queryParams += `${paramName}=${val}`;\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (headers) {\r\n            for (const headerName in headers) {\r\n                if (headerName) {\r\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\r\n                    const val = encodeURIComponent(headers[headerName]);\r\n                    queryParams += `${headerName}=${val}`;\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.privUri = uri + queryParams;\r\n        this.privId = connectionId ? connectionId : createNoDashGuid();\r\n\r\n        this.privConnectionMessageAdapter = new WebsocketMessageAdapter(\r\n            this.privUri,\r\n            this.id,\r\n            this.privMessageFormatter,\r\n            proxyInfo,\r\n            headers,\r\n            enableCompression);\r\n    }\r\n\r\n    public async dispose(): Promise<void> {\r\n        this.privIsDisposed = true;\r\n\r\n        if (this.privConnectionMessageAdapter) {\r\n            await this.privConnectionMessageAdapter.close();\r\n        }\r\n    }\r\n\r\n    public isDisposed = (): boolean => {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public state = (): ConnectionState => {\r\n        return this.privConnectionMessageAdapter.state;\r\n    }\r\n\r\n    public open = (): Promise<ConnectionOpenResponse> => {\r\n        return this.privConnectionMessageAdapter.open();\r\n    }\r\n\r\n    public send = (message: ConnectionMessage): Promise<void> => {\r\n        return this.privConnectionMessageAdapter.send(message);\r\n    }\r\n\r\n    public read = (): Promise<ConnectionMessage> => {\r\n        return this.privConnectionMessageAdapter.read();\r\n    }\r\n\r\n    public get events(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionMessageAdapter.events;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognizerConfig } from \"../common.speech/Exports\";\r\nimport { PropertyCollection, PropertyId } from \"../sdk/Exports\";\r\n\r\nexport class ProxyInfo {\r\n    private privProxyHostName: string;\r\n    private privProxyPort: number;\r\n    private privProxyUserName: string;\r\n    private privProxyPassword: string;\r\n\r\n    private constructor(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string) {\r\n        this.privProxyHostName = proxyHostName;\r\n        this.privProxyPort = proxyPort;\r\n        this.privProxyUserName = proxyUserName;\r\n        this.privProxyPassword = proxyPassword;\r\n    }\r\n\r\n    public static fromParameters(parameters: PropertyCollection): ProxyInfo {\r\n        return new ProxyInfo(parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyHostName),\r\n            parseInt(parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyPort), 10),\r\n            parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyUserName),\r\n            parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyPassword));\r\n    }\r\n\r\n    public static fromRecognizerConfig(config: RecognizerConfig): ProxyInfo {\r\n        return this.fromParameters(config.parameters);\r\n    }\r\n\r\n    public get HostName(): string {\r\n        return this.privProxyHostName;\r\n    }\r\n\r\n    public get Port(): number {\r\n        return this.privProxyPort;\r\n    }\r\n\r\n    public get UserName(): string {\r\n        return this.privProxyUserName;\r\n    }\r\n\r\n    public get Password(): string {\r\n        return this.privProxyPassword;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class QueryParameterNames {\r\n    public static BotId: string = \"botid\";\r\n    public static CustomSpeechDeploymentId: string = \"cid\";\r\n    public static CustomVoiceDeploymentId: string = \"deploymentId\";\r\n    public static EnableAudioLogging: string = \"storeAudio\";\r\n    public static EnableLanguageId: string = \"lidEnabled\";\r\n    public static EnableWordLevelTimestamps: string = \"wordLevelTimestamps\";\r\n    public static EndSilenceTimeoutMs: string = \"endSilenceTimeoutMs\";\r\n    public static Format: string = \"format\";\r\n    public static InitialSilenceTimeoutMs: string = \"initialSilenceTimeoutMs\";\r\n    public static Language: string = \"language\";\r\n    public static Profanity: string = \"profanity\";\r\n    public static RequestBotStatusMessages: string = \"enableBotMessageStatus\";\r\n    public static StableIntermediateThreshold: string = \"stableIntermediateThreshold\";\r\n    public static StableTranslation: string = \"stableTranslation\";\r\n    public static TestHooks: string = \"testhooks\";\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ServicePropertiesPropertyName,\r\n} from \"../common.speech/Exports\";\r\nimport { IConnection, IStringDictionary } from \"../common/Exports\";\r\nimport { OutputFormat, PropertyId } from \"../sdk/Exports\";\r\nimport { AuthInfo, IConnectionFactory, RecognitionMode, RecognizerConfig, WebsocketMessageFormatter } from \"./Exports\";\r\nimport { QueryParameterNames } from \"./QueryParameterNames\";\r\n\r\nexport abstract class ConnectionFactoryBase implements IConnectionFactory {\r\n    public abstract create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection;\r\n\r\n    protected setCommonUrlParams(\r\n        config: RecognizerConfig,\r\n        queryParams: IStringDictionary<string>,\r\n        endpoint: string): void {\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceConnection_EnableAudioLogging,\r\n            QueryParameterNames.EnableAudioLogging,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps,\r\n            QueryParameterNames.EnableWordLevelTimestamps,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceResponse_ProfanityOption,\r\n            QueryParameterNames.Profanity,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceConnection_InitialSilenceTimeoutMs,\r\n            QueryParameterNames.InitialSilenceTimeoutMs,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceConnection_EndSilenceTimeoutMs,\r\n            QueryParameterNames.EndSilenceTimeoutMs,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceResponse_StablePartialResultThreshold,\r\n            QueryParameterNames.StableIntermediateThreshold,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        const serviceProperties: IStringDictionary<string> = JSON.parse(config.parameters.getProperty(ServicePropertiesPropertyName, \"{}\"));\r\n\r\n        Object.keys(serviceProperties).forEach((value: string, num: number, array: string[]) => {\r\n            queryParams[value] = serviceProperties[value];\r\n        });\r\n    }\r\n\r\n    protected setUrlParameter(\r\n        propId: PropertyId,\r\n        parameterName: string,\r\n        config: RecognizerConfig,\r\n        queryParams: IStringDictionary<string>,\r\n        endpoint: string): void {\r\n\r\n        const value: string = config.parameters.getProperty(propId, undefined);\r\n\r\n        if (value && (!endpoint || endpoint.search(parameterName) === -1)) {\r\n            queryParams[parameterName] = value.toLocaleLowerCase();\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    ForceDictationPropertyName,\r\n    OutputFormatPropertyName,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports\";\r\nimport {\r\n    OutputFormat,\r\n    PropertyId\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport {\r\n    QueryParameterNames\r\n} from \"./QueryParameterNames\";\r\n\r\nexport class SpeechConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    private readonly interactiveRelativeUri: string = \"/speech/recognition/interactive/cognitiveservices/v1\";\r\n    private readonly conversationRelativeUri: string = \"/speech/recognition/conversation/cognitiveservices/v1\";\r\n    private readonly dictationRelativeUri: string = \"/speech/recognition/dictation/cognitiveservices/v1\";\r\n\r\n    public create = (\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection => {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, undefined);\r\n        const hostSuffix: string =  (region && region.toLowerCase().startsWith(\"china\")) ? \".azure.cn\" : \".microsoft.com\";\r\n        const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".stt.speech\" + hostSuffix);\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n\r\n        const endpointId: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\r\n        const language: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\r\n\r\n        if (endpointId) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.CustomSpeechDeploymentId) === -1) {\r\n                queryParams[QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\r\n            }\r\n        } else if (language) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.Language) === -1) {\r\n                queryParams[QueryParameterNames.Language] = language;\r\n            }\r\n        }\r\n\r\n        if (!endpoint || endpoint.search(QueryParameterNames.Format) === -1) {\r\n            queryParams[QueryParameterNames.Format] = config.parameters.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]).toLowerCase();\r\n        }\r\n\r\n        if (config.autoDetectSourceLanguages !== undefined) {\r\n            queryParams[QueryParameterNames.EnableLanguageId] = \"true\";\r\n        }\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n\r\n        if (!endpoint) {\r\n            switch (config.recognitionMode) {\r\n                case RecognitionMode.Conversation:\r\n                    if (config.parameters.getProperty(ForceDictationPropertyName, \"false\") === \"true\") {\r\n                        endpoint = host + this.dictationRelativeUri;\r\n                    } else {\r\n                        endpoint = host + this.conversationRelativeUri;\r\n                    }\r\n                    break;\r\n                case RecognitionMode.Dictation:\r\n                    endpoint = host + this.dictationRelativeUri;\r\n                    break;\r\n                default:\r\n                    endpoint = host + this.interactiveRelativeUri; // default is interactive\r\n                    break;\r\n            }\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, RecognitionResult, ResultReason } from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech recognition.\r\n * @class SpeechRecognitionResult\r\n */\r\nexport class SpeechRecognitionResult extends RecognitionResult {\r\n    private readonly privSpeakerId: string;\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @public\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} language - Primary Language detected, if provided.\r\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param {string} speakerId - speaker id for conversation transcription, if provided.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(resultId?: string, reason?: ResultReason, text?: string,\r\n                       duration?: number, offset?: number, language?: string,\r\n                       languageDetectionConfidence?: string, speakerId?: string, errorDetails?: string,\r\n                       json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\r\n        this.privSpeakerId = speakerId;\r\n    }\r\n\r\n    /**\r\n     * speaker id from conversation transcription/id scenarios\r\n     * @member SpeechRecognitionResult.prototype.speakerId\r\n     * @function\r\n     * @public\r\n     * @returns {string} id of speaker in given result\r\n     */\r\n    public get speakerId(): string {\r\n        return this.privSpeakerId;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason } from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech recognition.\r\n * @class RecognitionResult\r\n */\r\nexport class RecognitionResult {\r\n    private privResultId: string;\r\n    private privReason: ResultReason;\r\n    private privText: string;\r\n    private privDuration: number;\r\n    private privOffset: number;\r\n    private privLanguage: string;\r\n    private privLanguageDetectionConfidence: string;\r\n    private privErrorDetails: string;\r\n    private privJson: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} language - Primary Language detected, if provided.\r\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    constructor(resultId?: string, reason?: ResultReason, text?: string, duration?: number,\r\n                offset?: number, language?: string, languageDetectionConfidence?: string, errorDetails?: string, json?: string, properties?: PropertyCollection) {\r\n        this.privResultId = resultId;\r\n        this.privReason = reason;\r\n        this.privText = text;\r\n        this.privDuration = duration;\r\n        this.privOffset = offset;\r\n        this.privLanguage = language;\r\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privJson = json;\r\n        this.privProperties = properties;\r\n    }\r\n\r\n    /**\r\n     * Specifies the result identifier.\r\n     * @member RecognitionResult.prototype.resultId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Specifies the result identifier.\r\n     */\r\n    public get resultId(): string {\r\n        return this.privResultId;\r\n    }\r\n\r\n    /**\r\n     * Specifies status of the result.\r\n     * @member RecognitionResult.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {ResultReason} Specifies status of the result.\r\n     */\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * Presents the recognized text in the result.\r\n     * @member RecognitionResult.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} Presents the recognized text in the result.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n\r\n    /**\r\n     * Duration of recognized speech in 100 nano second incements.\r\n     * @member RecognitionResult.prototype.duration\r\n     * @function\r\n     * @public\r\n     * @returns {number} Duration of recognized speech in 100 nano second incements.\r\n     */\r\n    public get duration(): number {\r\n        return this.privDuration;\r\n    }\r\n\r\n    /**\r\n     * Offset of recognized speech in 100 nano second incements.\r\n     * @member RecognitionResult.prototype.offset\r\n     * @function\r\n     * @public\r\n     * @returns {number} Offset of recognized speech in 100 nano second incements.\r\n     */\r\n    public get offset(): number {\r\n        return this.privOffset;\r\n    }\r\n\r\n    /**\r\n     * Primary Language detected.\r\n     * @member RecognitionResult.prototype.language\r\n     * @function\r\n     * @public\r\n     * @returns {string} language detected.\r\n     */\r\n    public get language(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    /**\r\n     * Primary Language detection confidence (Unknown, Low, Medium, High).\r\n     * @member RecognitionResult.prototype.languageDetectionConfidence\r\n     * @function\r\n     * @public\r\n     * @returns {string} detection confidence strength.\r\n     */\r\n    public get languageDetectionConfidence(): string {\r\n        return this.privLanguageDetectionConfidence;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member RecognitionResult.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} a brief description of an error.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     * A string containing Json serialized recognition result as it was received from the service.\r\n     * @member RecognitionResult.prototype.json\r\n     * @function\r\n     * @private\r\n     * @returns {string} Json serialized representation of the result.\r\n     */\r\n    public get json(): string {\r\n        return this.privJson;\r\n    }\r\n\r\n    /**\r\n     *  The set of properties exposed in the result.\r\n     * @member RecognitionResult.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The set of properties exposed in the result.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionEventArgs, SpeechRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Defines contents of speech recognizing/recognized event.\r\n * @class SpeechRecognitionEventArgs\r\n */\r\nexport class SpeechRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: SpeechRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: SpeechRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member SpeechRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): SpeechRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n\r\n/**\r\n * Defines contents of conversation transcribed/transcribing event.\r\n * @class ConversationTranscriptionEventArgs\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class ConversationTranscriptionEventArgs extends SpeechRecognitionEventArgs {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationEventArgsBase,\r\n} from \"./CancellationEventArgsBase\";\r\n\r\nexport class SpeechRecognitionCanceledEventArgs extends CancellationEventArgsBase {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationEventArgs,\r\n    CancellationReason,\r\n    RecognitionEventArgs\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines content of a CancellationEvent.\r\n * @class CancellationEventArgsBase\r\n */\r\nexport class CancellationEventArgsBase extends RecognitionEventArgs implements CancellationEventArgs {\r\n    private privReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {CancellationReason} reason - The cancellation reason.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(reason: CancellationReason, errorDetails: string,\r\n                       errorCode: CancellationErrorCode, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member CancellationEventArgsBase.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful operation.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get errorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful operation, provides details of the occurred error.\r\n     * @member CancellationEventArgsBase.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IAudioSource } from \"../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n    SpeechRecognizer,\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    DetailedSpeechPhrase,\r\n    EnumTranslation,\r\n    OutputFormatPropertyName,\r\n    RecognitionStatus,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechHypothesis,\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class SpeechServiceRecognizer extends ServiceRecognizerBase {\r\n\r\n    private privSpeechRecognizer: SpeechRecognizer;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        speechRecognizer: SpeechRecognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer);\r\n        this.privSpeechRecognizer = speechRecognizer;\r\n        if (recognizerConfig.autoDetectSourceLanguages !== undefined) {\r\n            const sourceLanguages: string[] = recognizerConfig.autoDetectSourceLanguages.split(\",\");\r\n            this.privSpeechContext.setSection(\"languageId\", {\r\n                languages: sourceLanguages,\r\n                onSuccess: { action: \"Recognize\" },\r\n                onUnknown: { action: \"None\" }\r\n            });\r\n            this.privSpeechContext.setSection(\"phraseOutput\", {\r\n                interimResults: {\r\n                    resultType: \"Auto\"\r\n                },\r\n                phraseResults: {\r\n                    resultType: \"Always\"\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let result: SpeechRecognitionResult;\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        let processed: boolean = false;\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.hypothesis\":\r\n            case \"speech.fragment\":\r\n                const hypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\r\n                const offset: number = hypothesis.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n\r\n                result = new SpeechRecognitionResult(\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingSpeech,\r\n                    hypothesis.Text,\r\n                    hypothesis.Duration,\r\n                    offset,\r\n                    hypothesis.Language,\r\n                    hypothesis.LanguageDetectionConfidence,\r\n                    undefined, // Speaker Id\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(offset);\r\n\r\n                const ev = new SpeechRecognitionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privSpeechRecognizer.recognizing) {\r\n                    try {\r\n                        this.privSpeechRecognizer.recognizing(this.privSpeechRecognizer, ev);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.phrase\":\r\n                const simple: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n                const resultReason: ResultReason = EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\r\n\r\n                this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + simple.Offset + simple.Duration);\r\n\r\n                if (ResultReason.Canceled === resultReason) {\r\n                    const cancelReason: CancellationReason = EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\r\n\r\n                    await this.cancelRecognitionLocal(\r\n                        cancelReason,\r\n                        EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus),\r\n                        undefined);\r\n\r\n                } else {\r\n                    if (!(this.privRequestSession.isSpeechEnded && resultReason === ResultReason.NoMatch && simple.RecognitionStatus !== RecognitionStatus.InitialSilenceTimeout)) {\r\n                        if (this.privRecognizerConfig.parameters.getProperty(OutputFormatPropertyName) === OutputFormat[OutputFormat.Simple]) {\r\n                            result = new SpeechRecognitionResult(\r\n                                this.privRequestSession.requestId,\r\n                                resultReason,\r\n                                simple.DisplayText,\r\n                                simple.Duration,\r\n                                simple.Offset + this.privRequestSession.currentTurnAudioOffset,\r\n                                simple.Language,\r\n                                simple.LanguageDetectionConfidence,\r\n                                undefined, // Speaker Id\r\n                                undefined,\r\n                                connectionMessage.textBody,\r\n                                resultProps);\r\n                        } else {\r\n                            const detailed: DetailedSpeechPhrase = DetailedSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n\r\n                            result = new SpeechRecognitionResult(\r\n                                this.privRequestSession.requestId,\r\n                                resultReason,\r\n                                detailed.RecognitionStatus === RecognitionStatus.Success ? detailed.NBest[0].Display : undefined,\r\n                                detailed.Duration,\r\n                                detailed.Offset + this.privRequestSession.currentTurnAudioOffset,\r\n                                detailed.Language,\r\n                                detailed.LanguageDetectionConfidence,\r\n                                undefined, // Speaker Id\r\n                                undefined,\r\n                                connectionMessage.textBody,\r\n                                resultProps);\r\n                        }\r\n\r\n                        const event: SpeechRecognitionEventArgs = new SpeechRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privSpeechRecognizer.recognized) {\r\n                            try {\r\n                                this.privSpeechRecognizer.recognized(this.privSpeechRecognizer, event);\r\n                                /* tslint:disable:no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (!!this.privSuccessCallback) {\r\n                        try {\r\n                            this.privSuccessCallback(result);\r\n                        } catch (e) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(e);\r\n                            }\r\n                        }\r\n                        // Only invoke the call back once.\r\n                        // and if it's successful don't invoke the\r\n                        // error after that.\r\n                        this.privSuccessCallback = undefined;\r\n                        this.privErrorCallback = undefined;\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privSpeechRecognizer.canceled) {\r\n            const cancelEvent: SpeechRecognitionCanceledEventArgs = new SpeechRecognitionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                sessionId);\r\n            try {\r\n                this.privSpeechRecognizer.canceled(this.privSpeechRecognizer, cancelEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: SpeechRecognitionResult = new SpeechRecognitionResult(\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Duration\r\n                undefined, // Offset\r\n                undefined, // Language\r\n                undefined, // Language Detection Confidence\r\n                undefined, // Speaker Id\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                this.privSuccessCallback = undefined;\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n}\r\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AudioStreamFormatImpl } from \"../../src/sdk/Audio/AudioStreamFormat\";\r\nimport {\r\n    IAudioStreamNode,\r\n    IStreamChunk,\r\n} from \"../common/Exports\";\r\n\r\nexport class ReplayableAudioNode implements IAudioStreamNode {\r\n    private privAudioNode: IAudioStreamNode;\r\n    private privBytesPerSecond: number;\r\n    private privBuffers: BufferEntry[] = [];\r\n    private privReplayOffset: number = 0;\r\n    private privLastShrinkOffset: number = 0;\r\n    private privBufferStartOffset: number = 0;\r\n    private privBufferSerial: number = 0;\r\n    private privBufferedBytes: number = 0;\r\n    private privReplay: boolean = false;\r\n    private privLastChunkAcquiredTime: number = 0;\r\n\r\n    public constructor(audioSource: IAudioStreamNode, bytesPerSecond: number) {\r\n        this.privAudioNode = audioSource;\r\n        this.privBytesPerSecond = bytesPerSecond;\r\n    }\r\n\r\n    public id = (): string => {\r\n        return this.privAudioNode.id();\r\n    }\r\n\r\n    // Reads and returns the next chunk of audio buffer.\r\n    // If replay of existing buffers are needed, read() will first seek and replay\r\n    // existing content, and upoin completion it will read new content from the underlying\r\n    // audio node, saving that content into the replayable buffers.\r\n    public read(): Promise<IStreamChunk<ArrayBuffer>> {\r\n        // if there is a replay request to honor.\r\n        if (!!this.privReplay && this.privBuffers.length !== 0) {\r\n            // Find the start point in the buffers.\r\n            // Offsets are in 100ns increments.\r\n            // So how many bytes do we need to seek to get the right offset?\r\n            const offsetToSeek: number = this.privReplayOffset - this.privBufferStartOffset;\r\n\r\n            let bytesToSeek: number = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\r\n            if (0 !== (bytesToSeek % 2)) {\r\n                bytesToSeek++;\r\n            }\r\n\r\n            let i: number = 0;\r\n\r\n            while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\r\n                bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\r\n            }\r\n\r\n            if (i < this.privBuffers.length) {\r\n                const retVal: ArrayBuffer = this.privBuffers[i].chunk.buffer.slice(bytesToSeek);\r\n\r\n                this.privReplayOffset += (retVal.byteLength / this.privBytesPerSecond) * 1e+7;\r\n\r\n                // If we've reached the end of the buffers, stop replaying.\r\n                if (i === this.privBuffers.length - 1) {\r\n                    this.privReplay = false;\r\n                }\r\n\r\n                return Promise.resolve<IStreamChunk<ArrayBuffer>>({\r\n                    buffer: retVal,\r\n                    isEnd: false,\r\n                    timeReceived: this.privBuffers[i].chunk.timeReceived,\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.privAudioNode.read()\r\n            .then((result: IStreamChunk<ArrayBuffer>) => {\r\n                if (result && result.buffer) {\r\n                    this.privBuffers.push(new BufferEntry(result, this.privBufferSerial++, this.privBufferedBytes));\r\n                    this.privBufferedBytes += result.buffer.byteLength;\r\n                }\r\n                return result;\r\n            });\r\n    }\r\n\r\n    public detach(): Promise<void> {\r\n        this.privBuffers = undefined;\r\n        return this.privAudioNode.detach();\r\n    }\r\n\r\n    public replay(): void {\r\n        if (this.privBuffers && 0 !== this.privBuffers.length) {\r\n            this.privReplay = true;\r\n            this.privReplayOffset = this.privLastShrinkOffset;\r\n        }\r\n    }\r\n\r\n    // Shrinks the existing audio buffers to start at the new offset, or at the\r\n    // beginning of the buffer closest to the requested offset.\r\n    // A replay request will start from the last shrink point.\r\n    public shrinkBuffers(offset: number): void {\r\n        if (this.privBuffers === undefined || this.privBuffers.length === 0) {\r\n            return;\r\n        }\r\n\r\n        this.privLastShrinkOffset = offset;\r\n\r\n        // Find the start point in the buffers.\r\n        // Offsets are in 100ns increments.\r\n        // So how many bytes do we need to seek to get the right offset?\r\n        const offsetToSeek: number = offset - this.privBufferStartOffset;\r\n\r\n        let bytesToSeek: number = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\r\n\r\n        let i: number = 0;\r\n\r\n        while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\r\n            bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\r\n        }\r\n        this.privBufferStartOffset = Math.round(offset - ((bytesToSeek / this.privBytesPerSecond) * 1e+7));\r\n        this.privBuffers = this.privBuffers.slice(i);\r\n    }\r\n\r\n    // Finds the time a buffer of audio was first seen by offset.\r\n    public findTimeAtOffset(offset: number): number {\r\n        if (offset < this.privBufferStartOffset || this.privBuffers === undefined) {\r\n            return 0;\r\n        }\r\n\r\n        for (const value of this.privBuffers) {\r\n            const startOffset: number = (value.byteOffset / this.privBytesPerSecond) * 1e7;\r\n            const endOffset: number = startOffset + ((value.chunk.buffer.byteLength / this.privBytesPerSecond) * 1e7);\r\n\r\n            if (offset >= startOffset && offset <= endOffset) {\r\n                return value.chunk.timeReceived;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n}\r\n\r\n// Primary use of this class is to help debugging problems with the replay\r\n// code. If the memory cost of alloc / dealloc gets too much, drop it and just use\r\n// the ArrayBuffer directly.\r\n// tslint:disable-next-line:max-classes-per-file\r\nclass BufferEntry {\r\n    public chunk: IStreamChunk<ArrayBuffer>;\r\n    public serial: number;\r\n    public byteOffset: number;\r\n\r\n    public constructor(chunk: IStreamChunk<ArrayBuffer>, serial: number, byteOffset: number) {\r\n        this.chunk = chunk;\r\n        this.serial = serial;\r\n        this.byteOffset = byteOffset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\ntype TWorkerMessage = ICallNotification | IClearResponse | IErrorNotification | IErrorResponse;\r\n\r\ninterface IClearResponse {\r\n    error: null;\r\n    id: number;\r\n}\r\n\r\ninterface IErrorNotification {\r\n    error: {\r\n        message: string;\r\n    };\r\n    id: null;\r\n    result: null;\r\n}\r\n\r\ninterface IErrorResponse {\r\n    error: {\r\n        message: string;\r\n    };\r\n    id: number;\r\n    result: null;\r\n}\r\n\r\ninterface ICallNotification {\r\n    id: null;\r\n    method: \"call\";\r\n    params: {\r\n        timerId: number;\r\n    };\r\n}\r\n\r\ninterface ISetNotification {\r\n    id: null;\r\n    method: \"set\";\r\n    params: {\r\n        delay: number;\r\n        now: number;\r\n        timerId: number;\r\n    };\r\n}\r\n\r\ninterface IClearRequest {\r\n    id: number;\r\n    method: \"clear\";\r\n    params: {\r\n        timerId: number;\r\n    };\r\n}\r\n\r\ninterface IWorkerEvent extends Event {\r\n    data: TWorkerMessage;\r\n}\r\n\r\ninterface IWorkerTimers {\r\n    clearTimeout: (timerId: number) => void;\r\n    setTimeout: (func: () => any, delay: number) => number;\r\n}\r\n\r\ndeclare type Func = () => any;\r\n\r\nexport class Timeout {\r\n\r\n    private static workerTimers: null | IWorkerTimers = null;\r\n\r\n    public static clearTimeout: IWorkerTimers[\"clearTimeout\"] = (timerId) => Timeout.timers().clearTimeout(timerId);\r\n\r\n    public static setTimeout: IWorkerTimers[\"setTimeout\"] = (func, delay) => Timeout.timers().setTimeout(func, delay);\r\n\r\n    public static load = (url: string) => {\r\n        // Prefilling the Maps with a function indexed by zero is necessary to be compliant with the specification.\r\n        const scheduledTimeoutFunctions: Map<number, number | Func> = new Map([[0, () => { }]]); // tslint:disable-line no-empty\r\n        const unhandledRequests: Map<number, number> = new Map();\r\n\r\n        const worker = new Worker(url);\r\n\r\n        worker.addEventListener(\"message\", ({ data }: IWorkerEvent) => {\r\n            if (Timeout.isCallNotification(data)) {\r\n                const {\r\n                    params: { timerId }\r\n                } = data;\r\n\r\n                const idOrFunc = scheduledTimeoutFunctions.get(timerId);\r\n\r\n                if (typeof idOrFunc === \"number\") {\r\n                    const unhandledTimerId = unhandledRequests.get(idOrFunc);\r\n\r\n                    if (\r\n                        unhandledTimerId === undefined ||\r\n                        unhandledTimerId !== timerId\r\n                    ) {\r\n                        throw new Error(\"The timer is in an undefined state.\");\r\n                    }\r\n                } else if (typeof idOrFunc !== \"undefined\") {\r\n                    idOrFunc();\r\n\r\n                    // A timeout can be safely deleted because it is only called once.\r\n                    scheduledTimeoutFunctions.delete(timerId);\r\n                } else {\r\n                    throw new Error(\"The timer is in an undefined state.\");\r\n                }\r\n            } else if (Timeout.isClearResponse(data)) {\r\n                const { id } = data;\r\n\r\n                const unhandledTimerId = unhandledRequests.get(id);\r\n\r\n                if (unhandledTimerId === undefined) {\r\n                    throw new Error(\"The timer is in an undefined state.\");\r\n                }\r\n\r\n                unhandledRequests.delete(id);\r\n\r\n                scheduledTimeoutFunctions.delete(unhandledTimerId);\r\n            } else {\r\n                const {\r\n                    error: { message }\r\n                } = data;\r\n\r\n                throw new Error(message);\r\n            }\r\n        });\r\n\r\n        const clearTimeout = (timerId: number) => {\r\n            const id = Math.random();\r\n\r\n            unhandledRequests.set(id, timerId);\r\n            scheduledTimeoutFunctions.set(timerId, id);\r\n\r\n            worker.postMessage({\r\n                id,\r\n                method: \"clear\",\r\n                params: { timerId }\r\n            } as IClearRequest);\r\n        };\r\n\r\n        const setTimeout = (func: () => void, delay: number) => {\r\n            const timerId = Math.random();\r\n\r\n            scheduledTimeoutFunctions.set(timerId, func);\r\n\r\n            worker.postMessage({\r\n                id: null,\r\n                method: \"set\",\r\n                params: {\r\n                    delay,\r\n                    now: performance.now(),\r\n                    timerId\r\n                }\r\n            } as ISetNotification);\r\n\r\n            return timerId;\r\n        };\r\n\r\n        return {\r\n            clearTimeout,\r\n            setTimeout\r\n        };\r\n    }\r\n\r\n    private static loadWorkerTimers = () => {\r\n        const worker = `!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=14)}([function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return i})),n.d(t,\"b\",(function(){return u})),n.d(t,\"c\",(function(){return a})),n.d(t,\"d\",(function(){return d}));const r=new Map,o=new Map,i=e=>{const t=r.get(e);if(void 0===t)throw new Error('There is no interval scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),r.delete(e)},u=e=>{const t=o.get(e);if(void 0===t)throw new Error('There is no timeout scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),o.delete(e)},f=(e,t)=>{let n,r;if(\"performance\"in self){const o=performance.now();n=o,r=e-Math.max(0,o-t)}else n=Date.now(),r=e;return{expected:n+r,remainingDelay:r}},c=(e,t,n,r)=>{const o=\"performance\"in self?performance.now():Date.now();o>n?postMessage({id:null,method:\"call\",params:{timerId:t}}):e.set(t,setTimeout(c,n-o,e,t,n))},a=(e,t,n)=>{const{expected:o,remainingDelay:i}=f(e,n);r.set(t,setTimeout(c,i,r,t,o))},d=(e,t,n)=>{const{expected:r,remainingDelay:i}=f(e,n);o.set(t,setTimeout(c,i,o,t,r))}},function(e,t,n){\"use strict\";n.r(t);var r=n(2);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(3);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(4);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o);var f=n(5);for(var o in f)\"default\"!==o&&function(e){n.d(t,e,(function(){return f[e]}))}(o);var c=n(6);for(var o in c)\"default\"!==o&&function(e){n.d(t,e,(function(){return c[e]}))}(o);var a=n(7);for(var o in a)\"default\"!==o&&function(e){n.d(t,e,(function(){return a[e]}))}(o);var d=n(8);for(var o in d)\"default\"!==o&&function(e){n.d(t,e,(function(){return d[e]}))}(o);var s=n(9);for(var o in s)\"default\"!==o&&function(e){n.d(t,e,(function(){return s[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(11);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(12);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(13);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(0),o=n(1);for(var i in o)\"default\"!==i&&function(e){n.d(t,e,(function(){return o[e]}))}(i);var u=n(10);for(var i in u)\"default\"!==i&&function(e){n.d(t,e,(function(){return u[e]}))}(i);addEventListener(\"message\",({data:e})=>{try{if(\"clear\"===e.method){const{id:t,params:{timerId:n}}=e;Object(r.b)(n),postMessage({error:null,id:t})}else{if(\"set\"!==e.method)throw new Error('The given method \"'.concat(e.method,'\" is not supported'));{const{params:{delay:t,now:n,timerId:o}}=e;Object(r.d)(t,o,n)}}}catch(t){postMessage({error:{message:t.message},id:e.id,result:null})}})}]);`; // tslint:disable-line:max-line-length\r\n        return () => {\r\n            if (Timeout.workerTimers !== null) {\r\n                return Timeout.workerTimers;\r\n            }\r\n\r\n            const blob = new Blob([worker], { type: \"application/javascript; charset=utf-8\" });\r\n            const url = URL.createObjectURL(blob);\r\n\r\n            Timeout.workerTimers = Timeout.load(url);\r\n\r\n            // Edge doesn't like the URL to be revoked directly.\r\n            Timeout.workerTimers.setTimeout(() => URL.revokeObjectURL(url), 0);\r\n\r\n            return Timeout.workerTimers as IWorkerTimers;\r\n        };\r\n    }\r\n\r\n    public static timers: () => IWorkerTimers = Timeout.loadWorkerTimers();\r\n\r\n    private static isCallNotification = (message: TWorkerMessage): message is ICallNotification => {\r\n        return (message as ICallNotification).method !== undefined && (message as ICallNotification).method === \"call\";\r\n    }\r\n\r\n    private static isClearResponse = (message: TWorkerMessage): message is IClearResponse => {\r\n        return (message as IClearResponse).error === null && typeof message.id === \"number\";\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ReplayableAudioNode } from \"../common.browser/Exports\";\r\nimport {\r\n    ArgumentNullError,\r\n    ConnectionClosedEvent,\r\n    ConnectionEvent,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IConnection,\r\n    IDisposable,\r\n    IStreamChunk,\r\n    MessageType,\r\n    ServiceEvent,\r\n    Timeout\r\n} from \"../common/Exports\";\r\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyId,\r\n    RecognitionEventArgs,\r\n    Recognizer,\r\n    SessionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"../sdk/Exports\";\r\nimport { Callback } from \"../sdk/Transcription/IConversation\";\r\nimport {\r\n    AgentConfig,\r\n    DynamicGrammarBuilder,\r\n    ISpeechConfigAudioDevice,\r\n    RecognitionMode,\r\n    RequestSession,\r\n    SpeechContext,\r\n    SpeechDetected,\r\n    type\r\n} from \"./Exports\";\r\nimport {\r\n    AuthInfo,\r\n    IAuthentication,\r\n} from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\nexport abstract class ServiceRecognizerBase implements IDisposable {\r\n    private privAuthentication: IAuthentication;\r\n    private privConnectionFactory: IConnectionFactory;\r\n\r\n    // A promise for a configured connection.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionConfigurationPromise: Promise<IConnection>;\r\n\r\n    // A promise for a connection, but one that has not had the speech context sent yet.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionPromise: Promise<IConnection>;\r\n    private privAuthFetchEventId: string;\r\n    private privIsDisposed: boolean;\r\n    private privMustReportEndOfStream: boolean;\r\n    private privConnectionEvents: EventSource<ConnectionEvent>;\r\n    private privServiceEvents: EventSource<ServiceEvent>;\r\n    private privDynamicGrammar: DynamicGrammarBuilder;\r\n    private privAgentConfig: AgentConfig;\r\n    private privServiceHasSentMessage: boolean;\r\n    private privActivityTemplate: string;\r\n    private privSetTimeout: (cb: () => void, delay: number) => number = setTimeout;\r\n    private privAudioSource: IAudioSource;\r\n    private privIsLiveAudio: boolean = false;\r\n    protected privSpeechContext: SpeechContext;\r\n    protected privRequestSession: RequestSession;\r\n    protected privConnectionId: string;\r\n    protected privRecognizerConfig: RecognizerConfig;\r\n    protected privRecognizer: Recognizer;\r\n    protected privSuccessCallback: (e: SpeechRecognitionResult) => void;\r\n    protected privErrorCallback: (e: string) => void;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        recognizer: Recognizer) {\r\n\r\n        if (!authentication) {\r\n            throw new ArgumentNullError(\"authentication\");\r\n        }\r\n\r\n        if (!connectionFactory) {\r\n            throw new ArgumentNullError(\"connectionFactory\");\r\n        }\r\n\r\n        if (!audioSource) {\r\n            throw new ArgumentNullError(\"audioSource\");\r\n        }\r\n\r\n        if (!recognizerConfig) {\r\n            throw new ArgumentNullError(\"recognizerConfig\");\r\n        }\r\n\r\n        this.privMustReportEndOfStream = false;\r\n        this.privAuthentication = authentication;\r\n        this.privConnectionFactory = connectionFactory;\r\n        this.privAudioSource = audioSource;\r\n        this.privRecognizerConfig = recognizerConfig;\r\n        this.privIsDisposed = false;\r\n        this.privRecognizer = recognizer;\r\n        this.privRequestSession = new RequestSession(this.privAudioSource.id());\r\n        this.privConnectionEvents = new EventSource<ConnectionEvent>();\r\n        this.privServiceEvents = new EventSource<ServiceEvent>();\r\n        this.privDynamicGrammar = new DynamicGrammarBuilder();\r\n        this.privSpeechContext = new SpeechContext(this.privDynamicGrammar);\r\n        this.privAgentConfig = new AgentConfig();\r\n        if (typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") {\r\n            this.privSetTimeout = Timeout.setTimeout;\r\n        }\r\n\r\n        this.connectionEvents.attach(async (connectionEvent: ConnectionEvent): Promise<void> => {\r\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                const connectionClosedEvent = connectionEvent as ConnectionClosedEvent;\r\n                if (connectionClosedEvent.statusCode !== 1000) {\r\n                    await this.cancelRecognitionLocal(CancellationReason.Error,\r\n                        connectionClosedEvent.statusCode === 1007 ? CancellationErrorCode.BadRequestParameters : CancellationErrorCode.ConnectionFailure,\r\n                        connectionClosedEvent.reason + \" websocket error code: \" + connectionClosedEvent.statusCode);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public get audioSource(): IAudioSource {\r\n        return this.privAudioSource;\r\n    }\r\n\r\n    public get speechContext(): SpeechContext {\r\n        return this.privSpeechContext;\r\n    }\r\n\r\n    public get dynamicGrammar(): DynamicGrammarBuilder {\r\n        return this.privDynamicGrammar;\r\n    }\r\n\r\n    public get agentConfig(): AgentConfig {\r\n        return this.privAgentConfig;\r\n    }\r\n\r\n    public set conversationTranslatorToken(token: string) {\r\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.ConversationTranslator_Token, token);\r\n    }\r\n\r\n    public set authentication(auth: IAuthentication) {\r\n        this.privAuthentication = this.authentication;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        this.privIsDisposed = true;\r\n        if (this.privConnectionConfigurationPromise) {\r\n            try {\r\n                const connection: IConnection = await this.privConnectionConfigurationPromise;\r\n                await connection.dispose(reason);\r\n            } catch (error) {\r\n                // The connection is in a bad state. But we're trying to kill it, so...\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    public get connectionEvents(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionEvents;\r\n    }\r\n\r\n    public get serviceEvents(): EventSource<ServiceEvent> {\r\n        return this.privServiceEvents;\r\n    }\r\n\r\n    public get recognitionMode(): RecognitionMode {\r\n        return this.privRecognizerConfig.recognitionMode;\r\n    }\r\n\r\n    protected recognizeOverride: (recoMode: RecognitionMode, sc: (e: SpeechRecognitionResult) => void, ec: (e: string) => void) => any = undefined;\r\n\r\n    public async recognize(\r\n        recoMode: RecognitionMode,\r\n        successCallback: (e: SpeechRecognitionResult) => void,\r\n        errorCallBack: (e: string) => void,\r\n    ): Promise<void> {\r\n\r\n        if (this.recognizeOverride !== undefined) {\r\n            return this.recognizeOverride(recoMode, successCallback, errorCallBack);\r\n        }\r\n        // Clear the existing configuration promise to force a re-transmission of config and context.\r\n        this.privConnectionConfigurationPromise = null;\r\n        this.privRecognizerConfig.recognitionMode = recoMode;\r\n\r\n        this.privSuccessCallback = successCallback;\r\n        this.privErrorCallback = errorCallBack;\r\n\r\n        this.privRequestSession.startNewRecognition();\r\n        this.privRequestSession.listenForServiceTelemetry(this.privAudioSource.events);\r\n\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n        let audioNode: ReplayableAudioNode;\r\n\r\n        try {\r\n            const audioStreamNode: IAudioStreamNode = await this.audioSource.attach(this.privRequestSession.audioNodeId);\r\n            const format: AudioStreamFormatImpl = await this.audioSource.format;\r\n            const deviceInfo: ISpeechConfigAudioDevice = await this.audioSource.deviceInfo;\r\n            this.privIsLiveAudio = deviceInfo.type && deviceInfo.type === type.Microphones;\r\n\r\n            audioNode = new ReplayableAudioNode(audioStreamNode, format.avgBytesPerSec);\r\n            await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\r\n            this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\r\n\r\n        } catch (error) {\r\n            await this.privRequestSession.onStopRecognizing();\r\n            throw error;\r\n        }\r\n\r\n        try {\r\n            await conPromise;\r\n        } catch (error) {\r\n            await this.cancelRecognitionLocal(CancellationReason.Error, CancellationErrorCode.ConnectionFailure, error);\r\n            return;\r\n        }\r\n\r\n        const sessionStartEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n\r\n        if (!!this.privRecognizer.sessionStarted) {\r\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\r\n        }\r\n\r\n        const messageRetrievalPromise = this.receiveMessage();\r\n        const audioSendPromise = this.sendAudio(audioNode);\r\n\r\n        audioSendPromise.catch(async (error: string) => {\r\n            await this.cancelRecognitionLocal(CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n        });\r\n\r\n        return;\r\n    }\r\n\r\n    public async stopRecognizing(): Promise<void> {\r\n        if (this.privRequestSession.isRecognizing) {\r\n            await this.audioSource.turnOff();\r\n            await this.sendFinalAudio();\r\n            await this.privRequestSession.onStopRecognizing();\r\n            await this.privRequestSession.turnCompletionPromise;\r\n            await this.privRequestSession.dispose();\r\n        }\r\n        return;\r\n    }\r\n\r\n    public async connect(): Promise<void> {\r\n        await this.connectImpl();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public connectAsync(cb?: Callback, err?: Callback): void {\r\n        this.connectImpl().then((connection: IConnection): void => {\r\n            try {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }\r\n        }, (reason: any): void => {\r\n            try {\r\n                if (!!err) {\r\n                    err(reason);\r\n                }\r\n                /* tslint:disable:no-empty */\r\n            } catch (error) {\r\n            }\r\n        });\r\n    }\r\n\r\n    protected disconnectOverride: () => Promise<void> = undefined;\r\n\r\n    public async disconnect(): Promise<void> {\r\n        await this.cancelRecognitionLocal(CancellationReason.Error,\r\n            CancellationErrorCode.NoError,\r\n            \"Disconnecting\");\r\n\r\n        if (this.disconnectOverride !== undefined) {\r\n            await this.disconnectOverride();\r\n        }\r\n\r\n        try {\r\n            await (await this.privConnectionPromise).dispose();\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        this.privConnectionPromise = null;\r\n    }\r\n\r\n    // Called when telemetry data is sent to the service.\r\n    // Used for testing Telemetry capture.\r\n    public static telemetryData: (json: string) => void;\r\n    public static telemetryDataEnabled: boolean = true;\r\n\r\n    public sendMessage(message: string): void { }\r\n\r\n    public async sendNetworkMessage(path: string, payload: string | ArrayBuffer): Promise<void> {\r\n        const type: MessageType = typeof payload === \"string\" ? MessageType.Text : MessageType.Binary;\r\n        const contentType: string = typeof payload === \"string\" ? \"application/json\" : \"\";\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        return connection.send(new SpeechConnectionMessage(type, path, this.privRequestSession.requestId, contentType, payload));\r\n    }\r\n\r\n    public set activityTemplate(messagePayload: string) { this.privActivityTemplate = messagePayload; }\r\n    public get activityTemplate(): string { return this.privActivityTemplate; }\r\n\r\n    protected abstract processTypeSpecificMessages(\r\n        connectionMessage: SpeechConnectionMessage,\r\n        successCallback?: (e: SpeechRecognitionResult) => void,\r\n        errorCallBack?: (e: string) => void): Promise<boolean>;\r\n\r\n    protected async sendTelemetryData(): Promise<void> {\r\n        const telemetryData = this.privRequestSession.getTelemetry();\r\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true ||\r\n            this.privIsDisposed ||\r\n            null === telemetryData) {\r\n            return;\r\n        }\r\n\r\n        if (!!ServiceRecognizerBase.telemetryData) {\r\n            try {\r\n                ServiceRecognizerBase.telemetryData(telemetryData);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"telemetry\",\r\n            this.privRequestSession.requestId,\r\n            \"application/json\",\r\n            telemetryData));\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected abstract cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void;\r\n\r\n    // Cancels recognition.\r\n    protected async cancelRecognitionLocal(\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): Promise<void> {\r\n\r\n        if (!!this.privRequestSession.isRecognizing) {\r\n            await this.privRequestSession.onStopRecognizing();\r\n\r\n            this.cancelRecognition(\r\n                this.privRequestSession.sessionId,\r\n                this.privRequestSession.requestId,\r\n                cancellationReason,\r\n                errorCode,\r\n                error);\r\n        }\r\n    }\r\n\r\n    protected receiveMessageOverride: () => Promise<void> = undefined;\r\n\r\n    protected async receiveMessage(): Promise<void> {\r\n        try {\r\n            if (this.privIsDisposed) {\r\n                // We're done.\r\n                return;\r\n            }\r\n\r\n            let connection = await this.fetchConnection();\r\n            const message = await connection.read();\r\n\r\n            if (this.receiveMessageOverride !== undefined) {\r\n                return this.receiveMessageOverride();\r\n            }\r\n\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!message) {\r\n                if (!this.privRequestSession.isRecognizing) {\r\n                    return;\r\n                } else {\r\n                    return this.receiveMessage();\r\n                }\r\n            }\r\n\r\n            this.privServiceHasSentMessage = true;\r\n            const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\r\n\r\n            if (connectionMessage.requestId.toLowerCase() === this.privRequestSession.requestId.toLowerCase()) {\r\n                switch (connectionMessage.path.toLowerCase()) {\r\n                    case \"turn.start\":\r\n                        this.privMustReportEndOfStream = true;\r\n                        this.privRequestSession.onServiceTurnStartResponse();\r\n                        break;\r\n\r\n                    case \"speech.startdetected\":\r\n                        const speechStartDetected: SpeechDetected = SpeechDetected.fromJSON(connectionMessage.textBody);\r\n                        const speechStartEventArgs = new RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\r\n                        if (!!this.privRecognizer.speechStartDetected) {\r\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\r\n                        }\r\n                        break;\r\n\r\n                    case \"speech.enddetected\":\r\n                        let json: string;\r\n                        if (connectionMessage.textBody.length > 0) {\r\n                            json = connectionMessage.textBody;\r\n                        } else {\r\n                            // If the request was empty, the JSON returned is empty.\r\n                            json = \"{ Offset: 0 }\";\r\n                        }\r\n                        const speechStopDetected: SpeechDetected = SpeechDetected.fromJSON(json);\r\n                        // Only shrink the buffers for continuous recognition.\r\n                        // For single shot, the speech.phrase message will come after the speech.end and it should own buffer shrink.\r\n                        if (this.privRecognizerConfig.isContinuousRecognition) {\r\n                            this.privRequestSession.onServiceRecognized(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset);\r\n                        }\r\n                        const speechStopEventArgs = new RecognitionEventArgs(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\r\n                        if (!!this.privRecognizer.speechEndDetected) {\r\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\r\n                        }\r\n                        break;\r\n\r\n                    case \"turn.end\":\r\n                        await this.sendTelemetryData();\r\n                        if (this.privRequestSession.isSpeechEnded && this.privMustReportEndOfStream) {\r\n                            this.privMustReportEndOfStream = false;\r\n                            await this.cancelRecognitionLocal(CancellationReason.EndOfStream, CancellationErrorCode.NoError, undefined);\r\n                        }\r\n                        const sessionStopEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n                        await this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition);\r\n                        if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\r\n                            if (!!this.privRecognizer.sessionStopped) {\r\n                                this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\r\n                            }\r\n                            return;\r\n                        } else {\r\n                            connection = await this.fetchConnection();\r\n                            await this.sendPrePayloadJSON(connection);\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        if (!await this.processTypeSpecificMessages(connectionMessage)) {\r\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\r\n                            if (!!this.privServiceEvents) {\r\n                                this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\r\n                            }\r\n                        }\r\n                }\r\n            }\r\n            return this.receiveMessage();\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected sendSpeechContext = (connection: IConnection): Promise<void> => {\r\n        const speechContextJson = this.speechContext.toJSON();\r\n\r\n        if (speechContextJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.context\",\r\n                this.privRequestSession.requestId,\r\n                \"application/json\",\r\n                speechContextJson));\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected sendPrePayloadJSONOverride: (connection: IConnection) => Promise<void> = undefined;\r\n\r\n    // Encapsulated for derived service recognizers that need to send additional JSON\r\n    protected async sendPrePayloadJSON(connection: IConnection): Promise<void> {\r\n        if (this.sendPrePayloadJSONOverride !== undefined) {\r\n            return this.sendPrePayloadJSONOverride(connection);\r\n        }\r\n\r\n        await this.sendSpeechContext(connection);\r\n        await this.sendWaveHeader(connection);\r\n        return;\r\n    }\r\n\r\n    protected async sendWaveHeader(connection: IConnection): Promise<void> {\r\n        const format: AudioStreamFormatImpl = await this.audioSource.format;\r\n        // this.writeBufferToConsole(format.header);\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Binary,\r\n            \"audio\",\r\n            this.privRequestSession.requestId,\r\n            \"audio/x-wav\",\r\n            format.header\r\n        ));\r\n    }\r\n\r\n    protected postConnectImplOverride: (connection: Promise<IConnection>) => Promise<IConnection> = undefined;\r\n\r\n    // Establishes a websocket connection to the end point.\r\n    protected connectImpl(isUnAuthorized: boolean = false): Promise<IConnection> {\r\n        if (this.privConnectionPromise) {\r\n            return this.privConnectionPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionPromise = null;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.connectImpl();\r\n                }\r\n                return this.privConnectionPromise;\r\n            }, (error: string): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionPromise = null;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.connectImpl();\r\n            });\r\n        }\r\n\r\n        this.privAuthFetchEventId = createNoDashGuid();\r\n        const sessionId: string = this.privRecognizerConfig.parameters.getProperty(PropertyId.Speech_SessionId, undefined);\r\n        this.privConnectionId = (sessionId !== undefined) ? sessionId : createNoDashGuid();\r\n\r\n        this.privRequestSession.onPreConnectionStart(this.privAuthFetchEventId, this.privConnectionId);\r\n\r\n        const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\r\n\r\n        this.privConnectionPromise = authPromise.then(async (result: AuthInfo) => {\r\n            await this.privRequestSession.onAuthCompleted(false);\r\n\r\n            const connection: IConnection = this.privConnectionFactory.create(this.privRecognizerConfig, result, this.privConnectionId);\r\n\r\n            this.privRequestSession.listenForServiceTelemetry(connection.events);\r\n\r\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\r\n            // it'll stop sending events.\r\n            connection.events.attach((event: ConnectionEvent) => {\r\n                this.connectionEvents.onEvent(event);\r\n            });\r\n            const response = await connection.open();\r\n            if (response.statusCode === 200) {\r\n                await this.privRequestSession.onConnectionEstablishCompleted(response.statusCode);\r\n                return Promise.resolve(connection);\r\n            } else if (response.statusCode === 403 && !isUnAuthorized) {\r\n                return this.connectImpl(true);\r\n            } else {\r\n                await this.privRequestSession.onConnectionEstablishCompleted(response.statusCode, response.reason);\r\n                return Promise.reject(`Unable to contact server. StatusCode: ${response.statusCode}, ${this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint)} Reason: ${response.reason}`);\r\n            }\r\n        }, async (error: string): Promise<IConnection> => {\r\n            await this.privRequestSession.onAuthCompleted(true, error);\r\n            throw new Error(error);\r\n        });\r\n\r\n        // Attach an empty handler to allow the promise to run in the background while\r\n        // other startup events happen. It'll eventually be awaited on.\r\n        this.privConnectionPromise.catch(() => { });\r\n\r\n        if (this.postConnectImplOverride !== undefined) {\r\n            return this.postConnectImplOverride(this.privConnectionPromise);\r\n        }\r\n\r\n        return this.privConnectionPromise;\r\n    }\r\n\r\n    protected configConnectionOverride: (connection: IConnection) => Promise<IConnection> = undefined;\r\n\r\n    protected sendSpeechServiceConfig = (connection: IConnection, requestSession: RequestSession, SpeechServiceConfigJson: string): Promise<void> => {\r\n        // filter out anything that is not required for the service to work.\r\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true) {\r\n            const withTelemetry = JSON.parse(SpeechServiceConfigJson);\r\n\r\n            const replacement: any = {\r\n                context: {\r\n                    system: withTelemetry.context.system,\r\n                },\r\n            };\r\n\r\n            SpeechServiceConfigJson = JSON.stringify(replacement);\r\n        }\r\n\r\n        if (SpeechServiceConfigJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.config\",\r\n                requestSession.requestId,\r\n                \"application/json\",\r\n                SpeechServiceConfigJson));\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    protected async fetchConnection(): Promise<IConnection> {\r\n        if (this.privConnectionConfigurationPromise) {\r\n            return this.privConnectionConfigurationPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionConfigurationPromise = null;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.fetchConnection();\r\n                }\r\n                return this.privConnectionConfigurationPromise;\r\n            }, (error: string): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionConfigurationPromise = null;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.fetchConnection();\r\n            });\r\n        }\r\n        this.privConnectionConfigurationPromise = this.configureConnection();\r\n        return await this.privConnectionConfigurationPromise;\r\n    }\r\n\r\n    protected async sendAudio(audioStreamNode: IAudioStreamNode): Promise<void> {\r\n        const audioFormat: AudioStreamFormatImpl = await this.audioSource.format;\r\n\r\n        // The time we last sent data to the service.\r\n        let nextSendTime: number = Date.now();\r\n\r\n        // Max amount to send before we start to throttle\r\n        const fastLaneSizeMs: string = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-TransmitLengthBeforThrottleMs\", \"5000\");\r\n        const maxSendUnthrottledBytes: number = audioFormat.avgBytesPerSec / 1000 * parseInt(fastLaneSizeMs, 10);\r\n        const startRecogNumber: number = this.privRequestSession.recogNumber;\r\n\r\n        const readAndUploadCycle = async (): Promise<void> => {\r\n            // If speech is done, stop sending audio.\r\n            if (!this.privIsDisposed &&\r\n                !this.privRequestSession.isSpeechEnded &&\r\n                this.privRequestSession.isRecognizing &&\r\n                this.privRequestSession.recogNumber === startRecogNumber) {\r\n\r\n                const connection: IConnection = await this.fetchConnection();\r\n                const audioStreamChunk: IStreamChunk<ArrayBuffer> = await audioStreamNode.read();\r\n                // we have a new audio chunk to upload.\r\n                if (this.privRequestSession.isSpeechEnded) {\r\n                    // If service already recognized audio end then don't send any more audio\r\n                    return;\r\n                }\r\n\r\n                let payload: ArrayBuffer;\r\n                let sendDelay: number;\r\n\r\n                if (!audioStreamChunk || audioStreamChunk.isEnd) {\r\n                    payload = null;\r\n                    sendDelay = 0;\r\n                } else {\r\n                    payload = audioStreamChunk.buffer;\r\n\r\n                    this.privRequestSession.onAudioSent(payload.byteLength);\r\n\r\n                    if (maxSendUnthrottledBytes >= this.privRequestSession.bytesSent) {\r\n                        sendDelay = 0;\r\n                    } else {\r\n                        sendDelay = Math.max(0, nextSendTime - Date.now());\r\n                    }\r\n                }\r\n\r\n                if (0 !== sendDelay) {\r\n                    await this.delay(sendDelay);\r\n                }\r\n\r\n                if (payload !== null) {\r\n                    nextSendTime = Date.now() + (payload.byteLength * 1000 / (audioFormat.avgBytesPerSec * 2));\r\n                }\r\n\r\n                // Are we still alive?\r\n                if (!this.privIsDisposed &&\r\n                    !this.privRequestSession.isSpeechEnded &&\r\n                    this.privRequestSession.isRecognizing &&\r\n                    this.privRequestSession.recogNumber === startRecogNumber) {\r\n                    connection.send(\r\n                        new SpeechConnectionMessage(MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, payload)\r\n                    ).catch(() => {\r\n                        this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition).catch(() => { });\r\n                    });\r\n\r\n                    if (!audioStreamChunk?.isEnd) {\r\n                        // this.writeBufferToConsole(payload);\r\n                        // Regardless of success or failure, schedule the next upload.\r\n                        // If the underlying connection was broken, the next cycle will\r\n                        // get a new connection and re-transmit missing audio automatically.\r\n                        return readAndUploadCycle();\r\n                    } else {\r\n                        // the audio stream has been closed, no need to schedule next\r\n                        // read-upload cycle.\r\n                        if (!this.privIsLiveAudio) {\r\n                            this.privRequestSession.onSpeechEnded();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        return readAndUploadCycle();\r\n    }\r\n\r\n    private delay(delayMs: number): Promise<void> {\r\n        return new Promise((resolve: () => void, reject: (error: string) => void) => {\r\n            this.privSetTimeout(resolve, delayMs);\r\n        });\r\n    }\r\n\r\n    private writeBufferToConsole(buffer: ArrayBuffer): void {\r\n        let out: string = \"Buffer Size: \";\r\n        if (null === buffer) {\r\n            out += \"null\";\r\n        } else {\r\n            const readView: Uint8Array = new Uint8Array(buffer);\r\n            out += buffer.byteLength + \"\\r\\n\";\r\n            for (let i: number = 0; i < buffer.byteLength; i++) {\r\n                out += readView[i].toString(16).padStart(2, \"0\") + \" \";\r\n            }\r\n        }\r\n        // tslint:disable-next-line:no-console\r\n        console.info(out);\r\n    }\r\n\r\n    private async sendFinalAudio(): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await connection.send(new SpeechConnectionMessage(MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, null));\r\n        return;\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\r\n    private async configureConnection(): Promise<IConnection> {\r\n        const connection: IConnection = await this.connectImpl();\r\n        if (this.configConnectionOverride !== undefined) {\r\n            return this.configConnectionOverride(connection);\r\n        }\r\n        await this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\r\n        await this.sendPrePayloadJSON(connection);\r\n        return connection;\r\n    }\r\n}\r\n","import superPropBase from \"@babel/runtime/helpers/esm/superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { EventType, PlatformEvent } from \"../common/Exports\";\r\n\r\nexport class SpeechSynthesisEvent extends PlatformEvent {\r\n    private privRequestId: string;\r\n\r\n    constructor(eventName: string, requestId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n\r\n        this.privRequestId = requestId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n}\r\n\r\nexport class SynthesisTriggeredEvent extends SpeechSynthesisEvent {\r\n    private privSessionAudioDestinationId: string;\r\n    private privTurnAudioDestinationId: string;\r\n\r\n    constructor(requestId: string, sessionAudioDestinationId: string, turnAudioDestinationId: string) {\r\n        super(\"SynthesisTriggeredEvent\", requestId);\r\n\r\n        this.privSessionAudioDestinationId = sessionAudioDestinationId;\r\n        this.privTurnAudioDestinationId = turnAudioDestinationId;\r\n    }\r\n\r\n    public get audioSessionDestinationId(): string {\r\n        return this.privSessionAudioDestinationId;\r\n    }\r\n\r\n    public get audioTurnDestinationId(): string {\r\n        return this.privTurnAudioDestinationId;\r\n    }\r\n}\r\n\r\nexport class ConnectingToSynthesisServiceEvent extends SpeechSynthesisEvent {\r\n    private privAuthFetchEventId: string;\r\n\r\n    constructor(requestId: string, authFetchEventId: string) {\r\n        super(\"ConnectingToSynthesisServiceEvent\", requestId);\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n\r\nexport class SynthesisStartedEvent extends SpeechSynthesisEvent {\r\n    private privAuthFetchEventId: string;\r\n\r\n    constructor(requestId: string, authFetchEventId: string) {\r\n        super(\"SynthesisStartedEvent\", requestId);\r\n\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events, IAudioDestination\r\n} from \"../common/Exports\";\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport { PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { ISynthesisMetadata } from \"./ServiceMessages/SynthesisAudioMetadata\";\r\nimport { SynthesisAdapterBase } from \"./SynthesisAdapterBase\";\r\nimport {\r\n    ConnectingToSynthesisServiceEvent,\r\n    SpeechSynthesisEvent,\r\n    SynthesisStartedEvent,\r\n    SynthesisTriggeredEvent,\r\n} from \"./SynthesisEvents\";\r\n\r\nexport interface ISynthesisResponseContext {\r\n    serviceTag: string;\r\n}\r\n\r\nexport interface ISynthesisResponseAudio {\r\n    type: string;\r\n    streamId: string;\r\n}\r\n\r\nexport interface ISynthesisResponse {\r\n    context: ISynthesisResponseContext;\r\n    audio: ISynthesisResponseAudio;\r\n}\r\n\r\nexport class SynthesisTurn {\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get streamId(): string {\r\n        return this.privStreamId;\r\n    }\r\n\r\n    public set streamId(value: string) {\r\n        this.privStreamId = value;\r\n    }\r\n\r\n    public get audioOutputFormat(): AudioOutputFormatImpl {\r\n        return this.privAudioOutputFormat;\r\n    }\r\n\r\n    public set audioOutputFormat(format: AudioOutputFormatImpl) {\r\n        this.privAudioOutputFormat = format;\r\n    }\r\n\r\n    public get turnCompletionPromise(): Promise<void> {\r\n        return this.privTurnDeferral.promise;\r\n    }\r\n\r\n    public get isSynthesisEnded(): boolean {\r\n        return this.privIsSynthesisEnded;\r\n    }\r\n\r\n    public get isSynthesizing(): boolean {\r\n        return this.privIsSynthesizing;\r\n    }\r\n\r\n    public get currentTextOffset(): number {\r\n        return this.privTextOffset;\r\n    }\r\n\r\n    // The number of bytes received for current turn\r\n    public get bytesReceived(): number {\r\n        return this.privBytesReceived;\r\n    }\r\n\r\n    private privIsDisposed: boolean = false;\r\n    private privAuthFetchEventId: string;\r\n    private privIsSynthesizing: boolean = false;\r\n    private privIsSynthesisEnded: boolean = false;\r\n    private privBytesReceived: number = 0;\r\n    private privRequestId: string;\r\n    private privStreamId: string;\r\n    private privTurnDeferral: Deferred<void>;\r\n    private privInTurn: boolean = false;\r\n    private privAudioOutputFormat: AudioOutputFormatImpl;\r\n    private privAudioOutputStream: PullAudioOutputStreamImpl;\r\n    private privReceivedAudio: ArrayBuffer;\r\n    private privReceivedAudioWithHeader: ArrayBuffer;\r\n    private privTextOffset: number = 0;\r\n    private privNextSearchTextIndex: number = 0;\r\n    private privPartialVisemeAnimation: string;\r\n    private privRawText: string;\r\n    private privIsSSML: boolean;\r\n    private privTurnAudioDestination: IAudioDestination;\r\n\r\n    constructor() {\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privTurnDeferral = new Deferred<void>();\r\n\r\n        // We're not in a turn, so resolve.\r\n        this.privTurnDeferral.resolve();\r\n    }\r\n\r\n    public async getAllReceivedAudio(): Promise<ArrayBuffer> {\r\n        if (!!this.privReceivedAudio) {\r\n            return Promise.resolve(this.privReceivedAudio);\r\n        }\r\n        if (!this.privIsSynthesisEnded) {\r\n            return null;\r\n        }\r\n        await this.readAllAudioFromStream();\r\n        return Promise.resolve(this.privReceivedAudio);\r\n    }\r\n\r\n    public async getAllReceivedAudioWithHeader(): Promise<ArrayBuffer> {\r\n        if (!!this.privReceivedAudioWithHeader) {\r\n            return this.privReceivedAudioWithHeader;\r\n        }\r\n        if (!this.privIsSynthesisEnded) {\r\n            return null;\r\n        }\r\n        if (this.audioOutputFormat.hasHeader) {\r\n            const audio: ArrayBuffer = await this.getAllReceivedAudio();\r\n            this.privReceivedAudioWithHeader = SynthesisAdapterBase.addHeader(audio, this.audioOutputFormat);\r\n            return this.privReceivedAudioWithHeader;\r\n        } else {\r\n            return this.getAllReceivedAudio();\r\n        }\r\n    }\r\n\r\n    public startNewSynthesis(requestId: string, rawText: string, isSSML: boolean, audioDestination?: IAudioDestination): void {\r\n        this.privIsSynthesisEnded = false;\r\n        this.privIsSynthesizing = true;\r\n        this.privRequestId = requestId;\r\n        this.privRawText = rawText;\r\n        this.privIsSSML = isSSML;\r\n        this.privAudioOutputStream = new PullAudioOutputStreamImpl();\r\n        this.privAudioOutputStream.format = this.privAudioOutputFormat;\r\n        this.privReceivedAudio = null;\r\n        this.privReceivedAudioWithHeader = null;\r\n        this.privBytesReceived = 0;\r\n        this.privTextOffset = 0;\r\n        this.privNextSearchTextIndex = 0;\r\n        this.privPartialVisemeAnimation = \"\";\r\n        if (audioDestination !== undefined) {\r\n            this.privTurnAudioDestination = audioDestination;\r\n            this.privTurnAudioDestination.format = this.privAudioOutputFormat;\r\n        }\r\n        this.onEvent(new SynthesisTriggeredEvent(this.requestId, undefined, audioDestination === undefined ? undefined : audioDestination.id()));\r\n    }\r\n\r\n    public onPreConnectionStart = (authFetchEventId: string, connectionId: string): void => {\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.onEvent(new ConnectingToSynthesisServiceEvent(this.privRequestId, this.privAuthFetchEventId));\r\n    }\r\n\r\n    public onAuthCompleted = (isError: boolean, error?: string): void => {\r\n        if (isError) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onConnectionEstablishCompleted = (statusCode: number, reason?: string): void => {\r\n        if (statusCode === 200) {\r\n            this.onEvent(new SynthesisStartedEvent(this.requestId, this.privAuthFetchEventId));\r\n            this.privBytesReceived = 0;\r\n            return;\r\n        } else if (statusCode === 403) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onServiceResponseMessage = (responseJson: string): void => {\r\n        const response: ISynthesisResponse = JSON.parse(responseJson);\r\n        this.streamId = response.audio.streamId;\r\n    }\r\n\r\n    public onServiceTurnEndResponse = (): void => {\r\n        this.privInTurn = false;\r\n        this.privTurnDeferral.resolve();\r\n        this.onComplete();\r\n    }\r\n\r\n    public onServiceTurnStartResponse = (): void => {\r\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\r\n            // What? How are we starting a turn with another not done?\r\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\r\n        }\r\n        this.privInTurn = true;\r\n        this.privTurnDeferral = new Deferred<void>();\r\n    }\r\n\r\n    public onAudioChunkReceived(data: ArrayBuffer): void {\r\n        if (this.isSynthesizing) {\r\n            this.privAudioOutputStream.write(data);\r\n            this.privBytesReceived += data.byteLength;\r\n            if (this.privTurnAudioDestination !== undefined) {\r\n                this.privTurnAudioDestination.write(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    public onWordBoundaryEvent(text: string): void {\r\n        this.updateTextOffset(text);\r\n    }\r\n\r\n    public onVisemeMetadataReceived(metadata: ISynthesisMetadata): void {\r\n        if (metadata.Data.AnimationChunk !== undefined) {\r\n            this.privPartialVisemeAnimation += metadata.Data.AnimationChunk;\r\n        }\r\n    }\r\n\r\n    public dispose = (error?: string): void => {\r\n        if (!this.privIsDisposed) {\r\n            // we should have completed by now. If we did not its an unknown error.\r\n            this.privIsDisposed = true;\r\n        }\r\n    }\r\n\r\n    public onStopSynthesizing(): void {\r\n        this.onComplete();\r\n    }\r\n\r\n    /**\r\n     * Gets the viseme animation string (merged from animation chunk), and clears the internal\r\n     * partial animation.\r\n     */\r\n    public getAndClearVisemeAnimation(): string {\r\n        const animation: string = this.privPartialVisemeAnimation;\r\n        this.privPartialVisemeAnimation = \"\";\r\n        return animation;\r\n    }\r\n\r\n    protected onEvent = (event: SpeechSynthesisEvent): void => {\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private updateTextOffset(text: string): void {\r\n        if (this.privTextOffset >= 0) {\r\n            this.privTextOffset = this.privRawText.indexOf(text, this.privNextSearchTextIndex);\r\n            if (this.privTextOffset >= 0) {\r\n                this.privNextSearchTextIndex = this.privTextOffset + text.length;\r\n            }\r\n            if (this.privIsSSML) {\r\n                if (this.privRawText.indexOf(\"<\", this.privTextOffset + 1) > this.privRawText.indexOf(\">\", this.privTextOffset + 1)) {\r\n                    this.updateTextOffset(text);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private onComplete = (): void => {\r\n        if (this.privIsSynthesizing) {\r\n            this.privIsSynthesizing = false;\r\n            this.privIsSynthesisEnded = true;\r\n            this.privAudioOutputStream.close();\r\n            this.privInTurn = false;\r\n            if (this.privTurnAudioDestination !== undefined) {\r\n                this.privTurnAudioDestination.close();\r\n                this.privTurnAudioDestination = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    private async readAllAudioFromStream(): Promise<void> {\r\n        if (this.privIsSynthesisEnded) {\r\n            this.privReceivedAudio = new ArrayBuffer(this.bytesReceived);\r\n            try {\r\n                await this.privAudioOutputStream.read(this.privReceivedAudio);\r\n            } catch (e) {\r\n                this.privReceivedAudio = new ArrayBuffer(0);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport {\r\n    AudioSourceErrorEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    AudioStreamNodeErrorEvent,\r\n    ConnectionEstablishedEvent,\r\n    ConnectionEstablishErrorEvent,\r\n    ConnectionMessageReceivedEvent,\r\n    ConnectionStartEvent,\r\n    IEventListener,\r\n    IStringDictionary,\r\n    PlatformEvent,\r\n} from \"../common/Exports\";\r\nimport { ConnectingToServiceEvent, RecognitionTriggeredEvent } from \"./RecognitionEvents\";\r\n\r\nexport interface ITelemetry {\r\n    Metrics: IMetric[];\r\n    ReceivedMessages: IStringDictionary<string[]>;\r\n}\r\n\r\nexport interface IMetric {\r\n    End?: string;\r\n    Error?: string;\r\n    Id?: string;\r\n    Name?: string;\r\n    Start?: string;\r\n    PhraseLatencyMs?: number[];\r\n    FirstHypothesisLatencyMs?: number[];\r\n}\r\n\r\nexport class ServiceTelemetryListener implements IEventListener<PlatformEvent> {\r\n    private privIsDisposed: boolean = false;\r\n\r\n    private privRequestId: string;\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    private privListeningTriggerMetric: IMetric = null;\r\n    private privMicMetric: IMetric = null;\r\n    private privConnectionEstablishMetric: IMetric = null;\r\n\r\n    private privMicStartTime: string;\r\n\r\n    private privConnectionId: string;\r\n    private privConnectionStartTime: string;\r\n\r\n    private privReceivedMessages: IStringDictionary<string[]>;\r\n    private privPhraseLatencies: number[];\r\n    private privHypothesisLatencies: number[];\r\n\r\n    constructor(requestId: string, audioSourceId: string, audioNodeId: string) {\r\n        this.privRequestId = requestId;\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n\r\n        this.privReceivedMessages = {};\r\n        this.privPhraseLatencies = [];\r\n        this.privHypothesisLatencies = [];\r\n    }\r\n\r\n    public phraseReceived(audioReceivedTime: number): void {\r\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\r\n            this.privPhraseLatencies.push(Date.now() - audioReceivedTime);\r\n        }\r\n    }\r\n\r\n    public hypothesisReceived(audioReceivedTime: number): void {\r\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\r\n            this.privHypothesisLatencies.push(Date.now() - audioReceivedTime);\r\n        }\r\n    }\r\n\r\n    public onEvent = (e: PlatformEvent): void => {\r\n        if (this.privIsDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (e instanceof RecognitionTriggeredEvent && e.requestId === this.privRequestId) {\r\n            this.privListeningTriggerMetric = {\r\n                End: e.eventTime,\r\n                Name: \"ListeningTrigger\",\r\n                Start: e.eventTime,\r\n            };\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeAttachingEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            this.privMicStartTime = e.eventTime;\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeAttachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            this.privMicStartTime = e.eventTime;\r\n        }\r\n\r\n        if (e instanceof AudioSourceErrorEvent && e.audioSourceId === this.privAudioSourceId) {\r\n            if (!this.privMicMetric) {\r\n                this.privMicMetric = {\r\n                    End: e.eventTime,\r\n                    Error: e.error,\r\n                    Name: \"Microphone\",\r\n                    Start: this.privMicStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeErrorEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            if (!this.privMicMetric) {\r\n                this.privMicMetric = {\r\n                    End: e.eventTime,\r\n                    Error: e.error,\r\n                    Name: \"Microphone\",\r\n                    Start: this.privMicStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeDetachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            if (!this.privMicMetric) {\r\n                this.privMicMetric = {\r\n                    End: e.eventTime,\r\n                    Name: \"Microphone\",\r\n                    Start: this.privMicStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof ConnectingToServiceEvent && e.requestId === this.privRequestId) {\r\n            this.privConnectionId = e.sessionId;\r\n        }\r\n\r\n        if (e instanceof ConnectionStartEvent && e.connectionId === this.privConnectionId) {\r\n            this.privConnectionStartTime = e.eventTime;\r\n        }\r\n\r\n        if (e instanceof ConnectionEstablishedEvent && e.connectionId === this.privConnectionId) {\r\n            if (!this.privConnectionEstablishMetric) {\r\n                this.privConnectionEstablishMetric = {\r\n                    End: e.eventTime,\r\n                    Id: this.privConnectionId,\r\n                    Name: \"Connection\",\r\n                    Start: this.privConnectionStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof ConnectionEstablishErrorEvent && e.connectionId === this.privConnectionId) {\r\n            if (!this.privConnectionEstablishMetric) {\r\n                this.privConnectionEstablishMetric = {\r\n                    End: e.eventTime,\r\n                    Error: this.getConnectionError(e.statusCode),\r\n                    Id: this.privConnectionId,\r\n                    Name: \"Connection\",\r\n                    Start: this.privConnectionStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof ConnectionMessageReceivedEvent && e.connectionId === this.privConnectionId) {\r\n            if (e.message && e.message.headers && e.message.headers.path) {\r\n                if (!this.privReceivedMessages[e.message.headers.path]) {\r\n                    this.privReceivedMessages[e.message.headers.path] = new Array<string>();\r\n                }\r\n\r\n                this.privReceivedMessages[e.message.headers.path].push(e.networkReceivedTime);\r\n            }\r\n        }\r\n    }\r\n\r\n    public getTelemetry = (): string => {\r\n        const metrics = new Array<IMetric>();\r\n\r\n        if (this.privListeningTriggerMetric) {\r\n            metrics.push(this.privListeningTriggerMetric);\r\n        }\r\n\r\n        if (this.privMicMetric) {\r\n            metrics.push(this.privMicMetric);\r\n        }\r\n\r\n        if (this.privConnectionEstablishMetric) {\r\n            metrics.push(this.privConnectionEstablishMetric);\r\n        }\r\n\r\n        if (this.privPhraseLatencies.length > 0) {\r\n            metrics.push({\r\n                PhraseLatencyMs: this.privPhraseLatencies,\r\n            });\r\n        }\r\n\r\n        if (this.privHypothesisLatencies.length > 0) {\r\n            metrics.push({\r\n                FirstHypothesisLatencyMs: this.privHypothesisLatencies,\r\n            });\r\n        }\r\n\r\n        const telemetry: ITelemetry = {\r\n            Metrics: metrics,\r\n            ReceivedMessages: this.privReceivedMessages,\r\n        };\r\n\r\n        const json = JSON.stringify(telemetry);\r\n\r\n        // We dont want to send the same telemetry again. So clean those out.\r\n        this.privReceivedMessages = {};\r\n        this.privListeningTriggerMetric = null;\r\n        this.privMicMetric = null;\r\n        this.privConnectionEstablishMetric = null;\r\n        this.privPhraseLatencies = [];\r\n        this.privHypothesisLatencies = [];\r\n        return json;\r\n    }\r\n\r\n    // Determines if there are any telemetry events to send to the service.\r\n    public get hasTelemetry(): boolean {\r\n        return (Object.keys(this.privReceivedMessages).length !== 0 ||\r\n            this.privListeningTriggerMetric !== null ||\r\n            this.privMicMetric !== null ||\r\n            this.privConnectionEstablishMetric !== null ||\r\n            this.privPhraseLatencies.length !== 0 ||\r\n            this.privHypothesisLatencies.length !== 0);\r\n    }\r\n\r\n    public dispose = (): void => {\r\n        this.privIsDisposed = true;\r\n    }\r\n\r\n    private getConnectionError = (statusCode: number): string => {\r\n        /*\r\n        -- Websocket status codes --\r\n        NormalClosure = 1000,\r\n        EndpointUnavailable = 1001,\r\n        ProtocolError = 1002,\r\n        InvalidMessageType = 1003,\r\n        Empty = 1005,\r\n        InvalidPayloadData = 1007,\r\n        PolicyViolation = 1008,\r\n        MessageTooBig = 1009,\r\n        MandatoryExtension = 1010,\r\n        InternalServerError = 1011\r\n        */\r\n\r\n        switch (statusCode) {\r\n            case 400:\r\n            case 1002:\r\n            case 1003:\r\n            case 1005:\r\n            case 1007:\r\n            case 1008:\r\n            case 1009: return \"BadRequest\";\r\n            case 401: return \"Unauthorized\";\r\n            case 403: return \"Forbidden\";\r\n            case 503:\r\n            case 1001: return \"ServerUnavailable\";\r\n            case 500:\r\n            case 1011: return \"ServerError\";\r\n            case 408:\r\n            case 504: return \"Timeout\";\r\n            default: return \"statuscode:\" + statusCode.toString();\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ReplayableAudioNode } from \"../common.browser/Exports\";\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    IDetachable,\r\n    IEventSource,\r\n    PlatformEvent\r\n} from \"../common/Exports\";\r\nimport {\r\n    ConnectingToServiceEvent,\r\n    ListeningStartedEvent,\r\n    RecognitionStartedEvent,\r\n    RecognitionTriggeredEvent,\r\n    SpeechRecognitionEvent,\r\n} from \"./RecognitionEvents\";\r\nimport { ServiceTelemetryListener } from \"./ServiceTelemetryListener.Internal\";\r\n\r\nexport class RequestSession {\r\n    private privIsDisposed: boolean = false;\r\n    private privServiceTelemetryListener: ServiceTelemetryListener;\r\n    private privDetachables: IDetachable[] = new Array<IDetachable>();\r\n    private privRequestId: string;\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAudioNode: ReplayableAudioNode;\r\n    private privAuthFetchEventId: string;\r\n    private privIsAudioNodeDetached: boolean = false;\r\n    private privIsRecognizing: boolean = false;\r\n    private privIsSpeechEnded: boolean = false;\r\n    private privTurnStartAudioOffset: number = 0;\r\n    private privLastRecoOffset: number = 0;\r\n    private privHypothesisReceived: boolean = false;\r\n    private privBytesSent: number = 0;\r\n    private privRecogNumber: number = 0;\r\n    private privSessionId: string;\r\n    private privTurnDeferral: Deferred<void>;\r\n    private privInTurn: boolean = false;\r\n\r\n    constructor(audioSourceId: string) {\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privAudioNodeId = createNoDashGuid();\r\n        this.privTurnDeferral = new Deferred<void>();\r\n\r\n        // We're not in a turn, so resolve.\r\n        this.privTurnDeferral.resolve();\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get turnCompletionPromise(): Promise<void> {\r\n        return this.privTurnDeferral.promise;\r\n    }\r\n\r\n    public get isSpeechEnded(): boolean {\r\n        return this.privIsSpeechEnded;\r\n    }\r\n\r\n    public get isRecognizing(): boolean {\r\n        return this.privIsRecognizing;\r\n    }\r\n\r\n    public get currentTurnAudioOffset(): number {\r\n        return this.privTurnStartAudioOffset;\r\n    }\r\n\r\n    public get recogNumber(): number {\r\n        return this.privRecogNumber;\r\n    }\r\n\r\n    // The number of bytes sent for the current connection.\r\n    // Counter is reset to 0 each time a connection is established.\r\n    public get bytesSent(): number {\r\n        return this.privBytesSent;\r\n    }\r\n    public listenForServiceTelemetry(eventSource: IEventSource<PlatformEvent>): void {\r\n        if (!!this.privServiceTelemetryListener) {\r\n            this.privDetachables.push(eventSource.attachListener(this.privServiceTelemetryListener));\r\n        }\r\n    }\r\n\r\n    public startNewRecognition(): void {\r\n        this.privIsSpeechEnded = false;\r\n        this.privIsRecognizing = true;\r\n        this.privTurnStartAudioOffset = 0;\r\n        this.privLastRecoOffset = 0;\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privRecogNumber++;\r\n        this.privServiceTelemetryListener = new ServiceTelemetryListener(this.privRequestId, this.privAudioSourceId, this.privAudioNodeId);\r\n        this.onEvent(new RecognitionTriggeredEvent(this.requestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\r\n    }\r\n\r\n    public async onAudioSourceAttachCompleted(audioNode: ReplayableAudioNode, isError: boolean, error?: string): Promise<void> {\r\n        this.privAudioNode = audioNode;\r\n        this.privIsAudioNodeDetached = false;\r\n\r\n        if (isError) {\r\n            await this.onComplete();\r\n        } else {\r\n            this.onEvent(new ListeningStartedEvent(this.privRequestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\r\n        }\r\n    }\r\n\r\n    public onPreConnectionStart = (authFetchEventId: string, connectionId: string): void => {\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.privSessionId = connectionId;\r\n        this.onEvent(new ConnectingToServiceEvent(this.privRequestId, this.privAuthFetchEventId, this.privSessionId));\r\n    }\r\n\r\n    public async onAuthCompleted(isError: boolean, error?: string): Promise<void> {\r\n        if (isError) {\r\n            await this.onComplete();\r\n        }\r\n    }\r\n\r\n    public async onConnectionEstablishCompleted(statusCode: number, reason?: string): Promise<void> {\r\n        if (statusCode === 200) {\r\n            this.onEvent(new RecognitionStartedEvent(this.requestId, this.privAudioSourceId, this.privAudioNodeId, this.privAuthFetchEventId, this.privSessionId));\r\n            if (!!this.privAudioNode) {\r\n                this.privAudioNode.replay();\r\n            }\r\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\r\n            this.privBytesSent = 0;\r\n            return;\r\n        } else if (statusCode === 403) {\r\n            await this.onComplete();\r\n        }\r\n    }\r\n\r\n    public async onServiceTurnEndResponse(continuousRecognition: boolean): Promise<void> {\r\n        this.privTurnDeferral.resolve();\r\n\r\n        if (!continuousRecognition || this.isSpeechEnded) {\r\n            await this.onComplete();\r\n            this.privInTurn = false;\r\n        } else {\r\n            // Start a new request set.\r\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\r\n            this.privRequestId = createNoDashGuid();\r\n            this.privAudioNode.replay();\r\n        }\r\n    }\r\n\r\n    public onServiceTurnStartResponse = (): void => {\r\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\r\n            // What? How are we starting a turn with another not done?\r\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\r\n        }\r\n\r\n        this.privInTurn = true;\r\n        this.privTurnDeferral = new Deferred<void>();\r\n    }\r\n\r\n    public onHypothesis(offset: number): void {\r\n        if (!this.privHypothesisReceived) {\r\n            this.privHypothesisReceived = true;\r\n            this.privServiceTelemetryListener.hypothesisReceived(this.privAudioNode.findTimeAtOffset(offset));\r\n        }\r\n    }\r\n\r\n    public onPhraseRecognized(offset: number): void {\r\n        this.privServiceTelemetryListener.phraseReceived(this.privAudioNode.findTimeAtOffset(offset));\r\n        this.onServiceRecognized(offset);\r\n    }\r\n\r\n    public onServiceRecognized(offset: number): void {\r\n        this.privLastRecoOffset = offset;\r\n        this.privHypothesisReceived = false;\r\n        this.privAudioNode.shrinkBuffers(offset);\r\n    }\r\n\r\n    public onAudioSent(bytesSent: number): void {\r\n        this.privBytesSent += bytesSent;\r\n    }\r\n\r\n    public async dispose(error?: string): Promise<void> {\r\n        if (!this.privIsDisposed) {\r\n            // we should have completed by now. If we did not its an unknown error.\r\n            this.privIsDisposed = true;\r\n            for (const detachable of this.privDetachables) {\r\n                await detachable.detach();\r\n            }\r\n\r\n            this.privServiceTelemetryListener.dispose();\r\n            this.privIsRecognizing = false;\r\n        }\r\n    }\r\n\r\n    public getTelemetry = (): string => {\r\n        if (this.privServiceTelemetryListener.hasTelemetry) {\r\n            return this.privServiceTelemetryListener.getTelemetry();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public async onStopRecognizing(): Promise<void> {\r\n        await this.onComplete();\r\n    }\r\n\r\n    // Should be called with the audioNode for this session has indicated that it is out of speech.\r\n    public onSpeechEnded(): void {\r\n        this.privIsSpeechEnded = true;\r\n    }\r\n\r\n    protected onEvent = (event: SpeechRecognitionEvent): void => {\r\n        if (!!this.privServiceTelemetryListener) {\r\n            this.privServiceTelemetryListener.onEvent(event);\r\n        }\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private async onComplete(): Promise<void> {\r\n        if (!!this.privIsRecognizing) {\r\n            this.privIsRecognizing = false;\r\n            await this.detachAudioNode();\r\n        }\r\n    }\r\n\r\n    private async detachAudioNode(): Promise<void> {\r\n        if (!this.privIsAudioNodeDetached) {\r\n            this.privIsAudioNodeDetached = true;\r\n            if (this.privAudioNode) {\r\n                await this.privAudioNode.detach();\r\n            }\r\n        }\r\n    }\r\n}\r\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}\n\nmodule.exports = _createSuper;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Define speech synthesis audio output formats.\r\n * @enum SpeechSynthesisOutputFormat\r\n * Updated in version 1.16.0\r\n */\r\nexport enum SpeechSynthesisOutputFormat {\r\n    /**\r\n     * raw-8khz-8bit-mono-mulaw\r\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw,\r\n     */\r\n    Raw8Khz8BitMonoMULaw,\r\n\r\n    /**\r\n     * riff-16khz-16kbps-mono-siren\r\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren\r\n     */\r\n    Riff16Khz16KbpsMonoSiren ,\r\n\r\n    /**\r\n     * audio-16khz-16kbps-mono-siren\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren\r\n     */\r\n    Audio16Khz16KbpsMonoSiren,\r\n\r\n    /**\r\n     * audio-16khz-32kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3\r\n     */\r\n    Audio16Khz32KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-16khz-128kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3\r\n     */\r\n    Audio16Khz128KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-16khz-64kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3\r\n     */\r\n    Audio16Khz64KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-24khz-48kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3\r\n     */\r\n    Audio24Khz48KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-24khz-96kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3\r\n     */\r\n    Audio24Khz96KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-24khz-160kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3\r\n     */\r\n    Audio24Khz160KBitRateMonoMp3,\r\n\r\n    /**\r\n     * raw-16khz-16bit-mono-truesilk\r\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk\r\n     */\r\n    Raw16Khz16BitMonoTrueSilk,\r\n\r\n    /**\r\n     * riff-16khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm\r\n     */\r\n    Riff16Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-8khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm\r\n     */\r\n    Riff8Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-24khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm\r\n     */\r\n    Riff24Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-8khz-8bit-mono-mulaw\r\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw\r\n     */\r\n    Riff8Khz8BitMonoMULaw,\r\n\r\n    /**\r\n     * raw-16khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm\r\n     */\r\n    Raw16Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * raw-24khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm\r\n     */\r\n    Raw24Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * raw-8khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm\r\n     */\r\n    Raw8Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * ogg-16khz-16bit-mono-opus\r\n     * @member SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus\r\n     */\r\n    Ogg16Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * ogg-24khz-16bit-mono-opus\r\n     * @member SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus\r\n     */\r\n    Ogg24Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * raw-48khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm\r\n     */\r\n    Raw48Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-48khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm\r\n     */\r\n\r\n    Riff48Khz16BitMonoPcm,\r\n    /**\r\n     * audio-48khz-96kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3\r\n     */\r\n    Audio48Khz96KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-48khz-192kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3\r\n     */\r\n    Audio48Khz192KBitRateMonoMp3,\r\n\r\n    /**\r\n     * ogg-48khz-16bit-mono-opus\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus\r\n     */\r\n    Ogg48Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * webm-16khz-16bit-mono-opus\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus\r\n     */\r\n    Webm16Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * webm-24khz-16bit-mono-opus\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus\r\n     */\r\n    Webm24Khz16BitMonoOpus,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { ArgumentNullError } from \"./Error\";\r\n\r\nexport enum PromiseState {\r\n    None,\r\n    Resolved,\r\n    Rejected,\r\n}\r\n\r\nexport interface IDeferred<T> {\r\n    readonly promise: Promise<T>;\r\n\r\n    resolve(result: T): IDeferred<T>;\r\n\r\n    reject(error: string): IDeferred<T>;\r\n}\r\n\r\nexport class PromiseResult<T> {\r\n    protected privIsCompleted: boolean;\r\n    protected privIsError: boolean;\r\n    protected privError: string;\r\n    protected privResult: T;\r\n\r\n    public constructor(promiseResultEventSource: PromiseResultEventSource<T>) {\r\n        promiseResultEventSource.on((result: T) => {\r\n            if (!this.privIsCompleted) {\r\n                this.privIsCompleted = true;\r\n                this.privIsError = false;\r\n                this.privResult = result;\r\n            }\r\n        }, (error: string) => {\r\n            if (!this.privIsCompleted) {\r\n                this.privIsCompleted = true;\r\n                this.privIsError = true;\r\n                this.privError = error;\r\n            }\r\n        });\r\n    }\r\n\r\n    public get isCompleted(): boolean {\r\n        return this.privIsCompleted;\r\n    }\r\n\r\n    public get isError(): boolean {\r\n        return this.privIsError;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n\r\n    public get result(): T {\r\n        return this.privResult;\r\n    }\r\n\r\n    public throwIfError = (): void => {\r\n        if (this.isError) {\r\n            throw this.error;\r\n        }\r\n    }\r\n}\r\n\r\nexport class PromiseResultEventSource<T>  {\r\n\r\n    private privOnSetResult: (result: T) => void;\r\n    private privOnSetError: (error: string) => void;\r\n\r\n    public setResult = (result: T): void => {\r\n        this.privOnSetResult(result);\r\n    }\r\n\r\n    public setError = (error: string): void => {\r\n        this.privOnSetError(error);\r\n    }\r\n\r\n    public on = (onSetResult: (result: T) => void, onSetError: (error: string) => void): void => {\r\n        this.privOnSetResult = onSetResult;\r\n        this.privOnSetError = onSetError;\r\n    }\r\n}\r\n\r\nexport class Deferred<T> implements IDeferred<T> {\r\n    private privPromise: Promise<T>;\r\n    private privResolve: (value?: T | PromiseLike<T>) => void;\r\n    private privReject: (reason?: any) => void;\r\n\r\n    public constructor() {\r\n        this.privPromise = new Promise<T>((resolve: (value: T) => void, reject: (reason: any) => void) => {\r\n            this.privResolve = resolve;\r\n            this.privReject = reject;\r\n        });\r\n    }\r\n\r\n    public get promise(): Promise<T> {\r\n        return this.privPromise;\r\n    }\r\n\r\n    public resolve = (result: T | Promise<T>): Deferred<T> => {\r\n        this.privResolve(result);\r\n        return this;\r\n    }\r\n\r\n    public reject = (error: string): Deferred<T> => {\r\n        this.privReject(error);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class Sink<T> {\r\n    private privState: PromiseState = PromiseState.None;\r\n    private privPromiseResult: PromiseResult<T> = null;\r\n    private privPromiseResultEvents: PromiseResultEventSource<T> = null;\r\n\r\n    private privSuccessHandlers: ((result: T) => void)[] = [];\r\n    private privErrorHandlers: ((e: string) => void)[] = [];\r\n\r\n    public constructor() {\r\n        this.privPromiseResultEvents = new PromiseResultEventSource();\r\n        this.privPromiseResult = new PromiseResult(this.privPromiseResultEvents);\r\n    }\r\n\r\n    public get state(): PromiseState {\r\n        return this.privState;\r\n    }\r\n\r\n    public get result(): PromiseResult<T> {\r\n        return this.privPromiseResult;\r\n    }\r\n\r\n    public resolve = (result: T): void => {\r\n        if (this.privState !== PromiseState.None) {\r\n            throw new Error(\"'Cannot resolve a completed promise'\");\r\n        }\r\n\r\n        this.privState = PromiseState.Resolved;\r\n        this.privPromiseResultEvents.setResult(result);\r\n\r\n        for (let i = 0; i < this.privSuccessHandlers.length; i++) {\r\n            this.executeSuccessCallback(result, this.privSuccessHandlers[i], this.privErrorHandlers[i]);\r\n        }\r\n\r\n        this.detachHandlers();\r\n    }\r\n\r\n    public reject = (error: string): void => {\r\n        if (this.privState !== PromiseState.None) {\r\n            throw new Error(\"'Cannot reject a completed promise'\");\r\n        }\r\n\r\n        this.privState = PromiseState.Rejected;\r\n        this.privPromiseResultEvents.setError(error);\r\n\r\n        for (const errorHandler of this.privErrorHandlers) {\r\n            this.executeErrorCallback(error, errorHandler);\r\n        }\r\n\r\n        this.detachHandlers();\r\n    }\r\n\r\n    public on = (\r\n        successCallback: (result: T) => void,\r\n        errorCallback: (error: string) => void): void => {\r\n\r\n        if (successCallback == null) {\r\n            successCallback = (r: T) => { return; };\r\n        }\r\n\r\n        if (this.privState === PromiseState.None) {\r\n            this.privSuccessHandlers.push(successCallback);\r\n            this.privErrorHandlers.push(errorCallback);\r\n        } else {\r\n            if (this.privState === PromiseState.Resolved) {\r\n                this.executeSuccessCallback(this.privPromiseResult.result, successCallback, errorCallback);\r\n            } else if (this.privState === PromiseState.Rejected) {\r\n                this.executeErrorCallback(this.privPromiseResult.error, errorCallback);\r\n            }\r\n\r\n            this.detachHandlers();\r\n        }\r\n    }\r\n\r\n    private executeSuccessCallback = (result: T, successCallback: (result: T) => void, errorCallback: (error: string) => void): void => {\r\n        try {\r\n            successCallback(result);\r\n        } catch (e) {\r\n            this.executeErrorCallback(`'Unhandled callback error: ${e}'`, errorCallback);\r\n        }\r\n    }\r\n\r\n    private executeErrorCallback = (error: string, errorCallback: (error: string) => void): void => {\r\n        if (errorCallback) {\r\n            try {\r\n                errorCallback(error);\r\n            } catch (e) {\r\n                throw new Error(`'Unhandled callback error: ${e}. InnerError: ${error}'`);\r\n            }\r\n        } else {\r\n            throw new Error(`'Unhandled error: ${error}'`);\r\n        }\r\n    }\r\n\r\n    private detachHandlers = (): void => {\r\n        this.privErrorHandlers = [];\r\n        this.privSuccessHandlers = [];\r\n    }\r\n}\r\n\r\nexport function marshalPromiseToCallbacks<T>(\r\n    promise: Promise<T>,\r\n    cb?: (value: T) => void,\r\n    err?: (error: string) => void): void {\r\n    promise.then((val: T): void => {\r\n        try {\r\n            if (!!cb) {\r\n                cb(val);\r\n            }\r\n        } catch (error) {\r\n            if (!!err) {\r\n                try {\r\n                    if (error instanceof Error) {\r\n                        const typedError: Error = error as Error;\r\n                        err(typedError.name + \": \" + typedError.message);\r\n                    } else {\r\n                        err(error);\r\n                    }\r\n                    /* tslint:disable:no-empty */\r\n                } catch (error) { }\r\n            }\r\n        }\r\n    }, (error: any): void => {\r\n        if (!!err) {\r\n            try {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error);\r\n                }\r\n                /* tslint:disable:no-empty */\r\n            } catch (error) { }\r\n        }\r\n    });\r\n}\r\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ObjectDisposedError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { IDetachable } from \"./IDetachable\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\nimport { IEventListener, IEventSource } from \"./IEventSource\";\r\nimport { PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class EventSource<TEvent extends PlatformEvent> implements IEventSource<TEvent> {\r\n    private privEventListeners: IStringDictionary<(event: TEvent) => void> = {};\r\n    private privMetadata: IStringDictionary<string>;\r\n    private privIsDisposed: boolean = false;\r\n\r\n    constructor(metadata?: IStringDictionary<string>) {\r\n        this.privMetadata = metadata;\r\n    }\r\n\r\n    public onEvent = (event: TEvent): void => {\r\n        if (this.isDisposed()) {\r\n            throw (new ObjectDisposedError(\"EventSource\"));\r\n        }\r\n\r\n        if (this.metadata) {\r\n            for (const paramName in this.metadata) {\r\n                if (paramName) {\r\n                    if (event.metadata) {\r\n                        if (!event.metadata[paramName]) {\r\n                            event.metadata[paramName] = this.metadata[paramName];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const eventId in this.privEventListeners) {\r\n            if (eventId && this.privEventListeners[eventId]) {\r\n                this.privEventListeners[eventId](event);\r\n            }\r\n        }\r\n    }\r\n\r\n    public attach = (onEventCallback: (event: TEvent) => void): IDetachable => {\r\n        const id = createNoDashGuid();\r\n        this.privEventListeners[id] = onEventCallback;\r\n        return {\r\n            detach: () => {\r\n                delete this.privEventListeners[id];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public attachListener = (listener: IEventListener<TEvent>): IDetachable => {\r\n        return this.attach(listener.onEvent);\r\n    }\r\n\r\n    public isDisposed = (): boolean => {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public dispose = (): void => {\r\n        this.privEventListeners = null;\r\n        this.privIsDisposed = true;\r\n    }\r\n\r\n    public get metadata(): IStringDictionary<string> {\r\n        return this.privMetadata;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport {\r\n    connectivity,\r\n    ISpeechConfigAudioDevice,\r\n    type,\r\n} from \"../../common.speech/Exports\";\r\nimport {\r\n    AudioSourceEvent,\r\n    AudioSourceInitializingEvent,\r\n    AudioSourceReadyEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    ChunkedArrayBufferStream,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IStreamChunk,\r\n    Stream,\r\n} from \"../../common/Exports\";\r\nimport { createNoDashGuid } from \"../../common/Guid\";\r\nimport { AudioStreamFormat, PullAudioInputStreamCallback } from \"../Exports\";\r\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat\";\r\n\r\n/**\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @class AudioInputStream\r\n */\r\nexport abstract class AudioInputStream {\r\n\r\n    /**\r\n     * Creates and initializes an instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() { }\r\n\r\n    /**\r\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\r\n     * @member AudioInputStream.createPushStream\r\n     * @function\r\n     * @public\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\r\n     *        written to the push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PushAudioInputStream} The audio input stream being created.\r\n     */\r\n    public static createPushStream(format?: AudioStreamFormat): PushAudioInputStream {\r\n        return PushAudioInputStream.create(format);\r\n    }\r\n\r\n    /**\r\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for read()\r\n     * and close() methods.\r\n     * @member AudioInputStream.createPullStream\r\n     * @function\r\n     * @public\r\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object, derived from\r\n     *        PullAudioInputStreamCallback\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be returned from\r\n     *        the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PullAudioInputStream} The audio input stream being created.\r\n     */\r\n    public static createPullStream(callback: PullAudioInputStreamCallback, format?: AudioStreamFormat): PullAudioInputStream {\r\n        return PullAudioInputStream.create(callback, format);\r\n        // throw new Error(\"Oops\");\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioInputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio input stream used for custom audio input configurations.\r\n * @class PushAudioInputStream\r\n */\r\nexport abstract class PushAudioInputStream extends AudioInputStream {\r\n\r\n    /**\r\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\r\n     * @member PushAudioInputStream.create\r\n     * @function\r\n     * @public\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be written to the\r\n     *        push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PushAudioInputStream} The push audio input stream being created.\r\n     */\r\n    public static create(format?: AudioStreamFormat): PushAudioInputStream {\r\n        return new PushAudioInputStreamImpl(format);\r\n    }\r\n\r\n    /**\r\n     * Writes the audio data specified by making an internal copy of the data.\r\n     * @member PushAudioInputStream.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\r\n     */\r\n    public abstract write(dataBuffer: ArrayBuffer): void;\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PushAudioInputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio input stream used for custom audio input configurations.\r\n * @private\r\n * @class PushAudioInputStreamImpl\r\n */\r\nexport class PushAudioInputStreamImpl extends PushAudioInputStream implements IAudioSource {\r\n\r\n    private privFormat: AudioStreamFormatImpl;\r\n    private privId: string;\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n    private privStream: Stream<ArrayBuffer>;\r\n\r\n    /**\r\n     * Creates and initalizes an instance with the given values.\r\n     * @constructor\r\n     * @param {AudioStreamFormat} format - The audio stream format.\r\n     */\r\n    public constructor(format?: AudioStreamFormat) {\r\n        super();\r\n        if (format === undefined) {\r\n            this.privFormat = AudioStreamFormatImpl.getDefaultInputFormat();\r\n        } else {\r\n            this.privFormat = format as AudioStreamFormatImpl;\r\n        }\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privId = createNoDashGuid();\r\n        this.privStream = new ChunkedArrayBufferStream(this.privFormat.avgBytesPerSec / 10);\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return Promise.resolve(this.privFormat);\r\n    }\r\n\r\n    /**\r\n     * Writes the audio data specified by making an internal copy of the data.\r\n     * @member PushAudioInputStreamImpl.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\r\n     */\r\n    public write(dataBuffer: ArrayBuffer): void {\r\n        this.privStream.writeStreamChunk({\r\n            buffer: dataBuffer,\r\n            isEnd: false,\r\n            timeReceived: Date.now()\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PushAudioInputStreamImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        this.privStream.close();\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public get blob(): Promise<Blob | Buffer> {\r\n        return this.attach(\"id\").then<Blob | Buffer>((audioNode: IAudioStreamNode) => {\r\n            const data: ArrayBuffer[] = [];\r\n            let bufferData = Buffer.from(\"\");\r\n            const readCycle = (): Promise<Blob | Buffer> => {\r\n                return audioNode.read().then<Blob | Buffer>((audioStreamChunk: IStreamChunk<ArrayBuffer>) => {\r\n                    if (!audioStreamChunk || audioStreamChunk.isEnd) {\r\n                        if (typeof (XMLHttpRequest) !== \"undefined\" && typeof (Blob) !== \"undefined\") {\r\n                            return Promise.resolve(new Blob(data));\r\n                        } else {\r\n                            return Promise.resolve(Buffer.from(bufferData));\r\n                        }\r\n                    } else {\r\n                        if (typeof (Blob) !== \"undefined\") {\r\n                            data.push(audioStreamChunk.buffer);\r\n                        } else {\r\n                            bufferData = Buffer.concat([bufferData, this.toBuffer(audioStreamChunk.buffer)]);\r\n                        }\r\n                        return readCycle();\r\n                    }\r\n                });\r\n            };\r\n            return readCycle();\r\n        });\r\n    }\r\n\r\n    public turnOn(): Promise<void> {\r\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n        return;\r\n    }\r\n\r\n    public async attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        await this.turnOn();\r\n        const stream = this.privStream;\r\n        this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n        return {\r\n            detach: async () => {\r\n                stream.readEnded();\r\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                return this.turnOff();\r\n            },\r\n            id: () => {\r\n                return audioNodeId;\r\n            },\r\n            read: () => {\r\n                return stream.read();\r\n            },\r\n        };\r\n    }\r\n\r\n    public detach(audioNodeId: string): void {\r\n        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n    }\r\n\r\n    public turnOff(): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return Promise.resolve({\r\n            bitspersample: this.privFormat.bitsPerSample,\r\n            channelcount: this.privFormat.channels,\r\n            connectivity: connectivity.Unknown,\r\n            manufacturer: \"Speech SDK\",\r\n            model: \"PushStream\",\r\n            samplerate: this.privFormat.samplesPerSec,\r\n            type: type.Stream,\r\n        });\r\n    }\r\n\r\n    private onEvent = (event: AudioSourceEvent): void => {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private toBuffer(arrayBuffer: ArrayBuffer): Buffer {\r\n        const buf: Buffer = Buffer.alloc(arrayBuffer.byteLength);\r\n        const view: Uint8Array = new Uint8Array(arrayBuffer);\r\n        for (let i = 0; i < buf.length; ++i) {\r\n            buf[i] = view[i];\r\n        }\r\n        return buf;\r\n    }\r\n}\r\n\r\n/*\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @class PullAudioInputStream\r\n */\r\nexport abstract class PullAudioInputStream extends AudioInputStream {\r\n    /**\r\n     * Creates and initializes and instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() { super(); }\r\n\r\n    /**\r\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\r\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\r\n     * @member PullAudioInputStream.create\r\n     * @function\r\n     * @public\r\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\r\n     *        derived from PullAudioInputStreamCustomCallback\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\r\n     *        returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PullAudioInputStream} The push audio input stream being created.\r\n     */\r\n    public static create(callback: PullAudioInputStreamCallback, format?: AudioStreamFormat): PullAudioInputStream {\r\n        return new PullAudioInputStreamImpl(callback, format as AudioStreamFormatImpl);\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member PullAudioInputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n\r\n}\r\n\r\n/**\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @private\r\n * @class PullAudioInputStreamImpl\r\n */\r\nexport class PullAudioInputStreamImpl extends PullAudioInputStream implements IAudioSource {\r\n\r\n    private privCallback: PullAudioInputStreamCallback;\r\n    private privFormat: AudioStreamFormatImpl;\r\n    private privId: string;\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n    private privIsClosed: boolean;\r\n    private privBufferSize: number;\r\n\r\n    /**\r\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\r\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\r\n     * @constructor\r\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\r\n     *        derived from PullAudioInputStreamCustomCallback\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\r\n     *        returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     */\r\n    public constructor(callback: PullAudioInputStreamCallback, format?: AudioStreamFormatImpl) {\r\n        super();\r\n        if (undefined === format) {\r\n            this.privFormat = AudioStreamFormat.getDefaultInputFormat() as AudioStreamFormatImpl;\r\n        } else {\r\n            this.privFormat = format;\r\n        }\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privId = createNoDashGuid();\r\n        this.privCallback = callback;\r\n        this.privIsClosed = false;\r\n        this.privBufferSize = this.privFormat.avgBytesPerSec / 10;\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return Promise.resolve(this.privFormat);\r\n    }\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PullAudioInputStreamImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        this.privIsClosed = true;\r\n        this.privCallback.close();\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public get blob(): Promise<Blob | Buffer> {\r\n        return Promise.reject(\"Not implemented\");\r\n    }\r\n\r\n    public turnOn(): Promise<void> {\r\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n        return;\r\n    }\r\n\r\n    public async attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        await this.turnOn();\r\n        this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n        return {\r\n            detach: () => {\r\n                this.privCallback.close();\r\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                return this.turnOff();\r\n            },\r\n            id: () => {\r\n                return audioNodeId;\r\n            },\r\n            read: (): Promise<IStreamChunk<ArrayBuffer>> => {\r\n                let totalBytes: number = 0;\r\n                let transmitBuff: ArrayBuffer;\r\n                // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\r\n                while (totalBytes < this.privBufferSize) {\r\n                    // Sizing the read buffer to the delta between the perfect size and what's left means we won't ever get too much\r\n                    // data back.\r\n                    const readBuff: ArrayBuffer = new ArrayBuffer(this.privBufferSize - totalBytes);\r\n                    const pulledBytes: number = this.privCallback.read(readBuff);\r\n                    // If there is no return buffer yet defined, set the return buffer to the that was just populated.\r\n                    // This was, if we have enough data there's no copy penalty, but if we don't we have a buffer that's the\r\n                    // preferred size allocated.\r\n                    if (undefined === transmitBuff) {\r\n                        transmitBuff = readBuff;\r\n                    } else {\r\n                        // Not the first bite at the apple, so fill the return buffer with the data we got back.\r\n                        const intView: Int8Array = new Int8Array(transmitBuff);\r\n                        intView.set(new Int8Array(readBuff), totalBytes);\r\n                    }\r\n                    // If there are no bytes to read, just break out and be done.\r\n                    if (0 === pulledBytes) {\r\n                        break;\r\n                    }\r\n                    totalBytes += pulledBytes;\r\n                }\r\n                return Promise.resolve<IStreamChunk<ArrayBuffer>>({\r\n                    buffer: transmitBuff.slice(0, totalBytes),\r\n                    isEnd: this.privIsClosed || totalBytes === 0,\r\n                    timeReceived: Date.now(),\r\n                });\r\n            },\r\n        };\r\n    }\r\n\r\n    public detach(audioNodeId: string): void {\r\n        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n    }\r\n\r\n    public turnOff(): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return Promise.resolve({\r\n            bitspersample: this.privFormat.bitsPerSample,\r\n            channelcount: this.privFormat.channels,\r\n            connectivity: connectivity.Unknown,\r\n            manufacturer: \"Speech SDK\",\r\n            model: \"PullStream\",\r\n            samplerate: this.privFormat.samplesPerSec,\r\n            type: type.Stream,\r\n        });\r\n    }\r\n\r\n    private onEvent = (event: AudioSourceEvent): void => {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n}\r\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\n\r\nexport enum MessageType {\r\n    Text,\r\n    Binary,\r\n}\r\n\r\nexport class ConnectionMessage {\r\n\r\n    private privMessageType: MessageType;\r\n    private privHeaders: IStringDictionary<string>;\r\n    private privBody: any = null;\r\n    private privSize: number;\r\n\r\n    private privId: string;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        body: any,\r\n        headers?: IStringDictionary<string>,\r\n        id?: string) {\r\n\r\n        if (messageType === MessageType.Text && body && !(typeof (body) === \"string\")) {\r\n            throw new InvalidOperationError(\"Payload must be a string\");\r\n        }\r\n\r\n        if (messageType === MessageType.Binary && body && !(body instanceof ArrayBuffer)) {\r\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\r\n        }\r\n\r\n        this.privMessageType = messageType;\r\n        this.privBody = body;\r\n        this.privHeaders = headers ? headers : {};\r\n        this.privId = id ? id : createNoDashGuid();\r\n        switch (this.messageType) {\r\n            case MessageType.Binary:\r\n                this.privSize = this.binaryBody !== null ? this.binaryBody.byteLength : 0;\r\n                break;\r\n            case MessageType.Text:\r\n                this.privSize = this.textBody.length;\r\n        }\r\n    }\r\n\r\n    public get messageType(): MessageType {\r\n        return this.privMessageType;\r\n    }\r\n\r\n    public get headers(): IStringDictionary<string> {\r\n        return this.privHeaders;\r\n    }\r\n\r\n    public get body(): any {\r\n        return this.privBody;\r\n    }\r\n\r\n    public get textBody(): string {\r\n        if (this.privMessageType === MessageType.Binary) {\r\n            throw new InvalidOperationError(\"Not supported for binary message\");\r\n        }\r\n\r\n        return this.privBody as string;\r\n    }\r\n\r\n    public get binaryBody(): ArrayBuffer {\r\n        if (this.privMessageType === MessageType.Text) {\r\n            throw new InvalidOperationError(\"Not supported for text message\");\r\n        }\r\n\r\n        return this.privBody;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport * as http from \"http\";\r\nimport * as tls from \"tls\";\r\nimport * as parse from \"url-parse\";\r\nimport * as ocsp from \"../../external/ocsp/ocsp\";\r\nimport {\r\n    Events,\r\n    OCSPCacheEntryExpiredEvent,\r\n    OCSPCacheEntryNeedsRefreshEvent,\r\n    OCSPCacheFetchErrorEvent,\r\n    OCSPCacheHitEvent,\r\n    OCSPCacheMissEvent,\r\n    OCSPCacheUpdatehCompleteEvent,\r\n    OCSPCacheUpdateNeededEvent,\r\n    OCSPDiskCacheHitEvent,\r\n    OCSPDiskCacheStoreEvent,\r\n    OCSPEvent,\r\n    OCSPMemoryCacheHitEvent,\r\n    OCSPMemoryCacheStoreEvent,\r\n    OCSPResponseRetrievedEvent,\r\n    OCSPStapleReceivedEvent,\r\n    OCSPVerificationFailedEvent,\r\n} from \"../common/Exports\";\r\nimport { IStringDictionary } from \"../common/IDictionary\";\r\nimport { ProxyInfo } from \"./ProxyInfo\";\r\n\r\nimport Agent from \"agent-base\";\r\n\r\n// @ts-ignore\r\nimport Cache from \"async-disk-cache\";\r\nimport HttpsProxyAgent from \"https-proxy-agent\";\r\nimport * as net from \"net\";\r\nimport { OCSPCacheUpdateErrorEvent } from \"../common/OCSPEvents\";\r\n\r\nexport class CertCheckAgent {\r\n\r\n    // Test hook to enable forcing expiration / refresh to happen.\r\n    public static testTimeOffset: number = 0;\r\n\r\n    // Test hook to disable stapling for cache testing.\r\n    public static forceDisableOCSPStapling: boolean = false;\r\n\r\n    // An in memory cache for recived responses.\r\n    private static privMemCache: IStringDictionary<Buffer> = {};\r\n\r\n    // The on disk cache.\r\n    private static privDiskCache: Cache;\r\n\r\n    private privProxyInfo: ProxyInfo;\r\n\r\n    constructor(proxyInfo?: ProxyInfo) {\r\n        if (!!proxyInfo) {\r\n            this.privProxyInfo = proxyInfo;\r\n        }\r\n\r\n        // Initialize this here to allow tests to set the env variable before the cache is constructed.\r\n        if (!CertCheckAgent.privDiskCache) {\r\n            CertCheckAgent.privDiskCache = new Cache(\"microsoft-cognitiveservices-speech-sdk-cache\", { supportBuffer: true, location: (typeof process !== \"undefined\" && !!process.env.SPEECH_OCSP_CACHE_ROOT) ? process.env.SPEECH_OCSP_CACHE_ROOT : undefined });\r\n        }\r\n    }\r\n\r\n    // Test hook to force the disk cache to be recreated.\r\n    public static forceReinitDiskCache(): void {\r\n        CertCheckAgent.privDiskCache = undefined;\r\n        CertCheckAgent.privMemCache = {};\r\n    }\r\n\r\n    public GetAgent(disableStapling?: boolean): http.Agent {\r\n        const agent: any = new Agent.Agent(this.CreateConnection);\r\n\r\n        if (this.privProxyInfo !== undefined &&\r\n            this.privProxyInfo.HostName !== undefined &&\r\n            this.privProxyInfo.Port > 0) {\r\n            const proxyName: string = \"privProxyInfo\";\r\n            agent[proxyName] = this.privProxyInfo;\r\n        }\r\n\r\n        return agent;\r\n    }\r\n\r\n    private static GetProxyAgent(proxyInfo: ProxyInfo): HttpsProxyAgent {\r\n        const httpProxyOptions: HttpsProxyAgent.HttpsProxyAgentOptions = {\r\n            host: proxyInfo.HostName,\r\n            port: proxyInfo.Port,\r\n        };\r\n\r\n        if (!!proxyInfo.UserName) {\r\n            httpProxyOptions.headers = {\r\n                \"Proxy-Authentication\": \"Basic \" + new Buffer(proxyInfo.UserName + \":\" + (proxyInfo.Password === undefined) ? \"\" : proxyInfo.Password).toString(\"base64\"),\r\n            };\r\n        } else {\r\n            httpProxyOptions.headers = {};\r\n        }\r\n\r\n        httpProxyOptions.headers.requestOCSP = \"true\";\r\n\r\n        const httpProxyAgent: HttpsProxyAgent = new HttpsProxyAgent(httpProxyOptions);\r\n        return httpProxyAgent;\r\n    }\r\n\r\n    private static async OCSPCheck(socketPromise: Promise<net.Socket>, proxyInfo: ProxyInfo): Promise<net.Socket> {\r\n        let ocspRequest: ocsp.Request;\r\n        let stapling: Buffer;\r\n        let resolved: boolean = false;\r\n\r\n        const socket: net.Socket = await socketPromise;\r\n        socket.cork();\r\n\r\n        const tlsSocket: tls.TLSSocket = socket as tls.TLSSocket;\r\n\r\n        return new Promise<net.Socket>((resolve: (value: net.Socket) => void, reject: (error: string | Error) => void) => {\r\n            socket.on(\"OCSPResponse\", (data: Buffer): void => {\r\n                if (!!data) {\r\n                    this.onEvent(new OCSPStapleReceivedEvent());\r\n                    stapling = data;\r\n                }\r\n            });\r\n\r\n            socket.on(\"error\", (error: Error) => {\r\n                if (!resolved) {\r\n                    resolved = true;\r\n                    socket.destroy();\r\n                    reject(error);\r\n                }\r\n            });\r\n\r\n            tlsSocket.on(\"secure\", async () => {\r\n                const peer: tls.DetailedPeerCertificate = tlsSocket.getPeerCertificate(true);\r\n                try {\r\n                    const issuer: tls.DetailedPeerCertificate = await this.GetIssuer(peer);\r\n\r\n                    // We always need a request to verify the response.\r\n                    ocspRequest = ocsp.request.generate(peer.raw, issuer.raw);\r\n\r\n                    // Do we have a result for this certificate in our memory cache?\r\n                    const sig: string = ocspRequest.id.toString(\"hex\");\r\n\r\n                    // Stapled response trumps cached response.\r\n                    if (!stapling) {\r\n                        const cacheEntry: Buffer = await CertCheckAgent.GetResponseFromCache(sig, ocspRequest, proxyInfo);\r\n                        stapling = cacheEntry;\r\n                    }\r\n\r\n                    await this.VerifyOCSPResponse(stapling, ocspRequest, proxyInfo);\r\n\r\n                    socket.uncork();\r\n                    resolved = true;\r\n                    resolve(socket);\r\n                } catch (e) {\r\n                    socket.destroy();\r\n                    resolved = true;\r\n                    reject(e);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private static GetIssuer(peer: tls.DetailedPeerCertificate): Promise<tls.DetailedPeerCertificate> {\r\n        if (peer.issuerCertificate) {\r\n            return Promise.resolve(peer.issuerCertificate);\r\n        }\r\n\r\n        return new Promise<tls.DetailedPeerCertificate>((resolve: (value: tls.DetailedPeerCertificate) => void, reject: (reason: string) => void) => {\r\n            const ocspAgent: ocsp.Agent = new ocsp.Agent({});\r\n            ocspAgent.fetchIssuer(peer, null, (error: string, value: tls.DetailedPeerCertificate): void => {\r\n                if (!!error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                resolve(value);\r\n            });\r\n        });\r\n    }\r\n\r\n    private static async GetResponseFromCache(signature: string, ocspRequest: ocsp.Request, proxyInfo: ProxyInfo): Promise<Buffer> {\r\n        let cachedResponse: Buffer = CertCheckAgent.privMemCache[signature];\r\n\r\n        if (!!cachedResponse) {\r\n            this.onEvent(new OCSPMemoryCacheHitEvent(signature));\r\n        }\r\n\r\n        // Do we have a result for this certificate on disk in %TMP%?\r\n        if (!cachedResponse) {\r\n            try {\r\n                const diskCacheResponse: any = await CertCheckAgent.privDiskCache.get(signature);\r\n                if (!!diskCacheResponse.isCached) {\r\n                    CertCheckAgent.onEvent(new OCSPDiskCacheHitEvent(signature));\r\n                    CertCheckAgent.StoreMemoryCacheEntry(signature, diskCacheResponse.value);\r\n                    cachedResponse = diskCacheResponse.value;\r\n                }\r\n            } catch (error) {\r\n                cachedResponse = null;\r\n            }\r\n        }\r\n\r\n        if (!cachedResponse) {\r\n            return cachedResponse;\r\n        }\r\n\r\n        try {\r\n            const cachedOcspResponse: ocsp.Response = ocsp.utils.parseResponse(cachedResponse);\r\n            const tbsData = cachedOcspResponse.value.tbsResponseData;\r\n            if (tbsData.responses.length < 1) {\r\n                this.onEvent(new OCSPCacheFetchErrorEvent(signature, \"Not enough data in cached response\"));\r\n                return;\r\n            }\r\n\r\n            const cachedStartTime: number = tbsData.responses[0].thisUpdate;\r\n            const cachedNextTime: number = tbsData.responses[0].nextUpdate;\r\n\r\n            if (cachedNextTime < (Date.now() + this.testTimeOffset - 60000)) {\r\n                // Cached entry has expired.\r\n                this.onEvent(new OCSPCacheEntryExpiredEvent(signature, cachedNextTime));\r\n                cachedResponse = null;\r\n            } else {\r\n                // If we're within one day of the next update, or 50% of the way through the validity period,\r\n                // background an update to the cache.\r\n\r\n                const minUpdate: number = Math.min(24 * 60 * 60 * 1000, (cachedNextTime - cachedStartTime) / 2);\r\n\r\n                if ((cachedNextTime - (Date.now() + this.testTimeOffset)) < minUpdate) {\r\n                    this.onEvent(new OCSPCacheEntryNeedsRefreshEvent(signature, cachedStartTime, cachedNextTime));\r\n                    this.UpdateCache(ocspRequest, proxyInfo).catch((error: string) => {\r\n                        // Well, not much we can do here.\r\n                        this.onEvent(new OCSPCacheUpdateErrorEvent(signature, error.toString()));\r\n                    });\r\n                } else {\r\n                    this.onEvent(new OCSPCacheHitEvent(signature, cachedStartTime, cachedNextTime));\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this.onEvent(new OCSPCacheFetchErrorEvent(signature, error));\r\n            cachedResponse = null;\r\n        }\r\n        if (!cachedResponse) {\r\n            this.onEvent(new OCSPCacheMissEvent(signature));\r\n        }\r\n        return cachedResponse;\r\n    }\r\n\r\n    private static async VerifyOCSPResponse(cacheValue: Buffer, ocspRequest: ocsp.Request, proxyInfo: ProxyInfo): Promise<void> {\r\n        let ocspResponse: Buffer = cacheValue;\r\n        const sig: string = ocspRequest.certID.toString(\"hex\");\r\n\r\n        // Do we have a valid response?\r\n        if (!ocspResponse) {\r\n            ocspResponse = await CertCheckAgent.GetOCSPResponse(ocspRequest, proxyInfo);\r\n        }\r\n\r\n        return new Promise<void>((resolve: () => void, reject: (error: string | Error) => void) => {\r\n            ocsp.verify({ request: ocspRequest, response: ocspResponse }, (error: string, result: any): void => {\r\n                if (!!error) {\r\n                    CertCheckAgent.onEvent(new OCSPVerificationFailedEvent(ocspRequest.id.toString(\"hex\"), error));\r\n\r\n                    // Bad Cached Value? One more try without the cache.\r\n                    if (!!cacheValue) {\r\n                        this.VerifyOCSPResponse(null, ocspRequest, proxyInfo).then(() => {\r\n                            resolve();\r\n                        }, (error: Error) => {\r\n                            reject(error);\r\n                        });\r\n                    } else {\r\n                        reject(error);\r\n                    }\r\n                } else {\r\n                    if (!cacheValue) {\r\n                        CertCheckAgent.StoreCacheEntry(ocspRequest.id.toString(\"hex\"), ocspResponse);\r\n                    }\r\n                    resolve();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private static async UpdateCache(req: ocsp.Request, proxyInfo: ProxyInfo): Promise<void> {\r\n        const signature: string = req.id.toString(\"hex\");\r\n        this.onEvent(new OCSPCacheUpdateNeededEvent(signature));\r\n\r\n        const rawResponse: Buffer = await this.GetOCSPResponse(req, proxyInfo);\r\n        this.StoreCacheEntry(signature, rawResponse);\r\n        this.onEvent(new OCSPCacheUpdatehCompleteEvent(req.id.toString(\"hex\")));\r\n\r\n    }\r\n\r\n    private static StoreCacheEntry(sig: string, rawResponse: Buffer): void {\r\n        this.StoreMemoryCacheEntry(sig, rawResponse);\r\n        this.StoreDiskCacheEntry(sig, rawResponse);\r\n    }\r\n\r\n    private static StoreMemoryCacheEntry(sig: string, rawResponse: Buffer): void {\r\n        this.privMemCache[sig] = rawResponse;\r\n        this.onEvent(new OCSPMemoryCacheStoreEvent(sig));\r\n    }\r\n\r\n    private static StoreDiskCacheEntry(sig: string, rawResponse: Buffer): void {\r\n        this.privDiskCache.set(sig, rawResponse).then(() => {\r\n            this.onEvent(new OCSPDiskCacheStoreEvent(sig));\r\n        });\r\n    }\r\n\r\n    private static GetOCSPResponse(req: ocsp.Request, proxyInfo: ProxyInfo): Promise<Buffer> {\r\n\r\n        const ocspMethod: string = \"1.3.6.1.5.5.7.48.1\";\r\n        let options: http.RequestOptions = {};\r\n\r\n        if (!!proxyInfo) {\r\n            const agent: HttpsProxyAgent = CertCheckAgent.GetProxyAgent(proxyInfo);\r\n            options.agent = agent;\r\n        }\r\n\r\n        return new Promise<Buffer>((resolve: (value: Buffer) => void, reject: (error: string | Error) => void) => {\r\n            ocsp.utils.getAuthorityInfo(req.cert, ocspMethod, (error: string, uri: string): void => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                const parsedUri: {[k: string]: any} = parse.default(uri);\r\n                parsedUri.path = parsedUri.pathname;\r\n                options = { ...options, ...parsedUri };\r\n\r\n                ocsp.utils.getResponse(options, req.data, (error: string, raw: Buffer): void => {\r\n                    if (error) {\r\n                        reject(error);\r\n                        return;\r\n                    }\r\n\r\n                    this.onEvent(new OCSPResponseRetrievedEvent(req.certID.toString(\"hex\")));\r\n                    resolve(raw);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    private static onEvent = (event: OCSPEvent): void => {\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private CreateConnection(request: Agent.ClientRequest, options: Agent.RequestOptions): Promise<net.Socket> {\r\n        const enableOCSP: boolean = (typeof process !== \"undefined\" && process.env.NODE_TLS_REJECT_UNAUTHORIZED !== \"0\" && process.env.SPEECH_CONDUCT_OCSP_CHECK !== \"0\") && options.secureEndpoint;\r\n        let socketPromise: Promise<net.Socket>;\r\n\r\n        options = {\r\n            ...options,\r\n            ...{\r\n                requestOCSP: !CertCheckAgent.forceDisableOCSPStapling,\r\n                servername: options.host\r\n            }\r\n        };\r\n\r\n        if (!!this.privProxyInfo) {\r\n            const httpProxyAgent: HttpsProxyAgent = CertCheckAgent.GetProxyAgent(this.privProxyInfo);\r\n            const baseAgent: Agent.Agent = httpProxyAgent as unknown as Agent.Agent;\r\n\r\n            socketPromise = new Promise<net.Socket>((resolve: (value: net.Socket) => void, reject: (error: string | Error) => void) => {\r\n                baseAgent.callback(request, options, (error: Error, socket: net.Socket) => {\r\n                    if (!!error) {\r\n                        reject(error);\r\n                    } else {\r\n                        resolve(socket);\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            if (!!options.secureEndpoint) {\r\n                socketPromise = Promise.resolve(tls.connect(options));\r\n            } else {\r\n                socketPromise = Promise.resolve(net.connect(options));\r\n            }\r\n        }\r\n\r\n        if (!!enableOCSP) {\r\n            return CertCheckAgent.OCSPCheck(socketPromise, this.privProxyInfo);\r\n        } else {\r\n            return socketPromise;\r\n        }\r\n    }\r\n}\r\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:[\\\\/]+/\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?([\\\\/]{1,})?([\\S\\s]*)/i\n  , whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]'\n  , left = new RegExp('^'+ whitespace +'+');\n\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(left, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address) {          // Sanitize what is left of the address\n    return address.replace('\\\\', '/');\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address) {\n  address = trimLeft(address);\n\n  var match = protocolre.exec(address)\n    , protocol = match[1] ? match[1].toLowerCase() : ''\n    , slashes = !!(match[2] && match[2].length >= 2)\n    , rest =  match[2] && match[2].length === 1 ? '/' + match[3] : match[3];\n\n  return {\n    protocol: protocol,\n    slashes: slashes,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && url.hostname) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class OCSPEvent extends PlatformEvent {\r\n    private privSignature: string;\r\n\r\n    constructor(eventName: string, eventType: EventType, signature: string) {\r\n        super(eventName, eventType);\r\n\r\n        this.privSignature = signature;\r\n    }\r\n}\r\n\r\nexport class OCSPMemoryCacheHitEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPMemoryCacheHitEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheMissEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPCacheMissEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPDiskCacheHitEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPDiskCacheHitEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheUpdateNeededEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPCacheUpdateNeededEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPMemoryCacheStoreEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPMemoryCacheStoreEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPDiskCacheStoreEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPDiskCacheStoreEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheUpdatehCompleteEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPCacheUpdatehCompleteEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPStapleReceivedEvent extends OCSPEvent {\r\n    constructor() {\r\n        super(\"OCSPStapleReceivedEvent\", EventType.Debug, \"\");\r\n    }\r\n}\r\n\r\nexport class OCSPWSUpgradeStartedEvent extends OCSPEvent {\r\n    constructor(serialNumber: string) {\r\n        super(\"OCSPWSUpgradeStartedEvent\", EventType.Debug, serialNumber);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheEntryExpiredEvent extends OCSPEvent {\r\n    private privExpireTime: number;\r\n\r\n    constructor(serialNumber: string, expireTime: number) {\r\n        super(\"OCSPCacheEntryExpiredEvent\", EventType.Debug, serialNumber);\r\n        this.privExpireTime = expireTime;\r\n    }\r\n}\r\n\r\nexport class OCSPCacheEntryNeedsRefreshEvent extends OCSPEvent {\r\n    private privExpireTime: number;\r\n    private privStartTime: number;\r\n\r\n    constructor(serialNumber: string, startTime: number, expireTime: number) {\r\n        super(\"OCSPCacheEntryNeedsRefreshEvent\", EventType.Debug, serialNumber);\r\n        this.privExpireTime = expireTime;\r\n        this.privStartTime = startTime;\r\n    }\r\n}\r\n\r\nexport class OCSPCacheHitEvent extends OCSPEvent {\r\n    private privExpireTime: number;\r\n    private privStartTime: number;\r\n    private privExpireTimeString: string;\r\n    private privStartTimeString: string;\r\n\r\n    constructor(serialNumber: string, startTime: number, expireTime: number) {\r\n        super(\"OCSPCacheHitEvent\", EventType.Debug, serialNumber);\r\n        this.privExpireTime = expireTime;\r\n        this.privExpireTimeString = new Date(expireTime).toLocaleDateString();\r\n        this.privStartTime = startTime;\r\n        this.privStartTimeString = new Date(startTime).toLocaleTimeString();\r\n    }\r\n}\r\n\r\nexport class OCSPVerificationFailedEvent extends OCSPEvent {\r\n    private privError: string;\r\n\r\n    constructor(serialNumber: string, error: string) {\r\n        super(\"OCSPVerificationFailedEvent\", EventType.Debug, serialNumber);\r\n        this.privError = error;\r\n    }\r\n}\r\n\r\nexport class OCSPCacheFetchErrorEvent extends OCSPEvent {\r\n    private privError: string;\r\n\r\n    constructor(serialNumber: string, error: string) {\r\n        super(\"OCSPCacheFetchErrorEvent\", EventType.Debug, serialNumber);\r\n        this.privError = error;\r\n    }\r\n}\r\n\r\nexport class OCSPResponseRetrievedEvent extends OCSPEvent {\r\n    constructor(serialNumber: string) {\r\n        super(\"OCSPResponseRetrievedEvent\", EventType.Debug, serialNumber);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheUpdateErrorEvent extends OCSPEvent {\r\n    private privError: string;\r\n\r\n    constructor(serialNumber: string, error: string) {\r\n        super(\"OCSPCacheUpdateErrorEvent\", EventType.Debug, serialNumber);\r\n        this.privError = error;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError, ObjectDisposedError } from \"./Error\";\r\nimport { IDetachable } from \"./IDetachable\";\r\nimport { IDisposable } from \"./IDisposable\";\r\nimport { List } from \"./List\";\r\nimport {\r\n    Deferred,\r\n} from \"./Promise\";\r\nexport interface IQueue<TItem> extends IDisposable {\r\n    enqueue(item: TItem): void;\r\n    enqueueFromPromise(promise: Promise<TItem>): void;\r\n    dequeue(): Promise<TItem>;\r\n    peek(): Promise<TItem>;\r\n    length(): number;\r\n}\r\n\r\nenum SubscriberType {\r\n    Dequeue,\r\n    Peek,\r\n}\r\n\r\nexport class Queue<TItem> implements IQueue<TItem> {\r\n    private privPromiseStore: List<Promise<TItem>> = new List<Promise<TItem>>();\r\n    private privList: List<TItem>;\r\n    private privDetachables: IDetachable[];\r\n    private privSubscribers: List<{ type: SubscriberType, deferral: Deferred<TItem> }>;\r\n    private privIsDrainInProgress: boolean = false;\r\n    private privIsDisposing: boolean = false;\r\n    private privDisposeReason: string = null;\r\n\r\n    public constructor(list?: List<TItem>) {\r\n        this.privList = list ? list : new List<TItem>();\r\n        this.privDetachables = [];\r\n        this.privSubscribers = new List<{ type: SubscriberType, deferral: Deferred<TItem> }>();\r\n        this.privDetachables.push(this.privList.onAdded(this.drain));\r\n    }\r\n\r\n    public enqueue = (item: TItem): void => {\r\n        this.throwIfDispose();\r\n        this.enqueueFromPromise(new Promise<TItem>((resolve: (value: TItem) => void, reject: (reason: any) => void) => { resolve(item); }));\r\n    }\r\n\r\n    public enqueueFromPromise = (promise: Promise<TItem>): void => {\r\n        this.throwIfDispose();\r\n        promise.then((val: TItem): void => {\r\n            this.privList.add(val);\r\n             /* tslint:disable:no-empty */\r\n        }, (error: string): void => { });\r\n    }\r\n\r\n    public dequeue = (): Promise<TItem> => {\r\n        this.throwIfDispose();\r\n        const deferredSubscriber = new Deferred<TItem>();\r\n\r\n        if (this.privSubscribers) {\r\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Dequeue });\r\n            this.drain();\r\n        }\r\n\r\n        return deferredSubscriber.promise;\r\n    }\r\n\r\n    public peek = (): Promise<TItem> => {\r\n        this.throwIfDispose();\r\n        const deferredSubscriber = new Deferred<TItem>();\r\n\r\n        const subs = this.privSubscribers;\r\n        if (subs) {\r\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Peek });\r\n            this.drain();\r\n        }\r\n\r\n        return deferredSubscriber.promise;\r\n    }\r\n\r\n    public length = (): number => {\r\n        this.throwIfDispose();\r\n        return this.privList.length();\r\n    }\r\n\r\n    public isDisposed = (): boolean => {\r\n        return this.privSubscribers == null;\r\n    }\r\n\r\n    public async drainAndDispose(pendingItemProcessor: (pendingItemInQueue: TItem) => void, reason?: string): Promise<void> {\r\n        if (!this.isDisposed() && !this.privIsDisposing) {\r\n            this.privDisposeReason = reason;\r\n            this.privIsDisposing = true;\r\n\r\n            const subs = this.privSubscribers;\r\n            if (subs) {\r\n                while (subs.length() > 0) {\r\n                    const subscriber = subs.removeFirst();\r\n                    // TODO: this needs work (Resolve(null) instead?).\r\n                    subscriber.deferral.resolve(undefined);\r\n                    // subscriber.deferral.reject(\"Disposed\");\r\n                }\r\n\r\n                // note: this block assumes cooperative multitasking, i.e.,\r\n                // between the if-statement and the assignment there are no\r\n                // thread switches.\r\n                // Reason is that between the initial const = this.; and this\r\n                // point there is the derral.resolve() operation that might have\r\n                // caused recursive calls to the Queue, especially, calling\r\n                // Dispose() on the queue alredy (which would reset the var\r\n                // here to null!).\r\n                // That should generally hold true for javascript...\r\n                if (this.privSubscribers === subs) {\r\n                    this.privSubscribers = subs;\r\n                }\r\n            }\r\n\r\n            for (const detachable of this.privDetachables) {\r\n                await detachable.detach();\r\n            }\r\n\r\n            if (this.privPromiseStore.length() > 0 && pendingItemProcessor) {\r\n                const promiseArray: Promise<TItem>[] = [];\r\n\r\n                this.privPromiseStore.toArray().forEach((wrapper: Promise<TItem>) => {\r\n                    promiseArray.push(wrapper);\r\n                });\r\n                return Promise.all(promiseArray).finally(() => {\r\n                    this.privSubscribers = null;\r\n                    this.privList.forEach((item: TItem, index: number): void => {\r\n                        pendingItemProcessor(item);\r\n                    });\r\n                    this.privList = null;\r\n                    return;\r\n                }).then<void>();\r\n            } else {\r\n                this.privSubscribers = null;\r\n                this.privList = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        await this.drainAndDispose(null, reason);\r\n    }\r\n\r\n    private drain = (): void => {\r\n        if (!this.privIsDrainInProgress && !this.privIsDisposing) {\r\n            this.privIsDrainInProgress = true;\r\n\r\n            const subs = this.privSubscribers;\r\n            const lists = this.privList;\r\n            if (subs && lists) {\r\n                while (lists.length() > 0 && subs.length() > 0 && !this.privIsDisposing) {\r\n                    const subscriber = subs.removeFirst();\r\n                    if (subscriber.type === SubscriberType.Peek) {\r\n                        subscriber.deferral.resolve(lists.first());\r\n                    } else {\r\n                        const dequeuedItem = lists.removeFirst();\r\n                        subscriber.deferral.resolve(dequeuedItem);\r\n                    }\r\n                }\r\n\r\n                // note: this block assumes cooperative multitasking, i.e.,\r\n                // between the if-statement and the assignment there are no\r\n                // thread switches.\r\n                // Reason is that between the initial const = this.; and this\r\n                // point there is the derral.resolve() operation that might have\r\n                // caused recursive calls to the Queue, especially, calling\r\n                // Dispose() on the queue alredy (which would reset the var\r\n                // here to null!).\r\n                // That should generally hold true for javascript...\r\n                if (this.privSubscribers === subs) {\r\n                    this.privSubscribers = subs;\r\n                }\r\n\r\n                // note: this block assumes cooperative multitasking, i.e.,\r\n                // between the if-statement and the assignment there are no\r\n                // thread switches.\r\n                // Reason is that between the initial const = this.; and this\r\n                // point there is the derral.resolve() operation that might have\r\n                // caused recursive calls to the Queue, especially, calling\r\n                // Dispose() on the queue alredy (which would reset the var\r\n                // here to null!).\r\n                // That should generally hold true for javascript...\r\n                if (this.privList === lists) {\r\n                    this.privList = lists;\r\n                }\r\n            }\r\n\r\n            this.privIsDrainInProgress = false;\r\n        }\r\n    }\r\n\r\n    private throwIfDispose = (): void => {\r\n        if (this.isDisposed()) {\r\n            if (this.privDisposeReason) {\r\n                throw new InvalidOperationError(this.privDisposeReason);\r\n            }\r\n\r\n            throw new ObjectDisposedError(\"Queue\");\r\n        } else if (this.privIsDisposing) {\r\n            throw new InvalidOperationError(\"Queue disposing\");\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ObjectDisposedError } from \"./Error\";\r\nimport { IDetachable } from \"./IDetachable\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\nimport { IDisposable } from \"./IDisposable\";\r\n\r\nexport interface IList<TItem> extends IDisposable {\r\n    get(itemIndex: number): TItem;\r\n    first(): TItem;\r\n    last(): TItem;\r\n\r\n    add(item: TItem): void;\r\n    insertAt(index: number, item: TItem): void;\r\n\r\n    removeFirst(): TItem;\r\n    removeLast(): TItem;\r\n    removeAt(index: number): TItem;\r\n    remove(index: number, count: number): TItem[];\r\n    clear(): void;\r\n\r\n    length(): number;\r\n\r\n    onAdded(addedCallback: () => void): IDetachable;\r\n    onRemoved(removedCallback: () => void): IDetachable;\r\n    onDisposed(disposedCallback: () => void): IDetachable;\r\n\r\n    join(seperator?: string): string;\r\n\r\n    toArray(): TItem[];\r\n\r\n    any(callback?: (item: TItem, index: number) => boolean): boolean;\r\n    all(callback: (item: TItem) => boolean): boolean;\r\n    forEach(callback: (item: TItem, index: number) => void): void;\r\n    select<T2>(callback: (item: TItem, index: number) => T2): List<T2>;\r\n    where(callback: (item: TItem, index: number) => boolean): List<TItem>;\r\n    orderBy(compareFn: (a: TItem, b: TItem) => number): List<TItem>;\r\n    orderByDesc(compareFn: (a: TItem, b: TItem) => number): List<TItem>;\r\n    clone(): List<TItem>;\r\n    concat(list: List<TItem>): List<TItem>;\r\n    concatArray(array: TItem[]): List<TItem>;\r\n}\r\n\r\nexport class List<TItem> implements IList<TItem>  {\r\n    private privList: TItem[];\r\n    private privSubscriptionIdCounter: number = 0;\r\n    private privAddSubscriptions: IStringDictionary<() => void> = {};\r\n    private privRemoveSubscriptions: IStringDictionary<() => void> = {};\r\n    private privDisposedSubscriptions: IStringDictionary<() => void> = {};\r\n    private privDisposeReason: string = null;\r\n\r\n    public constructor(list?: TItem[]) {\r\n        this.privList = [];\r\n        // copy the list rather than taking as is.\r\n        if (list) {\r\n            for (const item of list) {\r\n                this.privList.push(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    public get = (itemIndex: number): TItem => {\r\n        this.throwIfDisposed();\r\n        return this.privList[itemIndex];\r\n    }\r\n\r\n    public first = (): TItem => {\r\n        return this.get(0);\r\n    }\r\n\r\n    public last = (): TItem => {\r\n        return this.get(this.length() - 1);\r\n    }\r\n\r\n    public add = (item: TItem): void => {\r\n        this.throwIfDisposed();\r\n        this.insertAt(this.privList.length, item);\r\n    }\r\n\r\n    public insertAt = (index: number, item: TItem): void => {\r\n        this.throwIfDisposed();\r\n        if (index === 0) {\r\n            this.privList.unshift(item);\r\n        } else if (index === this.privList.length) {\r\n            this.privList.push(item);\r\n        } else {\r\n            this.privList.splice(index, 0, item);\r\n        }\r\n        this.triggerSubscriptions(this.privAddSubscriptions);\r\n    }\r\n\r\n    public removeFirst = (): TItem => {\r\n        this.throwIfDisposed();\r\n        return this.removeAt(0);\r\n    }\r\n\r\n    public removeLast = (): TItem => {\r\n        this.throwIfDisposed();\r\n        return this.removeAt(this.length() - 1);\r\n    }\r\n\r\n    public removeAt = (index: number): TItem => {\r\n        this.throwIfDisposed();\r\n        return this.remove(index, 1)[0];\r\n    }\r\n\r\n    public remove = (index: number, count: number): TItem[] => {\r\n        this.throwIfDisposed();\r\n        const removedElements = this.privList.splice(index, count);\r\n        this.triggerSubscriptions(this.privRemoveSubscriptions);\r\n        return removedElements;\r\n    }\r\n\r\n    public clear = (): void => {\r\n        this.throwIfDisposed();\r\n        this.remove(0, this.length());\r\n    }\r\n\r\n    public length = (): number => {\r\n        this.throwIfDisposed();\r\n        return this.privList.length;\r\n    }\r\n\r\n    public onAdded = (addedCallback: () => void): IDetachable => {\r\n        this.throwIfDisposed();\r\n        const subscriptionId = this.privSubscriptionIdCounter++;\r\n\r\n        this.privAddSubscriptions[subscriptionId] = addedCallback;\r\n\r\n        return {\r\n            detach: () => {\r\n                delete this.privAddSubscriptions[subscriptionId];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public onRemoved = (removedCallback: () => void): IDetachable => {\r\n        this.throwIfDisposed();\r\n        const subscriptionId = this.privSubscriptionIdCounter++;\r\n\r\n        this.privRemoveSubscriptions[subscriptionId] = removedCallback;\r\n\r\n        return {\r\n            detach: () => {\r\n                delete this.privRemoveSubscriptions[subscriptionId];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public onDisposed = (disposedCallback: () => void): IDetachable => {\r\n        this.throwIfDisposed();\r\n        const subscriptionId = this.privSubscriptionIdCounter++;\r\n\r\n        this.privDisposedSubscriptions[subscriptionId] = disposedCallback;\r\n\r\n        return {\r\n            detach: () => {\r\n                delete this.privDisposedSubscriptions[subscriptionId];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public join = (seperator?: string): string => {\r\n        this.throwIfDisposed();\r\n        return this.privList.join(seperator);\r\n    }\r\n\r\n    public toArray = (): TItem[] => {\r\n        const cloneCopy = Array<TItem>();\r\n        this.privList.forEach((val: TItem) => {\r\n            cloneCopy.push(val);\r\n        });\r\n        return cloneCopy;\r\n    }\r\n\r\n    public any = (callback?: (item: TItem, index: number) => boolean): boolean => {\r\n        this.throwIfDisposed();\r\n        if (callback) {\r\n            return this.where(callback).length() > 0;\r\n        } else {\r\n            return this.length() > 0;\r\n        }\r\n    }\r\n\r\n    public all = (callback: (item: TItem) => boolean): boolean => {\r\n        this.throwIfDisposed();\r\n        return this.where(callback).length() === this.length();\r\n    }\r\n\r\n    public forEach = (callback: (item: TItem, index: number) => void): void => {\r\n        this.throwIfDisposed();\r\n        for (let i = 0; i < this.length(); i++) {\r\n            callback(this.privList[i], i);\r\n        }\r\n    }\r\n\r\n    public select = <T2>(callback: (item: TItem, index: number) => T2): List<T2> => {\r\n        this.throwIfDisposed();\r\n        const selectList: T2[] = [];\r\n        for (let i = 0; i < this.privList.length; i++) {\r\n            selectList.push(callback(this.privList[i], i));\r\n        }\r\n\r\n        return new List<T2>(selectList);\r\n    }\r\n\r\n    public where = (callback: (item: TItem, index: number) => boolean): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        const filteredList = new List<TItem>();\r\n        for (let i = 0; i < this.privList.length; i++) {\r\n            if (callback(this.privList[i], i)) {\r\n                filteredList.add(this.privList[i]);\r\n            }\r\n        }\r\n        return filteredList;\r\n    }\r\n\r\n    public orderBy = (compareFn: (a: TItem, b: TItem) => number): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        const clonedArray = this.toArray();\r\n        const orderedArray = clonedArray.sort(compareFn);\r\n        return new List(orderedArray);\r\n    }\r\n\r\n    public orderByDesc = (compareFn: (a: TItem, b: TItem) => number): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        return this.orderBy((a: TItem, b: TItem) => compareFn(b, a));\r\n    }\r\n\r\n    public clone = (): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        return new List<TItem>(this.toArray());\r\n    }\r\n\r\n    public concat = (list: List<TItem>): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        return new List<TItem>(this.privList.concat(list.toArray()));\r\n    }\r\n\r\n    public concatArray = (array: TItem[]): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        return new List<TItem>(this.privList.concat(array));\r\n    }\r\n\r\n    public isDisposed = (): boolean => {\r\n        return this.privList == null;\r\n    }\r\n\r\n    public dispose = (reason?: string): void => {\r\n        if (!this.isDisposed()) {\r\n            this.privDisposeReason = reason;\r\n            this.privList = null;\r\n            this.privAddSubscriptions = null;\r\n            this.privRemoveSubscriptions = null;\r\n            this.triggerSubscriptions(this.privDisposedSubscriptions);\r\n        }\r\n    }\r\n\r\n    private throwIfDisposed = (): void => {\r\n        if (this.isDisposed()) {\r\n            throw new ObjectDisposedError(\"List\", this.privDisposeReason);\r\n        }\r\n    }\r\n\r\n    private triggerSubscriptions = (subscriptions: IStringDictionary<() => void>): void => {\r\n        if (subscriptions) {\r\n            for (const subscriptionId in subscriptions) {\r\n                if (subscriptionId) {\r\n                    subscriptions[subscriptionId]();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines speech property ids.\r\n * @class PropertyId\r\n */\r\nexport enum PropertyId {\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service subscription Key. If you are using an intent recognizer, you need to specify\r\n     * to specify the LUIS endpoint key for your particular LUIS app. Under normal circumstances, you shouldn't\r\n     * have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromSubscription]].\r\n     * @member PropertyId.SpeechServiceConnection_Key\r\n     */\r\n    SpeechServiceConnection_Key = 0,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service endpoint (url). Under normal circumstances, you shouldn't\r\n     * have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromEndpoint]].\r\n     * NOTE: This endpoint is not the same as the endpoint used to obtain an access token.\r\n     * @member PropertyId.SpeechServiceConnection_Endpoint\r\n     */\r\n    SpeechServiceConnection_Endpoint,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service region. Under normal circumstances, you shouldn't have to\r\n     * use this property directly.\r\n     * Instead, use [[SpeechConfig.fromSubscription]], [[SpeechConfig.fromEndpoint]], [[SpeechConfig.fromAuthorizationToken]].\r\n     * @member PropertyId.SpeechServiceConnection_Region\r\n     */\r\n    SpeechServiceConnection_Region,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service authorization token (aka access token). Under normal circumstances,\r\n     * you shouldn't have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromAuthorizationToken]], [[SpeechRecognizer.authorizationToken]],\r\n     * [[IntentRecognizer.authorizationToken]], [[TranslationRecognizer.authorizationToken]], [[SpeakerRecognizer.authorizationToken]].\r\n     * @member PropertyId.SpeechServiceAuthorization_Token\r\n     */\r\n    SpeechServiceAuthorization_Token,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service authorization type. Currently unused.\r\n     * @member PropertyId.SpeechServiceAuthorization_Type\r\n     */\r\n    SpeechServiceAuthorization_Type,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service endpoint id. Under normal circumstances, you shouldn't\r\n     * have to use this property directly.\r\n     * Instead, use [[SpeechConfig.endpointId]].\r\n     * NOTE: The endpoint id is available in the Speech Portal, listed under Endpoint Details.\r\n     * @member PropertyId.SpeechServiceConnection_EndpointId\r\n     */\r\n    SpeechServiceConnection_EndpointId,\r\n\r\n    /**\r\n     * The list of comma separated languages (BCP-47 format) used as target translation languages. Under normal circumstances,\r\n     * you shouldn't have to use this property directly.\r\n     * Instead use [[SpeechTranslationConfig.addTargetLanguage]],\r\n     * [[SpeechTranslationConfig.targetLanguages]], [[TranslationRecognizer.targetLanguages]].\r\n     * @member PropertyId.SpeechServiceConnection_TranslationToLanguages\r\n     */\r\n    SpeechServiceConnection_TranslationToLanguages,\r\n\r\n    /**\r\n     * The name of the Cognitive Service Text to Speech Service Voice. Under normal circumstances, you shouldn't have to use this\r\n     * property directly.\r\n     * Instead, use [[SpeechTranslationConfig.voiceName]].\r\n     * NOTE: Valid voice names can be found <a href=\"https://aka.ms/csspeech/voicenames\">here</a>.\r\n     * @member PropertyId.SpeechServiceConnection_TranslationVoice\r\n     */\r\n    SpeechServiceConnection_TranslationVoice,\r\n\r\n    /**\r\n     * Translation features.\r\n     * @member PropertyId.SpeechServiceConnection_TranslationFeatures\r\n     */\r\n    SpeechServiceConnection_TranslationFeatures,\r\n\r\n    /**\r\n     * The Language Understanding Service Region. Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Instead, use [[LanguageUnderstandingModel]].\r\n     * @member PropertyId.SpeechServiceConnection_IntentRegion\r\n     */\r\n    SpeechServiceConnection_IntentRegion,\r\n\r\n    /**\r\n     * The host name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyHostName,\r\n\r\n    /**\r\n     * The port of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyPort,\r\n\r\n    /**\r\n     * The user name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyUserName,\r\n\r\n    /**\r\n     * The password of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyPassword,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service recognition Mode. Can be \"INTERACTIVE\", \"CONVERSATION\", \"DICTATION\".\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * @member PropertyId.SpeechServiceConnection_RecoMode\r\n     */\r\n    SpeechServiceConnection_RecoMode,\r\n\r\n    /**\r\n     * The spoken language to be recognized (in BCP-47 format). Under normal circumstances, you shouldn't have to use this property\r\n     * directly.\r\n     * Instead, use [[SpeechConfig.speechRecognitionLanguage]].\r\n     * @member PropertyId.SpeechServiceConnection_RecoLanguage\r\n     */\r\n    SpeechServiceConnection_RecoLanguage,\r\n\r\n    /**\r\n     * The session id. This id is a universally unique identifier (aka UUID) representing a specific binding of an audio input stream\r\n     * and the underlying speech recognition instance to which it is bound. Under normal circumstances, you shouldn't have to use this\r\n     * property directly.\r\n     * Instead use [[SessionEventArgs.sessionId]].\r\n     * @member PropertyId.Speech_SessionId\r\n     */\r\n    Speech_SessionId,\r\n\r\n    /**\r\n     * The spoken language to be synthesized (e.g. en-US)\r\n     * @member PropertyId.SpeechServiceConnection_SynthLanguage\r\n     */\r\n    SpeechServiceConnection_SynthLanguage,\r\n\r\n    /**\r\n     * The name of the TTS voice to be used for speech synthesis\r\n     * @member PropertyId.SpeechServiceConnection_SynthVoice\r\n     */\r\n    SpeechServiceConnection_SynthVoice,\r\n\r\n    /**\r\n     * The string to specify TTS output audio format\r\n     * @member PropertyId.SpeechServiceConnection_SynthOutputFormat\r\n     */\r\n    SpeechServiceConnection_SynthOutputFormat,\r\n\r\n    /**\r\n     * The list of comma separated languages used as possible source languages\r\n     * Added in version 1.13.0\r\n     * @member PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages\r\n     */\r\n    SpeechServiceConnection_AutoDetectSourceLanguages,\r\n\r\n    /**\r\n     * The requested Cognitive Services Speech Service response output format (simple or detailed). Under normal circumstances, you shouldn't have\r\n     * to use this property directly.\r\n     * Instead use [[SpeechConfig.outputFormat]].\r\n     * @member PropertyId.SpeechServiceResponse_RequestDetailedResultTrueFalse\r\n     */\r\n    SpeechServiceResponse_RequestDetailedResultTrueFalse,\r\n\r\n    /**\r\n     * The requested Cognitive Services Speech Service response output profanity level. Currently unused.\r\n     * @member PropertyId.SpeechServiceResponse_RequestProfanityFilterTrueFalse\r\n     */\r\n    SpeechServiceResponse_RequestProfanityFilterTrueFalse,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service response output (in JSON format). This property is available on recognition result objects only.\r\n     * @member PropertyId.SpeechServiceResponse_JsonResult\r\n     */\r\n    SpeechServiceResponse_JsonResult,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service error details (in JSON format). Under normal circumstances, you shouldn't have to\r\n     * use this property directly. Instead use [[CancellationDetails.errorDetails]].\r\n     * @member PropertyId.SpeechServiceResponse_JsonErrorDetails\r\n     */\r\n    SpeechServiceResponse_JsonErrorDetails,\r\n\r\n    /**\r\n     * The cancellation reason. Currently unused.\r\n     * @member PropertyId.CancellationDetails_Reason\r\n     */\r\n    CancellationDetails_Reason,\r\n\r\n    /**\r\n     * The cancellation text. Currently unused.\r\n     * @member PropertyId.CancellationDetails_ReasonText\r\n     */\r\n    CancellationDetails_ReasonText,\r\n\r\n    /**\r\n     * The Cancellation detailed text. Currently unused.\r\n     * @member PropertyId.CancellationDetails_ReasonDetailedText\r\n     */\r\n    CancellationDetails_ReasonDetailedText,\r\n\r\n    /**\r\n     * The Language Understanding Service response output (in JSON format). Available via [[IntentRecognitionResult]]\r\n     * @member PropertyId.LanguageUnderstandingServiceResponse_JsonResult\r\n     */\r\n    LanguageUnderstandingServiceResponse_JsonResult,\r\n\r\n    /**\r\n     * The URL string built from speech configuration.\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * NOTE: Added in version 1.7.0.\r\n     */\r\n    SpeechServiceConnection_Url,\r\n\r\n    /**\r\n     * The initial silence timeout value (in milliseconds) used by the service.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceConnection_InitialSilenceTimeoutMs,\r\n\r\n    /**\r\n     * The end silence timeout value (in milliseconds) used by the service.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceConnection_EndSilenceTimeoutMs,\r\n\r\n    /**\r\n     * A boolean value specifying whether audio logging is enabled in the service or not.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceConnection_EnableAudioLogging,\r\n\r\n    /**\r\n     * The requested Cognitive Services Speech Service response output profanity setting.\r\n     * Allowed values are \"masked\", \"removed\", and \"raw\".\r\n     * Added in version 1.7.0.\r\n     */\r\n    SpeechServiceResponse_ProfanityOption,\r\n\r\n    /**\r\n     * A string value specifying which post processing option should be used by service.\r\n     * Allowed values are \"TrueText\".\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceResponse_PostProcessingOption,\r\n\r\n    /**\r\n     *  A boolean value specifying whether to include word-level timestamps in the response result.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceResponse_RequestWordLevelTimestamps,\r\n\r\n    /**\r\n     * The number of times a word has to be in partial results to be returned.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceResponse_StablePartialResultThreshold,\r\n\r\n    /**\r\n     * A string value specifying the output format option in the response result. Internal use only.\r\n     * Added in version 1.7.0.\r\n     */\r\n    SpeechServiceResponse_OutputFormatOption,\r\n\r\n    /**\r\n     * A boolean value to request for stabilizing translation partial results by omitting words in the end.\r\n     * Added in version 1.7.0.\r\n     */\r\n    SpeechServiceResponse_TranslationRequestStablePartialResult,\r\n\r\n    /**\r\n     * Identifier used to connect to the backend service.\r\n     * @member PropertyId.Conversation_ApplicationId\r\n     */\r\n    Conversation_ApplicationId,\r\n\r\n    /**\r\n     * Type of dialog backend to connect to.\r\n     * @member PropertyId.Conversation_DialogType\r\n     */\r\n    Conversation_DialogType,\r\n\r\n    /**\r\n     * Silence timeout for listening\r\n     * @member PropertyId.Conversation_Initial_Silence_Timeout\r\n     */\r\n    Conversation_Initial_Silence_Timeout,\r\n\r\n    /**\r\n     * From Id to add to speech recognition activities.\r\n     * @member PropertyId.Conversation_From_Id\r\n     */\r\n    Conversation_From_Id,\r\n\r\n    /**\r\n     * ConversationId for the session.\r\n     * @member PropertyId.Conversation_Conversation_Id\r\n     */\r\n    Conversation_Conversation_Id,\r\n\r\n    /**\r\n     * Comma separated list of custom voice deployment ids.\r\n     * @member PropertyId.Conversation_Custom_Voice_Deployment_Ids\r\n     */\r\n    Conversation_Custom_Voice_Deployment_Ids,\r\n\r\n    /**\r\n     * Speech activity template, stamp properties from the template on the activity generated by the service for speech.\r\n     * @member PropertyId.Conversation_Speech_Activity_Template\r\n     * Added in version 1.10.0.\r\n     */\r\n    Conversation_Speech_Activity_Template,\r\n\r\n    /**\r\n     * Enables or disables the receipt of turn status messages as obtained on the turnStatusReceived event.\r\n     * @member PropertyId.Conversation_Request_Bot_Status_Messages\r\n     * Added in version 1.15.0.\r\n     */\r\n    Conversation_Request_Bot_Status_Messages,\r\n\r\n    /**\r\n     * Specifies the connection ID to be provided in the Agent configuration message, e.g. a Direct Line token for\r\n     * channel authentication.\r\n     * Added in version 1.15.1.\r\n     */\r\n    Conversation_Agent_Connection_Id,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service host (url). Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromHost]].\r\n     */\r\n    SpeechServiceConnection_Host,\r\n\r\n    /**\r\n     * Set the host for service calls to the Conversation Translator REST management and websocket calls.\r\n     */\r\n    ConversationTranslator_Host,\r\n\r\n    /**\r\n     * Optionally set the the host's display name.\r\n     * Used when joining a conversation.\r\n     */\r\n    ConversationTranslator_Name,\r\n\r\n    /**\r\n     * Optionally set a value for the X-CorrelationId request header.\r\n     * Used for troubleshooting errors in the server logs. It should be a valid guid.\r\n     */\r\n    ConversationTranslator_CorrelationId,\r\n\r\n    /**\r\n     * Set the conversation token to be sent to the speech service. This enables the\r\n     * service to service call from the speech service to the Conversation Translator service for relaying\r\n     * recognitions. For internal use.\r\n     */\r\n    ConversationTranslator_Token,\r\n\r\n    /**\r\n     * The reference text of the audio for pronunciation evaluation.\r\n     * For this and the following pronunciation assessment parameters, see\r\n     * https://docs.microsoft.com/azure/cognitive-services/speech-service/rest-speech-to-text#pronunciation-assessment-parameters for details.\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_ReferenceText,\r\n\r\n    /**\r\n     * The point system for pronunciation score calibration (FivePoint or HundredMark).\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_GradingSystem,\r\n\r\n    /**\r\n     * The pronunciation evaluation granularity (Phoneme, Word, or FullText).\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_Granularity,\r\n\r\n    /**\r\n     * Defines if enable miscue calculation.\r\n     * With this enabled, the pronounced words will be compared to the reference text,\r\n     * and will be marked with omission/insertion based on the comparison. The default setting is False.\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_EnableMiscue,\r\n\r\n    /**\r\n     * The json string of pronunciation assessment parameters\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_Json,\r\n\r\n    /**\r\n     * Pronunciation assessment parameters.\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_Params\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyId } from \"./Exports\";\r\n\r\n/**\r\n * Represents collection of properties and their values.\r\n * @class PropertyCollection\r\n */\r\nexport class PropertyCollection {\r\n    private privKeys: string[] = [] as string[];\r\n    private privValues: string[] = [] as string[];\r\n\r\n    /**\r\n     * Returns the property value in type String. The parameter must have the same type as String.\r\n     * Currently only String, int and bool are allowed.\r\n     * If the name is not available, the specified defaultValue is returned.\r\n     * @member PropertyCollection.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} def - The default value which is returned if the parameter\r\n     *        is not available in the collection.\r\n     * @returns {string} value of the parameter.\r\n     */\r\n    public getProperty(key: PropertyId | string, def?: string): string {\r\n        let keyToUse: string;\r\n\r\n        if (typeof key === \"string\") {\r\n            keyToUse = key;\r\n        } else {\r\n            keyToUse = PropertyId[key];\r\n        }\r\n\r\n        for (let n = 0; n < this.privKeys.length; n++) {\r\n            if (this.privKeys[n] === keyToUse) {\r\n                return this.privValues[n];\r\n            }\r\n        }\r\n\r\n        return def;\r\n    }\r\n\r\n    /**\r\n     * Sets the String value of the parameter specified by name.\r\n     * @member PropertyCollection.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} value - The value of the parameter.\r\n     */\r\n    public setProperty(key: string | PropertyId, value: string): void {\r\n        let keyToUse: string;\r\n\r\n        if (typeof key === \"string\") {\r\n            keyToUse = key;\r\n        } else {\r\n            keyToUse = PropertyId[key];\r\n        }\r\n\r\n        for (let n = 0; n < this.privKeys.length; n++) {\r\n            if (this.privKeys[n] === keyToUse) {\r\n                this.privValues[n] = value;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.privKeys.push(keyToUse);\r\n        this.privValues.push(value);\r\n    }\r\n\r\n    /**\r\n     * Clones the collection.\r\n     * @member PropertyCollection.prototype.clone\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} A copy of the collection.\r\n     */\r\n    public clone(): PropertyCollection {\r\n        const clonedMap = new PropertyCollection();\r\n\r\n        for (let n = 0; n < this.privKeys.length; n++) {\r\n            clonedMap.privKeys.push(this.privKeys[n]);\r\n            clonedMap.privValues.push(this.privValues[n]);\r\n        }\r\n\r\n        return clonedMap;\r\n    }\r\n\r\n    /**\r\n     * Merges this set of properties into another, no overwrites.\r\n     * @member PropertyCollection.prototype.mergeTo\r\n     * @function\r\n     * @public\r\n     * @param {PropertyCollection} The collection to merge into.\r\n     */\r\n    public mergeTo(destinationCollection: PropertyCollection): void {\r\n        this.privKeys.forEach((key: string | PropertyId) => {\r\n            if (destinationCollection.getProperty(key, undefined) === undefined) {\r\n                const value = this.getProperty(key);\r\n                destinationCollection.setProperty(key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Define Speech Recognizer output formats.\r\n * @class OutputFormat\r\n */\r\nexport enum OutputFormat {\r\n    /**\r\n     * @member OutputFormat.Simple\r\n     */\r\n    Simple = 0,\r\n\r\n    /**\r\n     * @member OutputFormat.Detailed\r\n     */\r\n    Detailed,\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines channels used to pass property settings to service.\r\n * Added in version 1.7.0.\r\n */\r\nexport enum ServicePropertyChannel {\r\n    /**\r\n     * Uses URI query parameter to pass property settings to service.\r\n     */\r\n    UriQueryParameter = 0.\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class AudioSourceEvent extends PlatformEvent {\r\n    private privAudioSourceId: string;\r\n\r\n    constructor(eventName: string, audioSourceId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n        this.privAudioSourceId = audioSourceId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n}\r\n\r\nexport class AudioSourceInitializingEvent extends AudioSourceEvent {\r\n    constructor(audioSourceId: string) {\r\n        super(\"AudioSourceInitializingEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceReadyEvent extends AudioSourceEvent {\r\n    constructor(audioSourceId: string) {\r\n        super(\"AudioSourceReadyEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceOffEvent extends AudioSourceEvent {\r\n    constructor(audioSourceId: string) {\r\n        super(\"AudioSourceOffEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceErrorEvent extends AudioSourceEvent {\r\n    private privError: string;\r\n\r\n    constructor(audioSourceId: string, error: string) {\r\n        super(\"AudioSourceErrorEvent\", audioSourceId, EventType.Error);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeEvent extends AudioSourceEvent {\r\n    private privAudioNodeId: string;\r\n\r\n    constructor(eventName: string, audioSourceId: string, audioNodeId: string) {\r\n        super(eventName, audioSourceId);\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeAttachingEvent extends AudioStreamNodeEvent {\r\n    constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeAttachingEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeAttachedEvent extends AudioStreamNodeEvent {\r\n    constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeAttachedEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeDetachedEvent extends AudioStreamNodeEvent {\r\n    constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeDetachedEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeErrorEvent extends AudioStreamNodeEvent {\r\n    private privError: string;\r\n\r\n    constructor(audioSourceId: string, audioNodeId: string, error: string) {\r\n        super(\"AudioStreamNodeErrorEvent\", audioSourceId, audioNodeId);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IStreamChunk, Stream } from \"./Exports\";\r\n\r\nexport class ChunkedArrayBufferStream extends Stream<ArrayBuffer> {\r\n    private privTargetChunkSize: number;\r\n    private privNextBufferToWrite: ArrayBuffer;\r\n    private privNextBufferStartTime: number;\r\n    private privNextBufferReadyBytes: number;\r\n\r\n    constructor(targetChunkSize: number, streamId?: string) {\r\n        super(streamId);\r\n        this.privTargetChunkSize = targetChunkSize;\r\n        this.privNextBufferReadyBytes = 0;\r\n    }\r\n\r\n    public writeStreamChunk(chunk: IStreamChunk<ArrayBuffer>): void {\r\n        // No pending write, and the buffer is the right size so write it.\r\n        if (chunk.isEnd ||\r\n            (0 === this.privNextBufferReadyBytes && chunk.buffer.byteLength === this.privTargetChunkSize)) {\r\n            super.writeStreamChunk(chunk);\r\n            return;\r\n        }\r\n\r\n        let bytesCopiedFromBuffer: number = 0;\r\n\r\n        while (bytesCopiedFromBuffer < chunk.buffer.byteLength) {\r\n            // Fill the next buffer.\r\n            if (undefined === this.privNextBufferToWrite) {\r\n                this.privNextBufferToWrite = new ArrayBuffer(this.privTargetChunkSize);\r\n                this.privNextBufferStartTime = chunk.timeReceived;\r\n            }\r\n\r\n            // Find out how many bytes we can copy into the read buffer.\r\n            const bytesToCopy: number = Math.min(chunk.buffer.byteLength - bytesCopiedFromBuffer, this.privTargetChunkSize - this.privNextBufferReadyBytes);\r\n            const targetView: Uint8Array = new Uint8Array(this.privNextBufferToWrite);\r\n            const sourceView: Uint8Array = new Uint8Array(chunk.buffer.slice(bytesCopiedFromBuffer, bytesToCopy + bytesCopiedFromBuffer));\r\n\r\n            targetView.set(sourceView, this.privNextBufferReadyBytes);\r\n            this.privNextBufferReadyBytes += bytesToCopy;\r\n            bytesCopiedFromBuffer += bytesToCopy;\r\n\r\n            // Are we ready to write?\r\n            if (this.privNextBufferReadyBytes === this.privTargetChunkSize) {\r\n                super.writeStreamChunk({\r\n                    buffer: this.privNextBufferToWrite,\r\n                    isEnd: false,\r\n                    timeReceived: this.privNextBufferStartTime,\r\n                });\r\n                this.privNextBufferReadyBytes = 0;\r\n                this.privNextBufferToWrite = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        // Send whatever is pending, then close the base class.\r\n        if (0 !== this.privNextBufferReadyBytes && !this.isClosed) {\r\n            super.writeStreamChunk({\r\n                buffer: this.privNextBufferToWrite.slice(0, this.privNextBufferReadyBytes),\r\n                isEnd: false,\r\n                timeReceived: this.privNextBufferStartTime,\r\n            });\r\n        }\r\n\r\n        super.close();\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { Queue } from \"./Queue\";\r\n\r\nexport interface IStreamChunk<TBuffer> {\r\n    isEnd: boolean;\r\n    buffer: TBuffer;\r\n    timeReceived: number;\r\n}\r\n\r\nexport class Stream<TBuffer> {\r\n    private privId: string;\r\n    private privIsWriteEnded: boolean = false;\r\n    private privIsReadEnded: boolean = false;\r\n    private privReaderQueue: Queue<IStreamChunk<TBuffer>>;\r\n\r\n    public constructor(streamId?: string) {\r\n        this.privId = streamId ? streamId : createNoDashGuid();\r\n        this.privReaderQueue = new Queue<IStreamChunk<TBuffer>>();\r\n    }\r\n\r\n    public get isClosed(): boolean {\r\n        return this.privIsWriteEnded;\r\n    }\r\n\r\n    public get isReadEnded(): boolean {\r\n        return this.privIsReadEnded;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public close(): void {\r\n        if (!this.privIsWriteEnded) {\r\n            this.writeStreamChunk({\r\n                buffer: null,\r\n                isEnd: true,\r\n                timeReceived: Date.now(),\r\n            });\r\n            this.privIsWriteEnded = true;\r\n        }\r\n    }\r\n\r\n    public writeStreamChunk(streamChunk: IStreamChunk<TBuffer>): void {\r\n        this.throwIfClosed();\r\n        if (!this.privReaderQueue.isDisposed()) {\r\n            try {\r\n                this.privReaderQueue.enqueue(streamChunk);\r\n            } catch (e) {\r\n                // Do nothing\r\n            }\r\n        }\r\n    }\r\n\r\n    public read = (): Promise<IStreamChunk<TBuffer>> => {\r\n        if (this.privIsReadEnded) {\r\n            throw new InvalidOperationError(\"Stream read has already finished\");\r\n        }\r\n\r\n        return this.privReaderQueue\r\n            .dequeue()\r\n            .then(async (streamChunk: IStreamChunk<TBuffer>) => {\r\n                if (streamChunk === undefined || streamChunk.isEnd) {\r\n                    await this.privReaderQueue.dispose(\"End of stream reached\");\r\n                }\r\n\r\n                return streamChunk;\r\n            });\r\n    }\r\n    public readEnded = (): void => {\r\n        if (!this.privIsReadEnded) {\r\n            this.privIsReadEnded = true;\r\n            this.privReaderQueue = new Queue<IStreamChunk<TBuffer>>();\r\n        }\r\n    }\r\n\r\n    private throwIfClosed = (): void => {\r\n        if (this.privIsWriteEnded) {\r\n            throw new InvalidOperationError(\"Stream closed\");\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError } from \"./Error\";\r\nimport { EventSource } from \"./EventSource\";\r\nimport { IEventSource } from \"./IEventSource\";\r\nimport { PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class Events {\r\n    private static privInstance: IEventSource<PlatformEvent> = new EventSource<PlatformEvent>();\r\n\r\n    public static setEventSource = (eventSource: IEventSource<PlatformEvent>): void => {\r\n        if (!eventSource) {\r\n            throw new ArgumentNullError(\"eventSource\");\r\n        }\r\n\r\n        Events.privInstance = eventSource;\r\n    }\r\n\r\n    public static get instance(): IEventSource<PlatformEvent> {\r\n        return Events.privInstance;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the possible reasons a recognition result might be canceled.\r\n * @class CancellationReason\r\n */\r\nexport enum CancellationReason {\r\n    /**\r\n     * Indicates that an error occurred during speech recognition.\r\n     * @member CancellationReason.Error\r\n     */\r\n    Error,\r\n\r\n    /**\r\n     * Indicates that the end of the audio stream was reached.\r\n     * @member CancellationReason.EndOfStream\r\n     */\r\n    EndOfStream,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n *  Defines error code in case that CancellationReason is Error.\r\n *  Added in version 1.1.0.\r\n */\r\nexport enum CancellationErrorCode {\r\n    /**\r\n     * Indicates that no error occurred during speech recognition.\r\n     */\r\n    NoError,\r\n\r\n    /**\r\n     * Indicates an authentication error.\r\n     */\r\n    AuthenticationFailure,\r\n\r\n    /**\r\n     * Indicates that one or more recognition parameters are invalid.\r\n     */\r\n    BadRequestParameters,\r\n\r\n    /**\r\n     * Indicates that the number of parallel requests exceeded the number of allowed\r\n     * concurrent transcriptions for the subscription.\r\n     */\r\n    TooManyRequests,\r\n\r\n    /**\r\n     * Indicates a connection error.\r\n     */\r\n    ConnectionFailure,\r\n\r\n    /**\r\n     * Indicates a time-out error when waiting for response from service.\r\n     */\r\n    ServiceTimeout,\r\n\r\n    /**\r\n     * Indicates that an error is returned by the service.\r\n     */\r\n    ServiceError,\r\n\r\n    /**\r\n     * Indicates an unexpected runtime error.\r\n     */\r\n    RuntimeError,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the possible reasons a recognition result might be generated.\r\n * @class ResultReason\r\n */\r\nexport enum ResultReason {\r\n    /**\r\n     * Indicates speech could not be recognized. More details\r\n     * can be found in the NoMatchDetails object.\r\n     * @member ResultReason.NoMatch\r\n     */\r\n    NoMatch,\r\n\r\n    /**\r\n     * Indicates that the recognition was canceled. More details\r\n     * can be found using the CancellationDetails object.\r\n     * @member ResultReason.Canceled\r\n     */\r\n    Canceled,\r\n\r\n    /**\r\n     * Indicates the speech result contains hypothesis text.\r\n     * @member ResultReason.RecognizedSpeech\r\n     */\r\n    RecognizingSpeech,\r\n\r\n    /**\r\n     * Indicates the speech result contains final text that has been recognized.\r\n     * Speech Recognition is now complete for this phrase.\r\n     * @member ResultReason.RecognizedSpeech\r\n     */\r\n    RecognizedSpeech,\r\n\r\n    /**\r\n     * Indicates the intent result contains hypothesis text and intent.\r\n     * @member ResultReason.RecognizingIntent\r\n     */\r\n    RecognizingIntent,\r\n\r\n    /**\r\n     * Indicates the intent result contains final text and intent.\r\n     * Speech Recognition and Intent determination are now complete for this phrase.\r\n     * @member ResultReason.RecognizedIntent\r\n     */\r\n    RecognizedIntent,\r\n\r\n    /**\r\n     * Indicates the translation result contains hypothesis text and its translation(s).\r\n     * @member ResultReason.TranslatingSpeech\r\n     */\r\n    TranslatingSpeech,\r\n\r\n    /**\r\n     * Indicates the translation result contains final text and corresponding translation(s).\r\n     * Speech Recognition and Translation are now complete for this phrase.\r\n     * @member ResultReason.TranslatedSpeech\r\n     */\r\n    TranslatedSpeech,\r\n\r\n    /**\r\n     * Indicates the synthesized audio result contains a non-zero amount of audio data\r\n     * @member ResultReason.SynthesizingAudio\r\n     */\r\n    SynthesizingAudio,\r\n\r\n    /**\r\n     * Indicates the synthesized audio is now complete for this phrase.\r\n     * @member ResultReason.SynthesizingAudioCompleted\r\n     */\r\n    SynthesizingAudioCompleted,\r\n\r\n    /**\r\n     * Indicates the speech synthesis is now started\r\n     * @member ResultReason.SynthesizingAudioStarted\r\n     */\r\n    SynthesizingAudioStarted,\r\n\r\n    /**\r\n     * Indicates the voice profile is being enrolled and customers need to send more audio to create a voice profile.\r\n     * @member ResultReason.EnrollingVoiceProfile\r\n     */\r\n    EnrollingVoiceProfile,\r\n\r\n    /**\r\n     * Indicates the voice profile has been enrolled.\r\n     * @member ResultReason.EnrolledVoiceProfile\r\n     */\r\n    EnrolledVoiceProfile,\r\n\r\n    /**\r\n     * Indicates successful identification of some speakers.\r\n     * @member ResultReason.RecognizedSpeakers\r\n     */\r\n    RecognizedSpeakers,\r\n\r\n    /**\r\n     * Indicates successfully verified one speaker.\r\n     * @member ResultReason.RecognizedSpeaker\r\n     */\r\n    RecognizedSpeaker,\r\n\r\n    /**\r\n     * Indicates a voice profile has been reset successfully.\r\n     * @member ResultReason.ResetVoiceProfile\r\n     */\r\n    ResetVoiceProfile,\r\n\r\n    /**\r\n     * Indicates a voice profile has been deleted successfully.\r\n     * @member ResultReason.DeletedVoiceProfile\r\n     */\r\n    DeletedVoiceProfile,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { ConnectionMessage } from \"./ConnectionMessage\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class ServiceEvent extends PlatformEvent {\r\n    private privJsonResult: string;\r\n\r\n    constructor(eventName: string, jsonstring: string, eventType: EventType = EventType.Info) {\r\n      super(eventName, eventType);\r\n      this.privJsonResult = jsonstring;\r\n    }\r\n\r\n    public get jsonString(): string {\r\n        return this.privJsonResult;\r\n    }\r\n}\r\n\r\nexport class ConnectionEvent extends PlatformEvent {\r\n    private privConnectionId: string;\r\n\r\n    constructor(eventName: string, connectionId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n        this.privConnectionId = connectionId;\r\n    }\r\n\r\n    public get connectionId(): string {\r\n        return this.privConnectionId;\r\n    }\r\n}\r\n\r\nexport class ConnectionStartEvent extends ConnectionEvent {\r\n    private privUri: string;\r\n    private privHeaders: IStringDictionary<string>;\r\n\r\n    constructor(connectionId: string, uri: string, headers?: IStringDictionary<string>) {\r\n        super(\"ConnectionStartEvent\", connectionId);\r\n        this.privUri = uri;\r\n        this.privHeaders = headers;\r\n    }\r\n\r\n    public get uri(): string {\r\n        return this.privUri;\r\n    }\r\n\r\n    public get headers(): IStringDictionary<string> {\r\n        return this.privHeaders;\r\n    }\r\n}\r\n\r\nexport class ConnectionEstablishedEvent extends ConnectionEvent {\r\n    constructor(connectionId: string, metadata?: IStringDictionary<string>) {\r\n        super(\"ConnectionEstablishedEvent\", connectionId);\r\n    }\r\n}\r\n\r\nexport class ConnectionClosedEvent extends ConnectionEvent {\r\n    private privReason: string;\r\n    private privStatusCode: number;\r\n\r\n    constructor(connectionId: string, statusCode: number, reason: string) {\r\n        super(\"ConnectionClosedEvent\", connectionId, EventType.Debug);\r\n        this.privReason = reason;\r\n        this.privStatusCode = statusCode;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n}\r\n\r\nexport class ConnectionErrorEvent extends ConnectionEvent {\r\n    private readonly privMessage: string;\r\n    private readonly privType: string;\r\n\r\n    constructor(connectionId: string, message: string, type: string) {\r\n        super(\"ConnectionErrorEvent\", connectionId, EventType.Debug);\r\n        this.privMessage = message;\r\n        this.privType = type;\r\n    }\r\n\r\n    public get message(): string {\r\n        return this.privMessage;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privType;\r\n    }\r\n}\r\n\r\nexport class ConnectionEstablishErrorEvent extends ConnectionEvent {\r\n    private privStatusCode: number;\r\n    private privReason: string;\r\n\r\n    constructor(connectionId: string, statuscode: number, reason: string) {\r\n        super(\"ConnectionEstablishErrorEvent\", connectionId, EventType.Error);\r\n        this.privStatusCode = statuscode;\r\n        this.privReason = reason;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n}\r\n\r\nexport class ConnectionMessageReceivedEvent extends ConnectionEvent {\r\n    private privNetworkReceivedTime: string;\r\n    private privMessage: ConnectionMessage;\r\n\r\n    constructor(connectionId: string, networkReceivedTimeISO: string, message: ConnectionMessage) {\r\n        super(\"ConnectionMessageReceivedEvent\", connectionId);\r\n        this.privNetworkReceivedTime = networkReceivedTimeISO;\r\n        this.privMessage = message;\r\n    }\r\n\r\n    public get networkReceivedTime(): string {\r\n        return this.privNetworkReceivedTime;\r\n    }\r\n\r\n    public get message(): ConnectionMessage {\r\n        return this.privMessage;\r\n    }\r\n}\r\n\r\nexport class ConnectionMessageSentEvent extends ConnectionEvent {\r\n    private privNetworkSentTime: string;\r\n    private privMessage: ConnectionMessage;\r\n\r\n    constructor(connectionId: string, networkSentTimeISO: string, message: ConnectionMessage) {\r\n        super(\"ConnectionMessageSentEvent\", connectionId);\r\n        this.privNetworkSentTime = networkSentTimeISO;\r\n        this.privMessage = message;\r\n    }\r\n\r\n    public get networkSentTime(): string {\r\n        return this.privNetworkSentTime;\r\n    }\r\n\r\n    public get message(): ConnectionMessage {\r\n        return this.privMessage;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ConnectionEvent } from \"./ConnectionEvents\";\r\nimport { ConnectionMessage } from \"./ConnectionMessage\";\r\nimport { ConnectionOpenResponse } from \"./ConnectionOpenResponse\";\r\nimport { EventSource } from \"./EventSource\";\r\n\r\nexport enum ConnectionState {\r\n    None,\r\n    Connected,\r\n    Connecting,\r\n    Disconnected,\r\n}\r\n\r\nexport interface IConnection {\r\n    id: string;\r\n    state(): ConnectionState;\r\n    open(): Promise<ConnectionOpenResponse>;\r\n    send(message: ConnectionMessage): Promise<void>;\r\n    read(): Promise<ConnectionMessage>;\r\n    events: EventSource<ConnectionEvent>;\r\n    dispose(disposing?: string): Promise<void>;\r\n}\r\n","\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    EventType,\r\n    PlatformEvent\r\n} from \"./Exports\";\r\n\r\nexport class BackgroundEvent extends PlatformEvent {\r\n    private privError: string;\r\n\r\n    constructor(error: string) {\r\n        super(\"BackgroundEvent\", EventType.Error);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { MessageType } from \"./ConnectionMessage\";\r\nimport { ArgumentNullError, InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\n\r\nexport class RawWebsocketMessage {\r\n    private privMessageType: MessageType;\r\n    private privPayload: any = null;\r\n    private privId: string;\r\n\r\n    public constructor(messageType: MessageType, payload: any, id?: string) {\r\n        if (!payload) {\r\n            throw new ArgumentNullError(\"payload\");\r\n        }\r\n\r\n        if (messageType === MessageType.Binary && payload.__proto__.constructor.name !== \"ArrayBuffer\") {\r\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\r\n        }\r\n\r\n        if (messageType === MessageType.Text && !(typeof (payload) === \"string\")) {\r\n            throw new InvalidOperationError(\"Payload must be a string\");\r\n        }\r\n\r\n        this.privMessageType = messageType;\r\n        this.privPayload = payload;\r\n        this.privId = id ? id : createNoDashGuid();\r\n    }\r\n\r\n    public get messageType(): MessageType {\r\n        return this.privMessageType;\r\n    }\r\n\r\n    public get payload(): any {\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get textContent(): string {\r\n        if (this.privMessageType === MessageType.Binary) {\r\n            throw new InvalidOperationError(\"Not supported for binary message\");\r\n        }\r\n\r\n        return this.privPayload as string;\r\n    }\r\n\r\n    public get binaryContent(): ArrayBuffer {\r\n        if (this.privMessageType === MessageType.Text) {\r\n            throw new InvalidOperationError(\"Not supported for text message\");\r\n        }\r\n\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SessionEventArgs } from \"./Exports\";\r\n\r\n/**\r\n * Defines payload for session events like Speech Start/End Detected\r\n * @class\r\n */\r\nexport class RecognitionEventArgs extends SessionEventArgs {\r\n    private privOffset: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(offset: number, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privOffset = offset;\r\n    }\r\n\r\n    /**\r\n     * Represents the message offset\r\n     * @member RecognitionEventArgs.prototype.offset\r\n     * @function\r\n     * @public\r\n     */\r\n    public get offset(): number {\r\n        return this.privOffset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines content for session events like SessionStarted/Stopped, SoundStarted/Stopped.\r\n * @class SessionEventArgs\r\n */\r\nexport class SessionEventArgs {\r\n    private privSessionId: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(sessionId: string) {\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    /**\r\n     * Represents the session identifier.\r\n     * @member SessionEventArgs.prototype.sessionId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Represents the session identifier.\r\n     */\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class RiffPcmEncoder {\r\n\r\n    private privActualSampleRate: number;\r\n    private privDesiredSampleRate: number;\r\n\r\n    public constructor(actualSampleRate: number, desiredSampleRate: number) {\r\n        this.privActualSampleRate = actualSampleRate;\r\n        this.privDesiredSampleRate = desiredSampleRate;\r\n    }\r\n\r\n    public encode = (\r\n        actualAudioFrame: Float32Array): ArrayBuffer => {\r\n\r\n        const audioFrame = this.downSampleAudioFrame(actualAudioFrame, this.privActualSampleRate, this.privDesiredSampleRate);\r\n\r\n        if (!audioFrame) {\r\n            return null;\r\n        }\r\n\r\n        const audioLength = audioFrame.length * 2;\r\n\r\n        const buffer = new ArrayBuffer(audioLength);\r\n        const view = new DataView(buffer);\r\n        this.floatTo16BitPCM(view, 0, audioFrame);\r\n\r\n        return buffer;\r\n    }\r\n\r\n    private setString = (view: DataView, offset: number, str: string): void => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint8(offset + i, str.charCodeAt(i));\r\n        }\r\n    }\r\n\r\n    private floatTo16BitPCM = (view: DataView, offset: number, input: Float32Array): void => {\r\n        for (let i = 0; i < input.length; i++ , offset += 2) {\r\n            const s = Math.max(-1, Math.min(1, input[i]));\r\n            view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\r\n        }\r\n    }\r\n\r\n    private downSampleAudioFrame = (\r\n        srcFrame: Float32Array,\r\n        srcRate: number,\r\n        dstRate: number): Float32Array => {\r\n\r\n        if (dstRate === srcRate || dstRate > srcRate) {\r\n            return srcFrame;\r\n        }\r\n\r\n        const ratio = srcRate / dstRate;\r\n        const dstLength = Math.round(srcFrame.length / ratio);\r\n        const dstFrame = new Float32Array(dstLength);\r\n        let srcOffset = 0;\r\n        let dstOffset = 0;\r\n        while (dstOffset < dstLength) {\r\n            const nextSrcOffset = Math.round((dstOffset + 1) * ratio);\r\n            let accum = 0;\r\n            let count = 0;\r\n            while (srcOffset < nextSrcOffset && srcOffset < srcFrame.length) {\r\n                accum += srcFrame[srcOffset++];\r\n                count++;\r\n            }\r\n            dstFrame[dstOffset++] = accum / count;\r\n        }\r\n\r\n        return dstFrame;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RiffPcmEncoder, Stream } from \"../common/Exports\";\r\nimport { IRecorder } from \"./IRecorder\";\r\n\r\nexport class PcmRecorder implements IRecorder {\r\n    private privMediaResources: IMediaResources;\r\n    private privSpeechProcessorScript: string; // speech-processor.js Url\r\n\r\n    public record = (context: AudioContext, mediaStream: MediaStream, outputStream: Stream<ArrayBuffer>): void => {\r\n        const desiredSampleRate = 16000;\r\n\r\n        const scriptNode = (() => {\r\n            let bufferSize = 0;\r\n            try {\r\n                return context.createScriptProcessor(bufferSize, 1, 1);\r\n            } catch (error) {\r\n                // Webkit (<= version 31) requires a valid bufferSize.\r\n                bufferSize = 2048;\r\n                let audioSampleRate = context.sampleRate;\r\n                while (bufferSize < 16384 && audioSampleRate >= (2 * desiredSampleRate)) {\r\n                    bufferSize <<= 1;\r\n                    audioSampleRate >>= 1;\r\n                }\r\n                return context.createScriptProcessor(bufferSize, 1, 1);\r\n            }\r\n        })();\r\n\r\n        const waveStreamEncoder = new RiffPcmEncoder(context.sampleRate, desiredSampleRate);\r\n        let needHeader: boolean = true;\r\n        const that = this;\r\n        scriptNode.onaudioprocess = (event: AudioProcessingEvent) => {\r\n            const inputFrame = event.inputBuffer.getChannelData(0);\r\n\r\n            if (outputStream && !outputStream.isClosed) {\r\n                const waveFrame = waveStreamEncoder.encode(inputFrame);\r\n                if (!!waveFrame) {\r\n                    outputStream.writeStreamChunk({\r\n                        buffer: waveFrame,\r\n                        isEnd: false,\r\n                        timeReceived: Date.now(),\r\n                    });\r\n                    needHeader = false;\r\n                }\r\n            }\r\n        };\r\n\r\n        const micInput = context.createMediaStreamSource(mediaStream);\r\n\r\n        // https://webaudio.github.io/web-audio-api/#audioworklet\r\n        // Using AudioWorklet to improve audio quality and avoid audio glitches due to blocking the UI thread\r\n\r\n        if (!!this.privSpeechProcessorScript && !!context.audioWorklet) {\r\n            context.audioWorklet\r\n                .addModule(this.privSpeechProcessorScript)\r\n                .then(() => {\r\n                    const workletNode = new AudioWorkletNode(context, \"speech-processor\");\r\n                    workletNode.port.onmessage = (ev: MessageEvent) => {\r\n                        const inputFrame: Float32Array = ev.data as Float32Array;\r\n\r\n                        if (outputStream && !outputStream.isClosed) {\r\n                            const waveFrame = waveStreamEncoder.encode(inputFrame);\r\n                            if (!!waveFrame) {\r\n                                outputStream.writeStreamChunk({\r\n                                    buffer: waveFrame,\r\n                                    isEnd: false,\r\n                                    timeReceived: Date.now(),\r\n                                });\r\n                                needHeader = false;\r\n                            }\r\n                        }\r\n                    };\r\n                    micInput.connect(workletNode);\r\n                    workletNode.connect(context.destination);\r\n                    this.privMediaResources = {\r\n                        scriptProcessorNode: workletNode,\r\n                        source: micInput,\r\n                        stream: mediaStream,\r\n                    };\r\n                })\r\n                .catch(() => {\r\n                    micInput.connect(scriptNode);\r\n                    scriptNode.connect(context.destination);\r\n                    this.privMediaResources = {\r\n                        scriptProcessorNode: scriptNode,\r\n                        source: micInput,\r\n                        stream: mediaStream,\r\n                    };\r\n                });\r\n        } else {\r\n            micInput.connect(scriptNode);\r\n            scriptNode.connect(context.destination);\r\n            this.privMediaResources = {\r\n                scriptProcessorNode: scriptNode,\r\n                source: micInput,\r\n                stream: mediaStream,\r\n            };\r\n        }\r\n    }\r\n\r\n    public releaseMediaResources = (context: AudioContext): void => {\r\n        if (this.privMediaResources) {\r\n            if (this.privMediaResources.scriptProcessorNode) {\r\n                this.privMediaResources.scriptProcessorNode.disconnect(context.destination);\r\n                this.privMediaResources.scriptProcessorNode = null;\r\n            }\r\n            if (this.privMediaResources.source) {\r\n                this.privMediaResources.source.disconnect();\r\n                this.privMediaResources.stream.getTracks().forEach((track: any) => track.stop());\r\n                this.privMediaResources.source = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public setWorkletUrl(url: string): void {\r\n        this.privSpeechProcessorScript = url;\r\n    }\r\n}\r\n\r\ninterface IMediaResources {\r\n    source: MediaStreamAudioSourceNode;\r\n    scriptProcessorNode: ScriptProcessorNode | AudioWorkletNode;\r\n    stream: MediaStream;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    connectivity,\r\n    ISpeechConfigAudioDevice,\r\n    type\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    AudioSourceErrorEvent,\r\n    AudioSourceEvent,\r\n    AudioSourceInitializingEvent,\r\n    AudioSourceOffEvent,\r\n    AudioSourceReadyEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    AudioStreamNodeErrorEvent,\r\n    ChunkedArrayBufferStream,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IStringDictionary,\r\n    Stream,\r\n} from \"../common/Exports\";\r\nimport {\r\n    AudioStreamFormat,\r\n    AudioStreamFormatImpl,\r\n} from \"../sdk/Audio/AudioStreamFormat\";\r\nimport { IRecorder } from \"./IRecorder\";\r\n\r\n// Extending the default definition with browser specific definitions for backward compatibility\r\ninterface INavigator extends Navigator {\r\n    webkitGetUserMedia?: (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback) => void;\r\n    mozGetUserMedia?: (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback) => void;\r\n    msGetUserMedia?: (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback) => void;\r\n}\r\n\r\nexport const AudioWorkletSourceURLPropertyName = \"MICROPHONE-WorkletSourceUrl\";\r\n\r\nexport class MicAudioSource implements IAudioSource {\r\n\r\n    private static readonly AUDIOFORMAT: AudioStreamFormatImpl = AudioStreamFormat.getDefaultInputFormat() as AudioStreamFormatImpl;\r\n\r\n    private privStreams: IStringDictionary<Stream<ArrayBuffer>> = {};\r\n\r\n    private privId: string;\r\n\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n\r\n    private privInitializeDeferral: Deferred<void>;\r\n\r\n    private privMediaStream: MediaStream;\r\n\r\n    private privContext: AudioContext;\r\n\r\n    private privMicrophoneLabel: string;\r\n\r\n    private privOutputChunkSize: number;\r\n\r\n    public constructor(\r\n        private readonly privRecorder: IRecorder,\r\n        private readonly deviceId?: string,\r\n        audioSourceId?: string,\r\n        mediaStream?: MediaStream\r\n        ) {\r\n\r\n        this.privOutputChunkSize = MicAudioSource.AUDIOFORMAT.avgBytesPerSec / 10;\r\n        this.privId = audioSourceId ? audioSourceId : createNoDashGuid();\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privMediaStream = mediaStream || null;\r\n    }\r\n\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return Promise.resolve(MicAudioSource.AUDIOFORMAT);\r\n    }\r\n\r\n    public get blob(): Promise<Blob> {\r\n        return Promise.reject(\"Not implemented for Mic input\");\r\n    }\r\n\r\n    public turnOn = (): Promise<void> => {\r\n        if (this.privInitializeDeferral) {\r\n            return this.privInitializeDeferral.promise;\r\n        }\r\n\r\n        this.privInitializeDeferral = new Deferred<void>();\r\n\r\n        try {\r\n            this.createAudioContext();\r\n        } catch (error) {\r\n            if (error instanceof Error) {\r\n                const typedError: Error = error as Error;\r\n                this.privInitializeDeferral.reject(typedError.name + \": \" + typedError.message);\r\n            } else {\r\n                this.privInitializeDeferral.reject(error);\r\n            }\r\n            return this.privInitializeDeferral.promise;\r\n        }\r\n\r\n        const nav = window.navigator as INavigator;\r\n\r\n        let getUserMedia = (\r\n            nav.getUserMedia ||\r\n            nav.webkitGetUserMedia ||\r\n            nav.mozGetUserMedia ||\r\n            nav.msGetUserMedia\r\n        );\r\n\r\n        if (!!nav.mediaDevices) {\r\n            getUserMedia = (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback): void => {\r\n                nav.mediaDevices\r\n                    .getUserMedia(constraints)\r\n                    .then(successCallback)\r\n                    .catch(errorCallback);\r\n            };\r\n        }\r\n\r\n        if (!getUserMedia) {\r\n            const errorMsg = \"Browser does not support getUserMedia.\";\r\n            this.privInitializeDeferral.reject(errorMsg);\r\n            this.onEvent(new AudioSourceErrorEvent(errorMsg, \"\")); // mic initialized error - no streamid at this point\r\n        } else {\r\n            const next = () => {\r\n                this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n                if (this.privMediaStream && this.privMediaStream.active) {\r\n                    this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n                    this.privInitializeDeferral.resolve();\r\n                } else {\r\n                    getUserMedia(\r\n                        { audio: this.deviceId ? { deviceId: this.deviceId } : true, video: false },\r\n                        (mediaStream: MediaStream) => {\r\n                            this.privMediaStream = mediaStream;\r\n                            this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n                            this.privInitializeDeferral.resolve();\r\n                        }, (error: MediaStreamError) => {\r\n                            const errorMsg = `Error occurred during microphone initialization: ${error}`;\r\n                            this.privInitializeDeferral.reject(errorMsg);\r\n                            this.onEvent(new AudioSourceErrorEvent(this.privId, errorMsg));\r\n                        });\r\n                }\r\n            };\r\n\r\n            if (this.privContext.state === \"suspended\") {\r\n                // NOTE: On iOS, the Web Audio API requires sounds to be triggered from an explicit user action.\r\n                // https://github.com/WebAudio/web-audio-api/issues/790\r\n                this.privContext.resume()\r\n                    .then(next)\r\n                    .catch((reason: any) => {\r\n                        this.privInitializeDeferral.reject(`Failed to initialize audio context: ${reason}`);\r\n                    });\r\n            } else {\r\n                next();\r\n            }\r\n        }\r\n\r\n        return this.privInitializeDeferral.promise;\r\n    }\r\n\r\n    public id = (): string => {\r\n        return this.privId;\r\n    }\r\n\r\n    public attach = (audioNodeId: string): Promise<IAudioStreamNode> => {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        return this.listen(audioNodeId).then<IAudioStreamNode>(\r\n            (stream: Stream<ArrayBuffer>) => {\r\n                this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n                return {\r\n                    detach: async () => {\r\n                        stream.readEnded();\r\n                        delete this.privStreams[audioNodeId];\r\n                        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                        return this.turnOff();\r\n                    },\r\n                    id: () => {\r\n                        return audioNodeId;\r\n                    },\r\n                    read: () => {\r\n                        return stream.read();\r\n                    },\r\n                };\r\n            });\r\n    }\r\n\r\n    public detach = (audioNodeId: string): void => {\r\n        if (audioNodeId && this.privStreams[audioNodeId]) {\r\n            this.privStreams[audioNodeId].close();\r\n            delete this.privStreams[audioNodeId];\r\n            this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n        }\r\n    }\r\n\r\n    public async turnOff(): Promise<void> {\r\n        for (const streamId in this.privStreams) {\r\n            if (streamId) {\r\n                const stream = this.privStreams[streamId];\r\n                if (stream) {\r\n                    stream.close();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onEvent(new AudioSourceOffEvent(this.privId)); // no stream now\r\n        if (this.privInitializeDeferral) {\r\n            // Correctly handle when browser forces mic off before turnOn() completes\r\n            await this.privInitializeDeferral;\r\n            this.privInitializeDeferral = null;\r\n        }\r\n\r\n        await this.destroyAudioContext();\r\n\r\n        return;\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return this.getMicrophoneLabel().then((label: string) => {\r\n            return {\r\n                bitspersample: MicAudioSource.AUDIOFORMAT.bitsPerSample,\r\n                channelcount: MicAudioSource.AUDIOFORMAT.channels,\r\n                connectivity: connectivity.Unknown,\r\n                manufacturer: \"Speech SDK\",\r\n                model: label,\r\n                samplerate: MicAudioSource.AUDIOFORMAT.samplesPerSec,\r\n                type: type.Microphones,\r\n            };\r\n        });\r\n    }\r\n\r\n    public setProperty(name: string, value: string): void {\r\n        if (name === AudioWorkletSourceURLPropertyName) {\r\n            this.privRecorder.setWorkletUrl(value);\r\n        } else {\r\n            throw new Error(\"Property '\" + name + \"' is not supported on Microphone.\");\r\n        }\r\n    }\r\n\r\n    private getMicrophoneLabel(): Promise<string> {\r\n        const defaultMicrophoneName: string = \"microphone\";\r\n\r\n        // If we did this already, return the value.\r\n        if (this.privMicrophoneLabel !== undefined) {\r\n            return Promise.resolve(this.privMicrophoneLabel);\r\n        }\r\n\r\n        // If the stream isn't currently running, we can't query devices because security.\r\n        if (this.privMediaStream === undefined || !this.privMediaStream.active) {\r\n            return Promise.resolve(defaultMicrophoneName);\r\n        }\r\n\r\n        // Setup a default\r\n        this.privMicrophoneLabel = defaultMicrophoneName;\r\n\r\n        // Get the id of the device running the audio track.\r\n        const microphoneDeviceId: string = this.privMediaStream.getTracks()[0].getSettings().deviceId;\r\n\r\n        // If the browser doesn't support getting the device ID, set a default and return.\r\n        if (undefined === microphoneDeviceId) {\r\n            return Promise.resolve(this.privMicrophoneLabel);\r\n        }\r\n\r\n        const deferred: Deferred<string> = new Deferred<string>();\r\n\r\n        // Enumerate the media devices.\r\n        navigator.mediaDevices.enumerateDevices().then((devices: MediaDeviceInfo[]) => {\r\n            for (const device of devices) {\r\n                if (device.deviceId === microphoneDeviceId) {\r\n                    // Found the device\r\n                    this.privMicrophoneLabel = device.label;\r\n                    break;\r\n                }\r\n            }\r\n            deferred.resolve(this.privMicrophoneLabel);\r\n        }, () => deferred.resolve(this.privMicrophoneLabel));\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    private listen = async (audioNodeId: string): Promise<Stream<ArrayBuffer>> => {\r\n        await this.turnOn();\r\n        const stream = new ChunkedArrayBufferStream(this.privOutputChunkSize, audioNodeId);\r\n        this.privStreams[audioNodeId] = stream;\r\n        try {\r\n            this.privRecorder.record(this.privContext, this.privMediaStream, stream);\r\n        } catch (error) {\r\n            this.onEvent(new AudioStreamNodeErrorEvent(this.privId, audioNodeId, error));\r\n            throw error;\r\n        }\r\n        const result: Stream<ArrayBuffer> = stream;\r\n        return result;\r\n    }\r\n\r\n    private onEvent = (event: AudioSourceEvent): void => {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private createAudioContext = (): void => {\r\n        if (!!this.privContext) {\r\n            return;\r\n        }\r\n\r\n        this.privContext = AudioStreamFormatImpl.getAudioContext(MicAudioSource.AUDIOFORMAT.samplesPerSec);\r\n    }\r\n\r\n    private async destroyAudioContext(): Promise<void> {\r\n        if (!this.privContext) {\r\n            return;\r\n        }\r\n\r\n        this.privRecorder.releaseMediaResources(this.privContext);\r\n\r\n        // This pattern brought to you by a bug in the TypeScript compiler where it\r\n        // confuses the (\"close\" in this.privContext) with this.privContext always being null as the alternate.\r\n        // https://github.com/Microsoft/TypeScript/issues/11498\r\n        let hasClose: boolean = false;\r\n        if (\"close\" in this.privContext) {\r\n            hasClose = true;\r\n        }\r\n\r\n        if (hasClose) {\r\n            await this.privContext.close();\r\n            this.privContext = null;\r\n        } else if (null !== this.privContext && this.privContext.state === \"running\") {\r\n            // Suspend actually takes a callback, but analogous to the\r\n            // resume method, it'll be only fired if suspend is called\r\n            // in a direct response to a user action. The later is not always\r\n            // the case, as TurnOff is also called, when we receive an\r\n            // end-of-speech message from the service. So, doing a best effort\r\n            // fire-and-forget here.\r\n            await this.privContext.suspend();\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    connectivity,\r\n    ISpeechConfigAudioDevice,\r\n    type,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    AudioSourceErrorEvent,\r\n    AudioSourceEvent,\r\n    AudioSourceInitializingEvent,\r\n    AudioSourceOffEvent,\r\n    AudioSourceReadyEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    AudioStreamNodeErrorEvent,\r\n    ChunkedArrayBufferStream,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IStreamChunk,\r\n    IStringDictionary,\r\n    Stream,\r\n} from \"../common/Exports\";\r\nimport { AudioStreamFormat, AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat\";\r\n\r\nexport class FileAudioSource implements IAudioSource {\r\n\r\n    private privAudioFormatPromise: Promise<AudioStreamFormatImpl>;\r\n\r\n    private privStreams: IStringDictionary<Stream<ArrayBuffer>> = {};\r\n\r\n    private privId: string;\r\n\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n\r\n    private privSource: Blob | Buffer;\r\n\r\n    private privFilename: string;\r\n\r\n    private privHeaderEnd: number = 44;\r\n\r\n    public constructor(file: File | Buffer, filename?: string, audioSourceId?: string) {\r\n        this.privId = audioSourceId ? audioSourceId : createNoDashGuid();\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privSource = file;\r\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && this.privSource instanceof Blob) {\r\n            this.privFilename = (file as File).name;\r\n        } else {\r\n            this.privFilename = filename || \"unknown.wav\";\r\n        }\r\n\r\n        // Read the header.\r\n        this.privAudioFormatPromise = this.readHeader();\r\n    }\r\n\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return this.privAudioFormatPromise;\r\n    }\r\n\r\n    public get blob(): Promise<Blob | Buffer> {\r\n        return Promise.resolve(this.privSource);\r\n    }\r\n\r\n    public turnOn = (): Promise<void> => {\r\n        if (this.privFilename.lastIndexOf(\".wav\") !== this.privFilename.length - 4) {\r\n            const errorMsg = this.privFilename + \" is not supported. Only WAVE files are allowed at the moment.\";\r\n            this.onEvent(new AudioSourceErrorEvent(errorMsg, \"\"));\r\n            return Promise.reject(errorMsg);\r\n        }\r\n\r\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n        return;\r\n    }\r\n\r\n    public id = (): string => {\r\n        return this.privId;\r\n    }\r\n\r\n    public attach = async (audioNodeId: string): Promise<IAudioStreamNode> => {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        const stream: Stream<ArrayBuffer> = await this.upload(audioNodeId);\r\n\r\n        this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n        return Promise.resolve({\r\n            detach: async (): Promise<void> => {\r\n                stream.readEnded();\r\n                delete this.privStreams[audioNodeId];\r\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                await this.turnOff();\r\n            },\r\n            id: () => {\r\n                return audioNodeId;\r\n            },\r\n            read: (): Promise<IStreamChunk<ArrayBuffer>> => {\r\n                return stream.read();\r\n            },\r\n        });\r\n    }\r\n\r\n    public detach = (audioNodeId: string): void => {\r\n        if (audioNodeId && this.privStreams[audioNodeId]) {\r\n            this.privStreams[audioNodeId].close();\r\n            delete this.privStreams[audioNodeId];\r\n            this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n        }\r\n    }\r\n\r\n    public turnOff = (): Promise<void> => {\r\n        for (const streamId in this.privStreams) {\r\n            if (streamId) {\r\n                const stream = this.privStreams[streamId];\r\n                if (stream && !stream.isClosed) {\r\n                    stream.close();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onEvent(new AudioSourceOffEvent(this.privId)); // no stream now\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return this.privAudioFormatPromise.then<ISpeechConfigAudioDevice>((result: AudioStreamFormatImpl) => {\r\n            return Promise.resolve({\r\n                bitspersample: result.bitsPerSample,\r\n                channelcount: result.channels,\r\n                connectivity: connectivity.Unknown,\r\n                manufacturer: \"Speech SDK\",\r\n                model: \"File\",\r\n                samplerate: result.samplesPerSec,\r\n                type: type.File,\r\n            });\r\n        });\r\n    }\r\n\r\n    private readHeader(): Promise<AudioStreamFormatImpl> {\r\n        // Read the wave header.\r\n        const maxHeaderSize: number = 512;\r\n        const header: Blob | Buffer = this.privSource.slice(0, maxHeaderSize);\r\n\r\n        const headerResult: Deferred<AudioStreamFormatImpl> = new Deferred<AudioStreamFormatImpl>();\r\n\r\n        const processHeader = (header: ArrayBuffer): void => {\r\n            const view: DataView = new DataView(header);\r\n\r\n            const getWord = (index: number): string => {\r\n                return String.fromCharCode(view.getUint8(index), view.getUint8(index + 1), view.getUint8(index + 2), view.getUint8(index + 3));\r\n            };\r\n\r\n            // RIFF 4 bytes.\r\n            if (\"RIFF\" !== getWord(0)) {\r\n                headerResult.reject(\"Invalid WAV header in file, RIFF was not found\");\r\n                return;\r\n            }\r\n\r\n            // length, 4 bytes\r\n            // RIFF Type & fmt 8 bytes\r\n            if (\"WAVE\" !== getWord(8) || \"fmt \" !== getWord(12)) {\r\n                headerResult.reject(\"Invalid WAV header in file, WAVEfmt was not found\");\r\n                return;\r\n            }\r\n\r\n            const formatSize: number = view.getInt32(16, true);\r\n            const channelCount: number = view.getUint16(22, true);\r\n            const sampleRate: number = view.getUint32(24, true);\r\n            const bitsPerSample: number = view.getUint16(34, true);\r\n            // Confirm if header is 44 bytes long.\r\n            let pos: number = 36 + Math.max(formatSize - 16, 0);\r\n            for (; getWord(pos) !== \"data\"; pos += 2) {\r\n                if (pos > maxHeaderSize - 8) {\r\n                    headerResult.reject(\"Invalid WAV header in file, data block was not found\");\r\n                    return;\r\n                }\r\n            }\r\n            this.privHeaderEnd = pos + 8;\r\n            headerResult.resolve(AudioStreamFormat.getWaveFormatPCM(sampleRate, bitsPerSample, channelCount) as AudioStreamFormatImpl);\r\n        };\r\n\r\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && header instanceof Blob) {\r\n            const reader: FileReader = new FileReader();\r\n\r\n            reader.onload = (event: Event) => {\r\n                const header: ArrayBuffer = (event.target as FileReader).result as ArrayBuffer;\r\n                processHeader(header);\r\n            };\r\n\r\n            reader.readAsArrayBuffer(header);\r\n        } else {\r\n            const h: Buffer = header as Buffer;\r\n            processHeader(h.buffer.slice(h.byteOffset, h.byteOffset + h.byteLength));\r\n        }\r\n        return headerResult.promise;\r\n    }\r\n\r\n    private async upload(audioNodeId: string): Promise<Stream<ArrayBuffer>> {\r\n        const onerror = (error: string) => {\r\n            const errorMsg = `Error occurred while processing '${this.privFilename}'. ${error}`;\r\n            this.onEvent(new AudioStreamNodeErrorEvent(this.privId, audioNodeId, errorMsg));\r\n            throw new Error(errorMsg);\r\n        };\r\n\r\n        try {\r\n            await this.turnOn();\r\n\r\n            const format: AudioStreamFormatImpl = await this.privAudioFormatPromise;\r\n            const stream = new ChunkedArrayBufferStream(format.avgBytesPerSec / 10, audioNodeId);\r\n\r\n            this.privStreams[audioNodeId] = stream;\r\n            const chunk: Blob | Buffer = this.privSource.slice(this.privHeaderEnd);\r\n\r\n            const processFile = (buff: ArrayBuffer): void => {\r\n                if (stream.isClosed) {\r\n                    return; // output stream was closed (somebody called TurnOff). We're done here.\r\n                }\r\n\r\n                stream.writeStreamChunk({\r\n                    buffer: buff,\r\n                    isEnd: false,\r\n                    timeReceived: Date.now(),\r\n                });\r\n                stream.close();\r\n            };\r\n\r\n            if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && chunk instanceof Blob) {\r\n                const reader: FileReader = new FileReader();\r\n                reader.onerror = (ev: ProgressEvent<FileReader>) => { onerror(ev.toString()); };\r\n\r\n                reader.onload = (event: Event) => {\r\n                    const fileBuffer: ArrayBuffer = (event.target as FileReader).result as ArrayBuffer;\r\n                    processFile(fileBuffer);\r\n                };\r\n\r\n                reader.readAsArrayBuffer(chunk);\r\n            } else {\r\n                const c: Buffer = chunk as Buffer;\r\n                processFile(c.buffer.slice(c.byteOffset, c.byteOffset + c.byteLength));\r\n            }\r\n\r\n            return stream;\r\n        } catch (e) {\r\n            onerror(e);\r\n        }\r\n    }\r\n\r\n    private onEvent = (event: AudioSourceEvent): void => {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n /**\r\n  * An abstract base class that defines callback methods (read() and close()) for\r\n  * custom audio input streams).\r\n  * @class PullAudioInputStreamCallback\r\n  */\r\nexport abstract class PullAudioInputStreamCallback {\r\n\r\n    /**\r\n     * Reads data from audio input stream into the data buffer. The maximal number of bytes\r\n     * to be read is determined by the size of dataBuffer.\r\n     * @member PullAudioInputStreamCallback.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The byte array to store the read data.\r\n     * @returns {number} the number of bytes have been read.\r\n     */\r\n    public abstract read(dataBuffer: ArrayBuffer): number;\r\n\r\n    /**\r\n     * Closes the audio input stream.\r\n     * @member PullAudioInputStreamCallback.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SynthesisAdapterBase } from \"../../common.speech/Exports\";\r\nimport {\r\n    BackgroundEvent,\r\n    createNoDashGuid,\r\n    Events,\r\n    IAudioDestination,\r\n    INumberDictionary\r\n} from \"../../common/Exports\";\r\nimport { AudioStreamFormat, IPlayer } from \"../Exports\";\r\nimport { AudioFormatTag, AudioOutputFormatImpl } from \"./AudioOutputFormat\";\r\nimport { PullAudioOutputStreamImpl } from \"./AudioOutputStream\";\r\n\r\nconst MediaDurationPlaceholderSeconds = 60 * 30;\r\n\r\nconst AudioFormatToMimeType: INumberDictionary<string> = {\r\n    [AudioFormatTag.PCM]: \"audio/wav\",\r\n    [AudioFormatTag.MP3]: \"audio/mpeg\",\r\n    [AudioFormatTag.OGG_OPUS]: \"audio/ogg\",\r\n    [AudioFormatTag.WEBM_OPUS]: \"audio/webm; codecs=opus\"\r\n};\r\n\r\n/**\r\n * Represents the speaker playback audio destination, which only works in browser.\r\n * Note: the SDK will try to use <a href=\"https://www.w3.org/TR/media-source/\">Media Source Extensions</a> to play audio.\r\n * Mp3 format has better supports on Microsoft Edge, Chrome and Safari (desktop), so, it's better to specify mp3 format for playback.\r\n * @class SpeakerAudioDestination\r\n * Updated in version 1.12.1\r\n */\r\nexport class SpeakerAudioDestination implements IAudioDestination, IPlayer {\r\n    private readonly privId: string;\r\n    private privFormat: AudioOutputFormatImpl;\r\n    private privAudio: HTMLAudioElement;\r\n    private privMediaSource: MediaSource;\r\n    private privSourceBuffer: SourceBuffer;\r\n    private privPlaybackStarted: boolean = false;\r\n    private privAudioBuffer: ArrayBuffer[];\r\n    private privAppendingToBuffer: boolean = false;\r\n    private privMediaSourceOpened: boolean = false;\r\n    private privIsClosed: boolean;\r\n    private privIsPaused: boolean;\r\n    private privAudioOutputStream: PullAudioOutputStreamImpl;\r\n    private privBytesReceived: number = 0;\r\n\r\n    public constructor(audioDestinationId?: string) {\r\n        this.privId = audioDestinationId ? audioDestinationId : createNoDashGuid();\r\n        this.privIsPaused = false;\r\n        this.privIsClosed = false;\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer, cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.privAudioBuffer !== undefined) {\r\n            this.privAudioBuffer.push(buffer);\r\n            this.updateSourceBuffer().then(() => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        } else if (this.privAudioOutputStream !== undefined) {\r\n            this.privAudioOutputStream.write(buffer);\r\n            this.privBytesReceived += buffer.byteLength;\r\n        }\r\n    }\r\n\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        this.privIsClosed = true;\r\n        if (this.privSourceBuffer !== undefined) {\r\n            this.handleSourceBufferUpdateEnd().then(() => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        } else if (this.privAudioOutputStream !== undefined) {\r\n            let receivedAudio = new ArrayBuffer(this.privBytesReceived);\r\n            this.privAudioOutputStream.read(receivedAudio).then((_: number): void => {\r\n                if (this.privFormat.hasHeader) {\r\n                    receivedAudio = SynthesisAdapterBase.addHeader(receivedAudio, this.privFormat);\r\n                }\r\n                const audioBlob = new Blob([receivedAudio], { type: AudioFormatToMimeType[this.privFormat.formatTag] });\r\n                this.privAudio.src = window.URL.createObjectURL(audioBlob);\r\n                this.notifyPlayback().then(() => {\r\n                    if (!!cb) {\r\n                        cb();\r\n                    }\r\n                }, (error: string): void => {\r\n                    if (!!err) {\r\n                        err(error);\r\n                    }\r\n                });\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    set format(format: AudioStreamFormat) {\r\n        if (typeof (AudioContext) !== \"undefined\" || typeof ((window as any).webkitAudioContext) !== \"undefined\") {\r\n            this.privFormat = format as AudioOutputFormatImpl;\r\n            const mimeType: string = AudioFormatToMimeType[this.privFormat.formatTag];\r\n            if (mimeType === undefined) {\r\n                // tslint:disable-next-line:no-console\r\n                console.warn(\r\n                    `Unknown mimeType for format ${AudioFormatTag[this.privFormat.formatTag]}.`);\r\n\r\n            } else if (typeof (MediaSource) !== \"undefined\" && MediaSource.isTypeSupported(mimeType)) {\r\n                this.privAudio = new Audio();\r\n                this.privAudioBuffer = [];\r\n                this.privMediaSource = new MediaSource();\r\n                this.privAudio.src = URL.createObjectURL(this.privMediaSource);\r\n                this.privAudio.load();\r\n                this.privMediaSource.onsourceopen = (event: Event): void => {\r\n                    this.privMediaSourceOpened = true;\r\n                    this.privMediaSource.duration = MediaDurationPlaceholderSeconds;\r\n                    this.privSourceBuffer = this.privMediaSource.addSourceBuffer(mimeType);\r\n                    this.privSourceBuffer.onupdate = (_: Event) => {\r\n                        this.updateSourceBuffer().catch((reason: string): void => {\r\n                            Events.instance.onEvent(new BackgroundEvent(reason));\r\n                        });\r\n                    };\r\n                    this.privSourceBuffer.onupdateend = (_: Event) => {\r\n                        this.handleSourceBufferUpdateEnd().catch((reason: string): void => {\r\n                            Events.instance.onEvent(new BackgroundEvent(reason));\r\n                        });\r\n                    };\r\n                    this.privSourceBuffer.onupdatestart = (_: Event) => {\r\n                        this.privAppendingToBuffer = false;\r\n                    };\r\n                };\r\n                this.updateSourceBuffer().catch((reason: string): void => {\r\n                    Events.instance.onEvent(new BackgroundEvent(reason));\r\n                });\r\n\r\n            } else {\r\n                // tslint:disable-next-line:no-console\r\n                console.warn(\r\n                    `Format ${AudioFormatTag[this.privFormat.formatTag]} could not be played by MSE, streaming playback is not enabled.`);\r\n                this.privAudioOutputStream = new PullAudioOutputStreamImpl();\r\n                this.privAudioOutputStream.format = this.privFormat;\r\n                this.privAudio = new Audio();\r\n            }\r\n        }\r\n    }\r\n\r\n    public get isClosed(): boolean {\r\n        return this.privIsClosed;\r\n    }\r\n\r\n    public get currentTime(): number {\r\n        if (this.privAudio !== undefined) {\r\n            return this.privAudio.currentTime;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    public pause(): void {\r\n        if (!this.privIsPaused && this.privAudio !== undefined) {\r\n            this.privAudio.pause();\r\n            this.privIsPaused = true;\r\n        }\r\n    }\r\n\r\n    public resume(cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.privIsPaused && this.privAudio !== undefined) {\r\n            this.privAudio.play().then(() => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n            this.privIsPaused = false;\r\n        }\r\n    }\r\n\r\n    public onAudioStart: (sender: IPlayer) => void;\r\n\r\n    public onAudioEnd: (sender: IPlayer) => void;\r\n\r\n    public get internalAudio(): HTMLAudioElement {\r\n        return this.privAudio;\r\n    }\r\n\r\n    private async updateSourceBuffer(): Promise<void> {\r\n        if (this.privAudioBuffer !== undefined && (this.privAudioBuffer.length > 0) && this.sourceBufferAvailable()) {\r\n            this.privAppendingToBuffer = true;\r\n            const binary = this.privAudioBuffer.shift();\r\n            try {\r\n                this.privSourceBuffer.appendBuffer(binary);\r\n            } catch (error) {\r\n                this.privAudioBuffer.unshift(binary);\r\n                // tslint:disable-next-line:no-console\r\n                console.log(\r\n                    \"buffer filled, pausing addition of binaries until space is made\");\r\n                return;\r\n            }\r\n            await this.notifyPlayback();\r\n        } else if (this.canEndStream()) {\r\n            await this.handleSourceBufferUpdateEnd();\r\n        }\r\n    }\r\n\r\n    private async handleSourceBufferUpdateEnd(): Promise<void> {\r\n        if (this.canEndStream() && this.sourceBufferAvailable()) {\r\n            this.privMediaSource.endOfStream();\r\n            await this.notifyPlayback();\r\n        }\r\n    }\r\n\r\n    private async notifyPlayback(): Promise<void> {\r\n        if (!this.privPlaybackStarted && this.privAudio !== undefined) {\r\n            this.privPlaybackStarted = true;\r\n            if (!!this.onAudioStart) {\r\n                this.onAudioStart(this);\r\n            }\r\n            this.privAudio.onended = (): void => {\r\n                if (!!this.onAudioEnd) {\r\n                    this.onAudioEnd(this);\r\n                }\r\n            };\r\n            if (!this.privIsPaused) {\r\n                await this.privAudio.play();\r\n            }\r\n        }\r\n    }\r\n\r\n    private canEndStream(): boolean {\r\n        return (this.isClosed && this.privSourceBuffer !== undefined && (this.privAudioBuffer.length === 0)\r\n            && this.privMediaSourceOpened && !this.privAppendingToBuffer && this.privMediaSource.readyState === \"open\");\r\n    }\r\n\r\n    private sourceBufferAvailable(): boolean {\r\n        return (this.privSourceBuffer !== undefined && !this.privSourceBuffer.updating);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n/**\r\n * An abstract base class that defines callback methods (write() and close()) for\r\n * custom audio output streams).\r\n * @class PushAudioOutputStreamCallback\r\n */\r\nexport abstract class PushAudioOutputStreamCallback {\r\n\r\n    /**\r\n     * Writes audio data into the data buffer.\r\n     * @member PushAudioOutputStreamCallback.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The byte array that stores the audio data to write.\r\n     */\r\n    public abstract write(dataBuffer: ArrayBuffer): void;\r\n\r\n    /**\r\n     * Closes the audio output stream.\r\n     * @member PushAudioOutputStreamCallback.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport * as fs from \"fs\";\r\nimport { IAudioDestination } from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport { AudioStreamFormat } from \"../Exports\";\r\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat\";\r\n\r\nexport class AudioFileWriter implements IAudioDestination {\r\n    private privAudioFormat: AudioOutputFormatImpl;\r\n    private privFd: number;\r\n    private privId: string;\r\n    private privWriteStream: fs.WriteStream;\r\n\r\n    public constructor(filename: fs.PathLike) {\r\n        this.privFd = fs.openSync(filename, \"w\");\r\n    }\r\n\r\n    public set format(format: AudioStreamFormat) {\r\n        Contracts.throwIfNotUndefined(this.privAudioFormat, \"format is already set\");\r\n        this.privAudioFormat = format as AudioOutputFormatImpl;\r\n        let headerOffset: number = 0;\r\n        if (this.privAudioFormat.hasHeader) {\r\n            headerOffset = this.privAudioFormat.header.byteLength;\r\n        }\r\n        if (this.privFd !== undefined) {\r\n            this.privWriteStream = fs.createWriteStream(\"\", {fd: this.privFd, start: headerOffset, autoClose: false});\r\n        }\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        Contracts.throwIfNullOrUndefined(this.privAudioFormat, \"must set format before writing.\");\r\n        if (this.privWriteStream !== undefined) {\r\n            this.privWriteStream.write(new Uint8Array(buffer.slice(0)));\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        if (this.privFd !== undefined) {\r\n            this.privWriteStream.on(\"finish\", () => {\r\n                if (this.privAudioFormat.hasHeader) {\r\n                    this.privAudioFormat.updateHeader(this.privWriteStream.bytesWritten);\r\n                    fs.writeSync(this.privFd,\r\n                        new Int8Array(this.privAudioFormat.header),\r\n                        0,\r\n                        this.privAudioFormat.header.byteLength,\r\n                        0);\r\n                }\r\n                fs.closeSync(this.privFd);\r\n                this.privFd = undefined;\r\n            });\r\n            this.privWriteStream.end();\r\n        }\r\n    }\r\n\r\n    public id = (): string => {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { PathLike } from \"fs\";\r\nimport {\r\n    FileAudioSource,\r\n    MicAudioSource,\r\n    PcmRecorder,\r\n} from \"../../common.browser/Exports\";\r\nimport { ISpeechConfigAudioDevice } from \"../../common.speech/Exports\";\r\nimport {\r\n    AudioSourceEvent,\r\n    Deferred,\r\n    EventSource,\r\n    IAudioDestination,\r\n    IAudioSource,\r\n    IAudioStreamNode\r\n} from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    AudioInputStream,\r\n    AudioOutputStream,\r\n    AudioStreamFormat,\r\n    IPlayer,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    PullAudioInputStreamCallback,\r\n    PullAudioOutputStream,\r\n    PushAudioOutputStream,\r\n    PushAudioOutputStreamCallback,\r\n    SpeakerAudioDestination\r\n} from \"../Exports\";\r\nimport { AudioFileWriter } from \"./AudioFileWriter\";\r\nimport { PullAudioInputStreamImpl, PushAudioInputStreamImpl } from \"./AudioInputStream\";\r\nimport { PullAudioOutputStreamImpl, PushAudioOutputStreamImpl } from \"./AudioOutputStream\";\r\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat\";\r\n\r\n/**\r\n * Represents audio input configuration used for specifying what type of input to use (microphone, file, stream).\r\n * @class AudioConfig\r\n * Updated in version 1.11.0\r\n */\r\nexport abstract class AudioConfig {\r\n    /**\r\n     * Creates an AudioConfig object representing the default microphone on the system.\r\n     * @member AudioConfig.fromDefaultMicrophoneInput\r\n     * @function\r\n     * @public\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromDefaultMicrophoneInput(): AudioConfig {\r\n        const pcmRecorder = new PcmRecorder();\r\n        return new AudioConfigImpl(new MicAudioSource(pcmRecorder));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing a microphone with the specified device ID.\r\n     * @member AudioConfig.fromMicrophoneInput\r\n     * @function\r\n     * @public\r\n     * @param {string | undefined} deviceId - Specifies the device ID of the microphone to be used.\r\n     *        Default microphone is used the value is omitted.\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromMicrophoneInput(deviceId?: string): AudioConfig {\r\n        const pcmRecorder = new PcmRecorder();\r\n        return new AudioConfigImpl(new MicAudioSource(pcmRecorder, deviceId));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the specified file.\r\n     * @member AudioConfig.fromWavFileInput\r\n     * @function\r\n     * @public\r\n     * @param {File} fileName - Specifies the audio input file. Currently, only WAV / PCM is supported.\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromWavFileInput(file: File | Buffer, name: string = \"unnamedBuffer.wav\"): AudioConfig {\r\n        return new AudioConfigImpl(new FileAudioSource(file, name));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the specified stream.\r\n     * @member AudioConfig.fromStreamInput\r\n     * @function\r\n     * @public\r\n     * @param {AudioInputStream | PullAudioInputStreamCallback | MediaStream} audioStream - Specifies the custom audio input\r\n     *        stream. Currently, only WAV / PCM is supported.\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromStreamInput(audioStream: AudioInputStream | PullAudioInputStreamCallback\r\n        | MediaStream): AudioConfig {\r\n        if (audioStream instanceof PullAudioInputStreamCallback) {\r\n            return new AudioConfigImpl(new PullAudioInputStreamImpl(audioStream as PullAudioInputStreamCallback));\r\n        }\r\n\r\n        if (audioStream instanceof AudioInputStream) {\r\n            return new AudioConfigImpl(audioStream as PushAudioInputStreamImpl);\r\n        }\r\n        if (audioStream instanceof MediaStream) {\r\n            const pcmRecorder = new PcmRecorder();\r\n            return new AudioConfigImpl(new MicAudioSource(pcmRecorder, null, null, audioStream));\r\n        }\r\n\r\n        throw new Error(\"Not Supported Type\");\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the default speaker.\r\n     * @member AudioConfig.fromDefaultSpeakerOutput\r\n     * @function\r\n     * @public\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.11.0\r\n     */\r\n    public static fromDefaultSpeakerOutput(): AudioConfig {\r\n        return new AudioOutputConfigImpl(new SpeakerAudioDestination());\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the custom IPlayer object.\r\n     * You can use the IPlayer object to control pause, resume, etc.\r\n     * @member AudioConfig.fromSpeakerOutput\r\n     * @function\r\n     * @public\r\n     * @param {IPlayer} player - the IPlayer object for playback.\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.12.0\r\n     */\r\n    public static fromSpeakerOutput(player?: IPlayer): AudioConfig {\r\n        if (player === undefined) {\r\n            return AudioConfig.fromDefaultSpeakerOutput();\r\n        }\r\n        if (player instanceof SpeakerAudioDestination) {\r\n            return new AudioOutputConfigImpl(player as SpeakerAudioDestination);\r\n        }\r\n\r\n        throw new Error(\"Not Supported Type\");\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing a specified output audio file\r\n     * @member AudioConfig.fromAudioFileOutput\r\n     * @function\r\n     * @public\r\n     * @param {PathLike} filename - the filename of the output audio file\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.11.0\r\n     */\r\n    public static fromAudioFileOutput(filename: PathLike): AudioConfig {\r\n        return new AudioOutputConfigImpl(new AudioFileWriter(filename));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing a specified audio output stream\r\n     * @member AudioConfig.fromStreamOutput\r\n     * @function\r\n     * @public\r\n     * @param {AudioOutputStream | PushAudioOutputStreamCallback} audioStream - Specifies the custom audio output\r\n     *        stream.\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.11.0\r\n     */\r\n    public static fromStreamOutput(audioStream: AudioOutputStream | PushAudioOutputStreamCallback): AudioConfig {\r\n        if (audioStream instanceof PushAudioOutputStreamCallback) {\r\n            return new AudioOutputConfigImpl(new PushAudioOutputStreamImpl(audioStream as PushAudioOutputStreamCallback));\r\n        }\r\n\r\n        if (audioStream instanceof PushAudioOutputStream) {\r\n            return new AudioOutputConfigImpl(audioStream as PushAudioOutputStreamImpl);\r\n        }\r\n\r\n        if (audioStream instanceof PullAudioOutputStream) {\r\n            return new AudioOutputConfigImpl(audioStream as PullAudioOutputStreamImpl);\r\n        }\r\n\r\n        throw new Error(\"Not Supported Type\");\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioConfig.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n\r\n    /**\r\n     * Sets an arbitrary property.\r\n     * @member SpeechConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string, value: string): void;\r\n\r\n    /**\r\n     * Returns the current value of an arbitrary property.\r\n     * @member SpeechConfig.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to query.\r\n     * @param {string} def - The value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public abstract getProperty(name: string, def?: string): string;\r\n\r\n}\r\n\r\n/**\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @private\r\n * @class AudioConfigImpl\r\n */\r\nexport class AudioConfigImpl extends AudioConfig implements IAudioSource {\r\n    private privSource: IAudioSource;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {IAudioSource} source - An audio source.\r\n     */\r\n    public constructor(source: IAudioSource) {\r\n        super();\r\n        this.privSource = source;\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return this.privSource.format;\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        this.privSource.turnOff().then(() => {\r\n            if (!!cb) {\r\n                cb();\r\n            }\r\n        }, (error: string) => {\r\n            if (!!err) {\r\n                err(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.id\r\n     * @function\r\n     * @public\r\n     */\r\n    public id(): string {\r\n        return this.privSource.id();\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.blob\r\n     * @function\r\n     * @public\r\n     */\r\n    public get blob(): Promise<Blob | Buffer> {\r\n        return this.privSource.blob;\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.turnOn\r\n     * @function\r\n     * @public\r\n     * @returns {Promise<void>} A promise.\r\n     */\r\n    public turnOn(): Promise<void> {\r\n        return this.privSource.turnOn();\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.attach\r\n     * @function\r\n     * @public\r\n     * @param {string} audioNodeId - The audio node id.\r\n     * @returns {Promise<IAudioStreamNode>} A promise.\r\n     */\r\n    public attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        return this.privSource.attach(audioNodeId);\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.detach\r\n     * @function\r\n     * @public\r\n     * @param {string} audioNodeId - The audio node id.\r\n     */\r\n    public detach(audioNodeId: string): void {\r\n        return this.privSource.detach(audioNodeId);\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.turnOff\r\n     * @function\r\n     * @public\r\n     * @returns {Promise<void>} A promise.\r\n     */\r\n    public turnOff(): Promise<void> {\r\n        return this.privSource.turnOff();\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.events\r\n     * @function\r\n     * @public\r\n     * @returns {EventSource<AudioSourceEvent>} An event source for audio events.\r\n     */\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privSource.events;\r\n    }\r\n\r\n    public setProperty(name: string, value: string): void {\r\n        Contracts.throwIfNull(value, \"value\");\r\n\r\n        if (undefined !== this.privSource.setProperty) {\r\n            this.privSource.setProperty(name, value);\r\n        } else {\r\n            throw new Error(\"This AudioConfig instance does not support setting properties.\");\r\n        }\r\n\r\n    }\r\n\r\n    public getProperty(name: string, def?: string): string {\r\n        if (undefined !== this.privSource.getProperty) {\r\n            return this.privSource.getProperty(name, def);\r\n        } else {\r\n            throw new Error(\"This AudioConfig instance does not support getting properties.\");\r\n        }\r\n\r\n        return def;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return this.privSource.deviceInfo;\r\n    }\r\n}\r\n\r\nexport class AudioOutputConfigImpl extends AudioConfig implements IAudioDestination {\r\n    private privDestination: IAudioDestination;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {IAudioDestination} destination - An audio destination.\r\n     */\r\n    public constructor(destination: IAudioDestination) {\r\n        super();\r\n        this.privDestination = destination;\r\n    }\r\n\r\n    public set format(format: AudioStreamFormat) {\r\n        this.privDestination.format = format;\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        this.privDestination.write(buffer);\r\n    }\r\n\r\n    public close(): void {\r\n        this.privDestination.close();\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privDestination.id();\r\n    }\r\n\r\n    public setProperty(name: string, value: string): void {\r\n        throw new Error(\"This AudioConfig instance does not support setting properties.\");\r\n    }\r\n\r\n    public getProperty(name: string, def?: string): string {\r\n        throw new Error(\"This AudioConfig instance does not support getting properties.\");\r\n    }\r\n}\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Profanity option.\r\n * Added in version 1.7.0.\r\n */\r\nexport enum ProfanityOption {\r\n    Masked = 0,\r\n    Removed = 1,\r\n    Raw = 2\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ForceDictationPropertyName,\r\n    OutputFormatPropertyName,\r\n    ServicePropertiesPropertyName\r\n} from \"../common.speech/Exports\";\r\nimport {IStringDictionary} from \"../common/Exports\";\r\nimport {Contracts} from \"./Contracts\";\r\nimport {\r\n    OutputFormat,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ServicePropertyChannel,\r\n    SpeechSynthesisOutputFormat,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Speech configuration.\r\n * @class SpeechConfig\r\n */\r\nexport abstract class SpeechConfig {\r\n    /**\r\n     * Creates and initializes an instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() { }\r\n\r\n    /**\r\n     * Static instance of SpeechConfig returned by passing subscriptionKey and service region.\r\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\r\n     * @member SpeechConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param {string} subscriptionKey - The subscription key.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechConfig} The speech factory\r\n     */\r\n    public static fromSubscription(subscriptionKey: string, region: string): SpeechConfig {\r\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_IntentRegion, region);\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech config with specified endpoint and subscription key.\r\n     * This method is intended only for users who use a non-standard service endpoint or parameters.\r\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\r\n     * Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.\r\n     * For example, if language is defined in the uri as query parameter \"language=de-DE\", and also set by\r\n     *              SpeechConfig.speechRecognitionLanguage = \"en-US\", the language setting in uri takes precedence,\r\n     *              and the effective language is \"de-DE\". Only the parameters that are not specified in the\r\n     *              endpoint URL can be set by other APIs.\r\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\r\n     *       fromEndpoint method, and then set authorizationToken=\"token\" on the created SpeechConfig instance to\r\n     *       use the authorization token.\r\n     * @member SpeechConfig.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} endpoint - The service endpoint to connect to.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromEndpoint(endpoint: URL, subscriptionKey?: string): SpeechConfig {\r\n        Contracts.throwIfNull(endpoint, \"endpoint\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech config with specified host and subscription key.\r\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\r\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\r\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\r\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\r\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\r\n     * Note: Added in version 1.9.0.\r\n     * @member SpeechConfig.fromHost\r\n     * @function\r\n     * @public\r\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromHost(hostName: URL, subscriptionKey?: string): SpeechConfig {\r\n        Contracts.throwIfNull(hostName, \"hostName\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech factory with specified initial authorization token and region.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     *       expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key in case you want\r\n     *       to use the Intent recognizer. As configuration values are copied when creating a new recognizer,\r\n     *       the new token value will not apply to recognizers that have already been created. For recognizers\r\n     *       that have been created before, you need to set authorization token of the corresponding recognizer\r\n     *       to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\r\n     * @member SpeechConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} authorizationToken - The initial authorization token.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromAuthorizationToken(authorizationToken: string, region: string): SpeechConfig {\r\n        Contracts.throwIfNull(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_IntentRegion, region);\r\n        speechImpl.authorizationToken = authorizationToken;\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server.\r\n     * @param proxyPort The port number of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number): void;\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\r\n     * @param proxyPort The port number of the proxy server.\r\n     * @param proxyUserName The user name of the proxy server.\r\n     * @param proxyPassword The password of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n\r\n    /**\r\n     * Gets the authorization token.\r\n     * @member SpeechConfig.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract get authorizationToken(): string;\r\n\r\n    /**\r\n     * Gets/Sets the authorization token.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * @member SpeechConfig.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set authorizationToken(value: string);\r\n\r\n    /**\r\n     * Returns the configured language.\r\n     * @member SpeechConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract get speechRecognitionLanguage(): string;\r\n\r\n    /**\r\n     * Gets/Sets the input language.\r\n     * @member SpeechConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set speechRecognitionLanguage(value: string);\r\n\r\n    /**\r\n     * Sets an arbitrary property.\r\n     * @member SpeechConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string, value: string): void;\r\n\r\n    /**\r\n     * Returns the current value of an arbitrary property.\r\n     * @member SpeechConfig.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to query.\r\n     * @param {string} def - The value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public abstract getProperty(name: string, def?: string): string;\r\n\r\n    /**\r\n     * Gets speech recognition output format (simple or detailed).\r\n     * Note: This output format is for speech recognition result, use [SpeechConfig.speechSynthesisOutputFormat] to\r\n     * get synthesized audio output format.\r\n     * @member SpeechConfig.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {OutputFormat} Returns the output format.\r\n     */\r\n    public abstract get outputFormat(): OutputFormat;\r\n\r\n    /**\r\n     * Gets/Sets speech recognition output format (simple or detailed).\r\n     * Note: This output format is for speech recognition result, use [SpeechConfig.speechSynthesisOutputFormat] to\r\n     * set synthesized audio output format.\r\n     * @member SpeechConfig.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract set outputFormat(format: OutputFormat);\r\n\r\n    /**\r\n     * Gets the endpoint ID of a customized speech model that is used for speech recognition.\r\n     * @member SpeechConfig.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @return {string} The endpoint ID\r\n     */\r\n    public abstract get endpointId(): string;\r\n\r\n    /**\r\n     * Gets/Sets the endpoint ID of a customized speech model that is used for speech recognition.\r\n     * @member SpeechConfig.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The endpoint ID\r\n     */\r\n    public abstract set endpointId(value: string);\r\n\r\n    /**\r\n     * Closes the configuration.\r\n     * @member SpeechConfig.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    /* tslint:disable:no-empty */\r\n    public close(): void { }\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.subscriptionKey\r\n     * @function\r\n     * @public\r\n     * @return {string} The subscription key set on the config.\r\n     */\r\n    public abstract get subscriptionKey(): string;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.region\r\n     * @function\r\n     * @public\r\n     * @return {region} The region set on the config.\r\n     */\r\n    public abstract get region(): string;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.setServiceProperty\r\n     * @function\r\n     * @public\r\n     * @param {name} The name of the property.\r\n     * @param {value} Value to set.\r\n     * @param {channel} The channel used to pass the specified property to service.\r\n     * @summary Sets a property value that will be passed to service using the specified channel.\r\n     * Added in version 1.7.0.\r\n     */\r\n    public abstract setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.setProfanity\r\n     * @function\r\n     * @public\r\n     * @param {profanity} Profanity option to set.\r\n     * @summary Sets profanity option.\r\n     * Added in version 1.7.0.\r\n     */\r\n    public abstract setProfanity(profanity: ProfanityOption): void;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.enableAudioLogging\r\n     * @function\r\n     * @public\r\n     * @summary Enable audio logging in service.\r\n     * Added in version 1.7.0.\r\n     */\r\n    public abstract enableAudioLogging(): void;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.requestWordLevelTimestamps\r\n     * @function\r\n     * @public\r\n     * @summary Includes word-level timestamps.\r\n     * Added in version 1.7.0.\r\n     */\r\n    public abstract requestWordLevelTimestamps(): void;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.enableDictation\r\n     * @function\r\n     * @public\r\n     * @summary Enable dictation. Only supported in speech continuous recognition.\r\n     * Added in version 1.7.0.\r\n     */\r\n    public abstract enableDictation(): void;\r\n\r\n    /**\r\n     * Gets the language of the speech synthesizer.\r\n     * @member SpeechConfig.prototype.speechSynthesisLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} Returns the speech synthesis language.\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract get speechSynthesisLanguage(): string;\r\n\r\n    /**\r\n     * Sets the language of the speech synthesizer.\r\n     * @member SpeechConfig.prototype.speechSynthesisLanguage\r\n     * @function\r\n     * @public\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract set speechSynthesisLanguage(language: string);\r\n\r\n    /**\r\n     * Gets the voice of the speech synthesizer.\r\n     * @member SpeechConfig.prototype.speechSynthesisVoiceName\r\n     * @function\r\n     * @public\r\n     * @returns {string} Returns the speech synthesis voice.\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract get speechSynthesisVoiceName(): string;\r\n\r\n    /**\r\n     * Sets the voice of the speech synthesizer. (see <a href=\"https://aka.ms/speech/tts-languages\">available voices</a>).\r\n     * @member SpeechConfig.prototype.speechSynthesisVoiceName\r\n     * @function\r\n     * @public\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract set speechSynthesisVoiceName(voice: string);\r\n\r\n    /**\r\n     * Gets the speech synthesis output format.\r\n     * @member SpeechConfig.prototype.speechSynthesisOutputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechSynthesisOutputFormat} Returns the speech synthesis output format\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract get speechSynthesisOutputFormat(): SpeechSynthesisOutputFormat;\r\n\r\n    /**\r\n     * Sets the speech synthesis output format (e.g. Riff16Khz16BitMonoPcm).\r\n     * @member SpeechConfig.prototype.speechSynthesisOutputFormat\r\n     * @function\r\n     * @public\r\n     * The default format is Audio16Khz64KBitRateMonoMp3 for browser and Riff16Khz16BitMonoPcm for Node.JS\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract set speechSynthesisOutputFormat(format: SpeechSynthesisOutputFormat);\r\n}\r\n\r\n/**\r\n * @public\r\n * @class SpeechConfigImpl\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class SpeechConfigImpl extends SpeechConfig {\r\n\r\n    private privProperties: PropertyCollection;\r\n\r\n    public constructor() {\r\n        super();\r\n        this.privProperties = new PropertyCollection();\r\n        this.speechRecognitionLanguage = \"en-US\"; // Should we have a default?\r\n        this.outputFormat = OutputFormat.Simple;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get endPoint(): URL {\r\n        return new URL(this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Endpoint));\r\n    }\r\n\r\n    public get subscriptionKey(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Key);\r\n    }\r\n\r\n    public get region(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n    }\r\n\r\n    public get authorizationToken(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    public set authorizationToken(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    public set speechRecognitionLanguage(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_RecoLanguage, value);\r\n    }\r\n\r\n    public get autoDetectSourceLanguages(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages);\r\n    }\r\n\r\n    public set autoDetectSourceLanguages(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, value);\r\n    }\r\n\r\n    public get outputFormat(): OutputFormat {\r\n        return (OutputFormat as any)[this.privProperties.getProperty(OutputFormatPropertyName, undefined)];\r\n    }\r\n\r\n    public set outputFormat(value: OutputFormat) {\r\n        this.privProperties.setProperty(OutputFormatPropertyName, OutputFormat[value]);\r\n    }\r\n\r\n    public get endpointId(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_EndpointId);\r\n    }\r\n\r\n    public set endpointId(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_EndpointId, value);\r\n    }\r\n\r\n    public setProperty(name: string | PropertyId, value: string): void {\r\n        Contracts.throwIfNull(value, \"value\");\r\n\r\n        this.privProperties.setProperty(name, value);\r\n    }\r\n\r\n    public getProperty(name: string | PropertyId, def?: string): string {\r\n\r\n        return this.privProperties.getProperty(name, def);\r\n    }\r\n\r\n    public setProxy(proxyHostName: string, proxyPort: number): void;\r\n    public setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n    public setProxy(proxyHostName: any, proxyPort: any, proxyUserName?: any, proxyPassword?: any): void {\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPort], proxyPort);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword);\r\n    }\r\n\r\n    public setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void {\r\n        const currentProperties: IStringDictionary<string> = JSON.parse(this.privProperties.getProperty(ServicePropertiesPropertyName, \"{}\"));\r\n\r\n        currentProperties[name] = value;\r\n\r\n        this.privProperties.setProperty(ServicePropertiesPropertyName, JSON.stringify(currentProperties));\r\n    }\r\n\r\n    public setProfanity(profanity: ProfanityOption): void {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_ProfanityOption, ProfanityOption[profanity]);\r\n    }\r\n\r\n    public enableAudioLogging(): void {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\r\n    }\r\n    public requestWordLevelTimestamps(): void {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\r\n    }\r\n    public enableDictation(): void {\r\n        this.privProperties.setProperty(ForceDictationPropertyName, \"true\");\r\n    }\r\n\r\n    public clone(): SpeechConfigImpl {\r\n        const ret: SpeechConfigImpl = new SpeechConfigImpl();\r\n        ret.privProperties = this.privProperties.clone();\r\n        return ret;\r\n    }\r\n\r\n    public get speechSynthesisLanguage(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage);\r\n    }\r\n\r\n    public set speechSynthesisLanguage(language: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthLanguage, language);\r\n    }\r\n\r\n    public get speechSynthesisVoiceName(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice);\r\n    }\r\n\r\n    public set speechSynthesisVoiceName(voice: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthVoice, voice);\r\n    }\r\n\r\n    public get speechSynthesisOutputFormat(): SpeechSynthesisOutputFormat {\r\n        return (SpeechSynthesisOutputFormat as any)[this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)];\r\n    }\r\n\r\n    public set speechSynthesisOutputFormat(format: SpeechSynthesisOutputFormat) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, SpeechSynthesisOutputFormat[format]);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    OutputFormatPropertyName,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechConnectionFactory,\r\n    SpeechServiceConfig,\r\n    SpeechServiceRecognizer,\r\n} from \"../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    AutoDetectSourceLanguageConfig,\r\n    KeywordRecognitionModel,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"./Exports\";\r\nimport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Performs speech recognition from microphone, file, or other audio input streams, and gets transcribed text as result.\r\n * @class SpeechRecognizer\r\n */\r\nexport class SpeechRecognizer extends Recognizer {\r\n    private privDisposedRecognizer: boolean;\r\n\r\n    /**\r\n     * SpeechRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig?: AudioConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            speechConfigImpl.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        super(audioConfig, speechConfigImpl.properties, new SpeechConnectionFactory());\r\n        this.privDisposedRecognizer = false;\r\n    }\r\n\r\n    /**\r\n     * SpeechRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\r\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public static FromConfig(speechConfig: SpeechConfig, autoDetectSourceLanguageConfig: AutoDetectSourceLanguageConfig, audioConfig?: AudioConfig): SpeechRecognizer {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\r\n        const recognizer = new SpeechRecognizer(speechConfig, audioConfig);\r\n        return recognizer;\r\n    }\r\n\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member SpeechRecognizer.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member SpeechRecognizer.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member SpeechRecognizer.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: Recognizer, event: SpeechRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the endpoint id of a customized speech model that is used for speech recognition.\r\n     * @member SpeechRecognizer.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @returns {string} the endpoint id of a customized speech model that is used for speech recognition.\r\n     */\r\n    public get endpointId(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_EndpointId, \"00000000-0000-0000-0000-000000000000\");\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member SpeechRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member SpeechRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * Gets the spoken language of recognition.\r\n     * @member SpeechRecognizer.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} The spoken language of recognition.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * Gets the output format of recognition.\r\n     * @member SpeechRecognizer.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {OutputFormat} The output format of recognition.\r\n     */\r\n    public get outputFormat(): OutputFormat {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        if (this.properties.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]) === OutputFormat[OutputFormat.Simple]) {\r\n            return OutputFormat.Simple;\r\n        } else {\r\n            return OutputFormat.Detailed;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this SpeechRecognizer.\r\n     * @member SpeechRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition, and stops after the first utterance is recognized.\r\n     * The task returns the recognition text as result.\r\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\r\n     *       so it is suitable only for single shot recognition\r\n     *       like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead.\r\n     * @member SpeechRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the SpeechRecognitionResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public recognizeOnceAsync(cb?: (e: SpeechRecognitionResult) => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Interactive), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * @member SpeechRecognizer.prototype.startContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stops continuous speech recognition.\r\n     * @member SpeechRecognizer.prototype.stopContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition with keyword spotting, until\r\n     * stopKeywordRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * Note: Key word spotting functionality is only available on the\r\n     *      Speech Devices SDK. This functionality is currently not included in the SDK itself.\r\n     * @member SpeechRecognizer.prototype.startKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param {KeywordRecognitionModel} model The keyword recognition model that\r\n     *        specifies the keyword to be recognized.\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startKeywordRecognitionAsync(model: KeywordRecognitionModel, cb?: () => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        if (!!err) {\r\n            err(\"Not yet implemented.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops continuous speech recognition.\r\n     * Note: Key word spotting functionality is only available on the\r\n     *       Speech Devices SDK. This functionality is currently not included in the SDK itself.\r\n     * @member SpeechRecognizer.prototype.stopKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopKeywordRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        if (!!cb) {\r\n            cb();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member SpeechRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member SpeechRecognizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n            await this.implRecognizerStop();\r\n        }\r\n\r\n        await super.dispose(disposing);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(\r\n            speechConfig,\r\n            this.properties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new SpeechServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CognitiveSubscriptionKeyAuthentication,\r\n    CognitiveTokenAuthentication,\r\n    Context,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    OS,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    Deferred,\r\n    marshalPromiseToCallbacks\r\n} from \"../common/Exports\";\r\nimport {\r\n    Contracts\r\n} from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    Connection,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    RecognitionEventArgs,\r\n    SessionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines the base class Recognizer which mainly contains common event handlers.\r\n * @class Recognizer\r\n */\r\nexport abstract class Recognizer {\r\n    private privDisposed: boolean;\r\n    protected audioConfig: AudioConfig;\r\n    protected privReco: ServiceRecognizerBase;\r\n    protected privProperties: PropertyCollection;\r\n    private privConnectionFactory: IConnectionFactory;\r\n\r\n    /**\r\n     * Creates and initializes an instance of a Recognizer\r\n     * @constructor\r\n     * @param {AudioConfig} audioInput - An optional audio input stream associated with the recognizer\r\n     */\r\n    protected constructor(audioConfig: AudioConfig, properties: PropertyCollection, connectionFactory: IConnectionFactory) {\r\n        this.audioConfig = (audioConfig !== undefined) ? audioConfig : AudioConfig.fromDefaultMicrophoneInput();\r\n        this.privDisposed = false;\r\n        this.privProperties = properties.clone();\r\n        this.privConnectionFactory = connectionFactory;\r\n        this.implCommonRecognizerSetup();\r\n    }\r\n\r\n    /**\r\n     * Defines event handler for session started events.\r\n     * @member Recognizer.prototype.sessionStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStarted: (sender: Recognizer, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for session stopped events.\r\n     * @member Recognizer.prototype.sessionStopped\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStopped: (sender: Recognizer, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for speech started events.\r\n     * @member Recognizer.prototype.speechStartDetected\r\n     * @function\r\n     * @public\r\n     */\r\n    public speechStartDetected: (sender: Recognizer, event: RecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for speech stopped events.\r\n     * @member Recognizer.prototype.speechEndDetected\r\n     * @function\r\n     * @public\r\n     */\r\n    public speechEndDetected: (sender: Recognizer, event: RecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member Recognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * Internal data member to support fromRecognizer* pattern methods on other classes.\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public get internalData(): object {\r\n        return this.privReco;\r\n    }\r\n\r\n    /**\r\n     * This method performs cleanup of resources.\r\n     * The Boolean parameter disposing indicates whether the method is called\r\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\r\n     * Derived classes should override this method to dispose resource if needed.\r\n     * @member Recognizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - Flag to request disposal.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposed = true;\r\n\r\n        if (disposing) {\r\n            if (this.privReco) {\r\n                await this.privReco.audioSource.turnOff();\r\n                await this.privReco.dispose();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method returns the current state of the telemetry setting.\r\n     * @member Recognizer.prototype.telemetryEnabled\r\n     * @function\r\n     * @public\r\n     * @returns true if the telemetry is enabled, false otherwise.\r\n     */\r\n    public static get telemetryEnabled(): boolean {\r\n        return ServiceRecognizerBase.telemetryDataEnabled;\r\n    }\r\n\r\n    /**\r\n     * This method globally enables or disables telemetry.\r\n     * @member Recognizer.prototype.enableTelemetry\r\n     * @function\r\n     * @public\r\n     * @param enabled - Global setting for telemetry collection.\r\n     * If set to true, telemetry information like microphone errors,\r\n     * recognition errors are collected and sent to Microsoft.\r\n     * If set to false, no telemetry is sent to Microsoft.\r\n     */\r\n    /* tslint:disable:member-ordering */\r\n    public static enableTelemetry(enabled: boolean): void {\r\n        ServiceRecognizerBase.telemetryDataEnabled = enabled;\r\n    }\r\n\r\n    //\r\n    // ################################################################################################################\r\n    // IMPLEMENTATION.\r\n    // Move to independent class\r\n    // ################################################################################################################\r\n    //\r\n    protected abstract createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig;\r\n\r\n    // Creates the correct service recognizer for the type\r\n    protected abstract createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase;\r\n\r\n    // Does the generic recognizer setup that is common across all recognizer types.\r\n    protected implCommonRecognizerSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const recognizerConfig = this.createRecognizerConfig(\r\n            new SpeechServiceConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion))));\r\n\r\n        this.privReco = this.createServiceRecognizer(\r\n            Recognizer.getAuthFromProperties(this.privProperties),\r\n            this.privConnectionFactory,\r\n            this.audioConfig,\r\n            recognizerConfig);\r\n    }\r\n\r\n    protected async recognizeOnceAsyncImpl(recognitionMode: RecognitionMode): Promise<SpeechRecognitionResult> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        const ret: Deferred<SpeechRecognitionResult> = new Deferred<SpeechRecognitionResult>();\r\n\r\n        await this.implRecognizerStop();\r\n        await this.privReco.recognize(recognitionMode, ret.resolve, ret.reject);\r\n        const result: SpeechRecognitionResult = await ret.promise;\r\n        await this.implRecognizerStop();\r\n\r\n        return result;\r\n\r\n    }\r\n\r\n    protected async startContinuousRecognitionAsyncImpl(recognitionMode: RecognitionMode): Promise<void> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n\r\n        await this.implRecognizerStop();\r\n        await this.privReco.recognize(recognitionMode, undefined, undefined);\r\n    }\r\n\r\n    protected async stopContinuousRecognitionAsyncImpl(): Promise<void> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        await this.implRecognizerStop();\r\n    }\r\n\r\n    protected async implRecognizerStop(): Promise<void> {\r\n        if (this.privReco) {\r\n            await this.privReco.stopRecognizing();\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected static getAuthFromProperties(properties: PropertyCollection): IAuthentication {\r\n        const subscriptionKey = properties.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\r\n        const authentication = (subscriptionKey && subscriptionKey !== \"\") ?\r\n            new CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\r\n            new CognitiveTokenAuthentication(\r\n                (authFetchEventId: string): Promise<string> => {\r\n                    const authorizationToken = properties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                },\r\n                (authFetchEventId: string): Promise<string> => {\r\n                    const authorizationToken = properties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                });\r\n\r\n        return authentication;\r\n    }\r\n}\r\n"],"sourceRoot":""}