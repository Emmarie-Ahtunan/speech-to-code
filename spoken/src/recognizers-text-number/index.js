var commonjsGlobal="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function unwrapExports(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function createCommonjsModule(e,r){return e(r={exports:{}},r.exports),r.exports}var culture=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});class u{constructor(e,r){this.cultureName=e,this.cultureCode=r}static getSupportedCultureCodes(){return u.supportedCultures.map(e=>e.cultureCode)}static mapToNearestLanguage(e){if(void 0!==e){e=e.toLowerCase();var r=u.getSupportedCultureCodes();if(r.indexOf(e)<0){var t=e.split("-")[0].trim();r.forEach(function(r){r.startsWith(t)&&(e=r)})}}return e}}u.English="en-us",u.Chinese="zh-cn",u.Spanish="es-es",u.Portuguese="pt-br",u.French="fr-fr",u.German="de-de",u.Japanese="ja-jp",u.Dutch="nl-nl",u.Italian="it-it",u.supportedCultures=[new u("English",u.English),new u("Chinese",u.Chinese),new u("Spanish",u.Spanish),new u("Portuguese",u.Portuguese),new u("French",u.French),new u("German",u.German),new u("Japanese",u.Japanese),new u("Dutch",u.Dutch),new u("Italian",u.Italian)],r.Culture=u;class t{static getCultureInfo(e){return new t(e)}constructor(e){this.code=e}}r.CultureInfo=t});unwrapExports(culture);var xregexp=createCommonjsModule(function(e,r){"use strict";function u(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){var u=[],t=!0,n=!1,a=void 0;try{for(var d,i=e[Symbol.iterator]();!(t=(d=i.next()).done)&&(u.push(d.value),!r||u.length!==r);t=!0);}catch(e){n=!0,a=e}finally{try{t||null==i.return||i.return()}finally{if(n)throw a}}return u}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var t="xregexp",n={astral:!1,namespacing:!1},a={exec:RegExp.prototype.exec,test:RegExp.prototype.test,match:String.prototype.match,replace:String.prototype.replace,split:String.prototype.split},d={},i={},s={},o=[],c="default",l="class",g={default:/\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\d*|x[\dA-Fa-f]{2}|u(?:[\dA-Fa-f]{4}|{[\dA-Fa-f]+})|c[A-Za-z]|[\s\S])|\(\?(?:[:=!]|<[=!])|[?*+]\?|{\d+(?:,\d*)?}\??|[\s\S]/,class:/\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\dA-Fa-f]{2}|u(?:[\dA-Fa-f]{4}|{[\dA-Fa-f]+})|c[A-Za-z]|[\s\S])|[\s\S]/},m=/\$(?:{([\w$]+)}|<([\w$]+)>|(\d\d?|[\s\S]))/g,f=void 0===a.exec.call(/()??/,"")[1],x=void 0!==/x/.flags,p={}.toString;function b(e){var r=!0;try{new RegExp("",e)}catch(e){r=!1}return r}var h=b("u"),N=b("y"),R={g:!0,i:!0,m:!0,u:h,y:N};function E(e,r,u,n,a){if(e[t]={captureNames:r},a)return e;if(e.__proto__)e.__proto__=O.prototype;else for(var d in O.prototype)e[d]=O.prototype[d];return e[t].source=u,e[t].flags=n?n.split("").sort().join(""):n,e}function T(e){return a.replace.call(e,/([\s\S])(?=[\s\S]*\1)/g,"")}function S(e,r){if(!O.isRegExp(e))throw new TypeError("Type RegExp expected");var u=e[t]||{},n=function(e){return x?e.flags:a.exec.call(/\/([a-z]*)$/i,RegExp.prototype.toString.call(e))[1]}(e),d="",i="",s=null,o=null;return(r=r||{}).removeG&&(i+="g"),r.removeY&&(i+="y"),i&&(n=a.replace.call(n,new RegExp("[".concat(i,"]+"),"g"),"")),r.addG&&(d+="g"),r.addY&&(d+="y"),d&&(n=T(n+d)),r.isInternalOnly||(void 0!==u.source&&(s=u.source),null!=u.flags&&(o=d?T(u.flags+d):u.flags)),e=E(new RegExp(r.source||e.source,n),function(e){return!(!e[t]||!e[t].captureNames)}(e)?u.captureNames.slice(0):null,s,o,r.isInternalOnly)}function v(e){return parseInt(e,16)}function $(e,r,u){return"("===e.input[e.index-1]||")"===e.input[e.index+e[0].length]||"|"===e.input[e.index-1]||"|"===e.input[e.index+e[0].length]||e.index<1||e.index+e[0].length>=e.input.length||a.test.call(/^\(\?[:=!]/,e.input.substr(e.index-3,3))||function(e,r,u){return a.test.call(-1!==u.indexOf("x")?/^(?:\s|#[^#\n]*|\(\?#[^)]*\))*(?:[?*+]|{\d+(?:,\d*)?})/:/^(?:\(\?#[^)]*\))*(?:[?*+]|{\d+(?:,\d*)?})/,e.slice(r))}(e.input,e.index+e[0].length,u)?"":"(?:)"}function y(e){return parseInt(e,10).toString(16)}function _(e,r){return p.call(e)==="[object ".concat(r,"]")}function I(e){for(;e.length<4;)e="0".concat(e);return e}function C(e){var r={};return _(e,"String")?(O.forEach(e,/[^\s,]+/,function(e){r[e]=!0}),r):e}function P(e){if(!/^[\w$]$/.test(e))throw new Error("Flag must be a single character A-Za-z0-9_$");R[e]=!0}function M(e,r,u,t,n){for(var a,d,i=o.length,s=e[u],c=null;i--;)if(!((d=o[i]).leadChar&&d.leadChar!==s||d.scope!==t&&"all"!==d.scope||d.flag&&-1===r.indexOf(d.flag))&&(a=O.exec(e,d.regex,u,"sticky"))){c={matchLength:a[0].length,output:d.handler.call(n,a,t,r),reparse:d.reparse};break}return c}function z(e){n.astral=e}function w(e){n.namespacing=e}function F(e){if(null==e)throw new TypeError("Cannot convert null or undefined to object");return e}function O(e,r){if(O.isRegExp(e)){if(void 0!==r)throw new TypeError("Cannot supply flags when copying a RegExp");return S(e)}if(e=void 0===e?"":String(e),r=void 0===r?"":String(r),O.isInstalled("astral")&&-1===r.indexOf("A")&&(r+="A"),s[e]||(s[e]={}),!s[e][r]){for(var t,n={hasNamedCapture:!1,captureNames:[]},d=c,i="",o=0,m=function(e,r){if(T(r)!==r)throw new SyntaxError("Invalid duplicate regex flag ".concat(r));e=a.replace.call(e,/^\(\?([\w$]+)\)/,function(e,u){if(a.test.call(/[gy]/,u))throw new SyntaxError("Cannot use flag g or y in mode modifier ".concat(e));return r=T(r+u),""});var u=!0,t=!1,n=void 0;try{for(var d,i=r[Symbol.iterator]();!(u=(d=i.next()).done);u=!0){var s=d.value;if(!R[s])throw new SyntaxError("Unknown regex flag ".concat(s))}}catch(e){t=!0,n=e}finally{try{u||null==i.return||i.return()}finally{if(t)throw n}}return{pattern:e,flags:r}}(e,r),f=m.pattern,x=m.flags;o<f.length;){do{(t=M(f,x,o,d,n))&&t.reparse&&(f=f.slice(0,o)+t.output+f.slice(o+t.matchLength))}while(t&&t.reparse);if(t)i+=t.output,o+=t.matchLength||1;else{var p=u(O.exec(f,g[d],o,"sticky"),1)[0];i+=p,o+=p.length,"["===p&&d===c?d=l:"]"===p&&d===l&&(d=c)}}s[e][r]={pattern:a.replace.call(i,/(?:\(\?:\))+/g,"(?:)"),flags:a.replace.call(x,/[^gimuy]+/g,""),captures:n.hasNamedCapture?n.captureNames:null}}var b=s[e][r];return E(new RegExp(b.pattern,b.flags),b.captures,e,r)}O.prototype=/(?:)/,O.version="4.2.0",O._clipDuplicates=T,O._hasNativeFlag=b,O._dec=v,O._hex=y,O._pad4=I,O.addToken=function(e,r,u){var t=(u=u||{}).optionalFlags;if(u.flag&&P(u.flag),t){t=a.split.call(t,"");var n=!0,d=!1,i=void 0;try{for(var s,l=t[Symbol.iterator]();!(n=(s=l.next()).done);n=!0){P(s.value)}}catch(e){d=!0,i=e}finally{try{n||null==l.return||l.return()}finally{if(d)throw i}}}o.push({regex:S(e,{addG:!0,addY:N,isInternalOnly:!0}),handler:r,scope:u.scope||c,flag:u.flag,reparse:u.reparse,leadChar:u.leadChar}),O.cache.flush("patterns")},O.cache=function(e,r){return i[e]||(i[e]={}),i[e][r]||(i[e][r]=O(e,r))},O.cache.flush=function(e){"patterns"===e?s={}:i={}},O.escape=function(e){return a.replace.call(F(e),/[-\[\]{}()*+?.,\\^$|#\s]/g,"\\$&")},O.exec=function(e,r,u,n){var a,i,s="g",o=!1;(a=N&&!!(n||r.sticky&&!1!==n))?s+="y":n&&(o=!0,s+="FakeY"),r[t]=r[t]||{};var c=r[t][s]||(r[t][s]=S(r,{addG:!0,addY:a,source:o?"".concat(r.source,"|()"):void 0,removeY:!1===n,isInternalOnly:!0}));return u=u||0,c.lastIndex=u,i=d.exec.call(c,e),o&&i&&""===i.pop()&&(i=null),r.global&&(r.lastIndex=i?c.lastIndex:0),i},O.forEach=function(e,r,u){for(var t,n=0,a=-1;t=O.exec(e,r,n);)u(t,++a,e,r),n=t.index+(t[0].length||1)},O.globalize=function(e){return S(e,{addG:!0})},O.install=function(e){e=C(e),!n.astral&&e.astral&&z(!0),!n.namespacing&&e.namespacing&&w(!0)},O.isInstalled=function(e){return!!n[e]},O.isRegExp=function(e){return"[object RegExp]"===p.call(e)},O.match=function(e,r,u){var n=r.global&&"one"!==u||"all"===u,d=(n?"g":"")+(r.sticky?"y":"")||"noGY";r[t]=r[t]||{};var i=r[t][d]||(r[t][d]=S(r,{addG:!!n,removeG:"one"===u,isInternalOnly:!0})),s=a.match.call(F(e),i);return r.global&&(r.lastIndex="one"===u&&s?s.index+s[0].length:0),n?s||[]:s&&s[0]},O.matchChain=function(e,r){return function e(u,t){var n=r[t].regex?r[t]:{regex:r[t]},a=[];function d(e){if(n.backref){var r="Backreference to undefined group: ".concat(n.backref),u=isNaN(n.backref);if(u&&O.isInstalled("namespacing")){if(!(n.backref in e.groups))throw new ReferenceError(r)}else if(!e.hasOwnProperty(n.backref))throw new ReferenceError(r);var t=u&&O.isInstalled("namespacing")?e.groups[n.backref]:e[n.backref];a.push(t||"")}else a.push(e[0])}var i=!0,s=!1,o=void 0;try{for(var c,l=u[Symbol.iterator]();!(i=(c=l.next()).done);i=!0){var g=c.value;O.forEach(g,n.regex,d)}}catch(e){s=!0,o=e}finally{try{i||null==l.return||l.return()}finally{if(s)throw o}}return t!==r.length-1&&a.length?e(a,t+1):a}([e],0)},O.replace=function(e,r,u,n){var a=O.isRegExp(r),i=r.global&&"one"!==n||"all"===n,s=(i?"g":"")+(r.sticky?"y":"")||"noGY",o=r;a?(r[t]=r[t]||{},o=r[t][s]||(r[t][s]=S(r,{addG:!!i,removeG:"one"===n,isInternalOnly:!0}))):i&&(o=new RegExp(O.escape(String(r)),"g"));var c=d.replace.call(F(e),o,u);return a&&r.global&&(r.lastIndex=0),c},O.replaceEach=function(e,r){var u=!0,t=!1,n=void 0;try{for(var a,d=r[Symbol.iterator]();!(u=(a=d.next()).done);u=!0){var i=a.value;e=O.replace(e,i[0],i[1],i[2])}}catch(e){t=!0,n=e}finally{try{u||null==d.return||d.return()}finally{if(t)throw n}}return e},O.split=function(e,r,u){return d.split.call(F(e),r,u)},O.test=function(e,r,u,t){return!!O.exec(e,r,u,t)},O.uninstall=function(e){e=C(e),n.astral&&e.astral&&z(!1),n.namespacing&&e.namespacing&&w(!1)},O.union=function(e,r,u){var n,d,i=(u=u||{}).conjunction||"or",s=0;function o(e,r,u){var t=d[s-n];if(r){if(++s,t)return"(?<".concat(t,">")}else if(u)return"\\".concat(+u+n);return e}if(!_(e,"Array")||!e.length)throw new TypeError("Must provide a nonempty array of patterns to merge");var c=/(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*\]/g,l=[],g=!0,m=!1,f=void 0;try{for(var x,p=e[Symbol.iterator]();!(g=(x=p.next()).done);g=!0){var b=x.value;O.isRegExp(b)?(n=s,d=b[t]&&b[t].captureNames||[],l.push(a.replace.call(O(b.source).source,c,o))):l.push(O.escape(b))}}catch(e){m=!0,f=e}finally{try{g||null==p.return||p.return()}finally{if(m)throw f}}var h="none"===i?"":"|";return O(l.join(h),r)},d.exec=function(e){var r=this.lastIndex,u=a.exec.apply(this,arguments);if(u){if(!f&&u.length>1&&-1!==u.indexOf("")){var n=S(this,{removeG:!0,isInternalOnly:!0});a.replace.call(String(e).slice(u.index),n,function(){for(var e=arguments.length,r=1;r<e-2;++r)void 0===(r<0||arguments.length<=r?void 0:arguments[r])&&(u[r]=void 0)})}var d=u;if(O.isInstalled("namespacing")&&(u.groups=Object.create(null),d=u.groups),this[t]&&this[t].captureNames)for(var i=1;i<u.length;++i){var s=this[t].captureNames[i-1];s&&(d[s]=u[i])}this.global&&!u[0].length&&this.lastIndex>u.index&&(this.lastIndex=u.index)}return this.global||(this.lastIndex=r),u},d.test=function(e){return!!d.exec.call(this,e)},d.match=function(e){if(O.isRegExp(e)){if(e.global){var r=a.match.apply(this,arguments);return e.lastIndex=0,r}}else e=new RegExp(e);return d.exec.call(e,F(this))},d.replace=function(e,r){var u,n,d,i=O.isRegExp(e);return i?(e[t]&&(n=e[t].captureNames),u=e.lastIndex):e+="",d=_(r,"Function")?a.replace.call(String(this),e,function(){for(var u=arguments.length,t=new Array(u),a=0;a<u;a++)t[a]=arguments[a];if(n){var d;O.isInstalled("namespacing")?(d=Object.create(null),t.push(d)):(t[0]=new String(t[0]),d=t[0]);for(var s=0;s<n.length;++s)n[s]&&(d[n[s]]=t[s+1])}return i&&e.global&&(e.lastIndex=t[t.length-2]+t[0].length),r.apply(void 0,t)}):a.replace.call(null==this?this:String(this),e,function(){for(var e=arguments.length,u=new Array(e),t=0;t<e;t++)u[t]=arguments[t];return a.replace.call(String(r),m,function(e,r,t,a){if(r=r||t){var d=+r;if(d<=u.length-3)return u[d]||"";if((d=n?n.indexOf(r):-1)<0)throw new SyntaxError("Backreference to undefined group ".concat(e));return u[d+1]||""}if("$"===a)return"$";if("&"===a||0==+a)return u[0];if("`"===a)return u[u.length-1].slice(0,u[u.length-2]);if("'"===a)return u[u.length-1].slice(u[u.length-2]+u[0].length);if(a=+a,!isNaN(a)){if(a>u.length-3)throw new SyntaxError("Backreference to undefined group ".concat(e));return u[a]||""}throw new SyntaxError("Invalid token ".concat(e))})}),i&&(e.global?e.lastIndex=0:e.lastIndex=u),d},d.split=function(e,r){if(!O.isRegExp(e))return a.split.apply(this,arguments);var u,t=String(this),n=[],d=e.lastIndex,i=0;return r=(void 0===r?-1:r)>>>0,O.forEach(t,e,function(e){e.index+e[0].length>i&&(n.push(t.slice(i,e.index)),e.length>1&&e.index<t.length&&Array.prototype.push.apply(n,e.slice(1)),u=e[0].length,i=e.index+u)}),i===t.length?a.test.call(e,"")&&!u||n.push(""):n.push(t.slice(i)),e.lastIndex=d,n.length>r?n.slice(0,r):n},O.addToken(/\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\dA-Fa-f]{4}|{[\dA-Fa-f]+})|x(?![\dA-Fa-f]{2}))/,function(e,r){if("B"===e[1]&&r===c)return e[0];throw new SyntaxError("Invalid escape ".concat(e[0]))},{scope:"all",leadChar:"\\"}),O.addToken(/\\u{([\dA-Fa-f]+)}/,function(e,r,u){var t=v(e[1]);if(t>1114111)throw new SyntaxError("Invalid Unicode code point ".concat(e[0]));if(t<=65535)return"\\u".concat(I(y(t)));if(h&&-1!==u.indexOf("u"))return e[0];throw new SyntaxError("Cannot use Unicode code point above \\u{FFFF} without flag u")},{scope:"all",leadChar:"\\"}),O.addToken(/\[(\^?)\]/,function(e){return e[1]?"[\\s\\S]":"\\b\\B"},{leadChar:"["}),O.addToken(/\(\?#[^)]*\)/,$,{leadChar:"("}),O.addToken(/\s+|#[^\n]*\n?/,$,{flag:"x"}),O.addToken(/\./,function(){return"[\\s\\S]"},{flag:"s",leadChar:"."}),O.addToken(/\\k<([\w$]+)>/,function(e){var r=isNaN(e[1])?this.captureNames.indexOf(e[1])+1:+e[1],u=e.index+e[0].length;if(!r||r>this.captureNames.length)throw new SyntaxError("Backreference to undefined group ".concat(e[0]));return"\\".concat(r).concat(u===e.input.length||isNaN(e.input[u])?"":"(?:)")},{leadChar:"\\"}),O.addToken(/\\(\d+)/,function(e,r){if(!(r===c&&/^[1-9]/.test(e[1])&&+e[1]<=this.captureNames.length)&&"0"!==e[1])throw new SyntaxError("Cannot use octal escape or backreference to undefined group ".concat(e[0]));return e[0]},{scope:"all",leadChar:"\\"}),O.addToken(/\(\?P?<([\w$]+)>/,function(e){if(!isNaN(e[1]))throw new SyntaxError("Cannot use integer as capture name ".concat(e[0]));if(!O.isInstalled("namespacing")&&("length"===e[1]||"__proto__"===e[1]))throw new SyntaxError("Cannot use reserved word as capture name ".concat(e[0]));if(-1!==this.captureNames.indexOf(e[1]))throw new SyntaxError("Cannot use same name for multiple groups ".concat(e[0]));return this.captureNames.push(e[1]),this.hasNamedCapture=!0,"("},{leadChar:"("}),O.addToken(/\((?!\?)/,function(e,r,u){return-1!==u.indexOf("n")?"(?:":(this.captureNames.push(null),"(")},{optionalFlags:"n",leadChar:"("});var A=O;r.default=A,e.exports=r.default});unwrapExports(xregexp);var build=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(e){var r="xregexp",u=/(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*\]/g,t=e.union([/\({{([\w$]+)}}\)|{{([\w$]+)}}/,u],"g",{conjunction:"or"});function n(e){var r=/^(?:\(\?:\))*\^/,u=/\$(?:\(\?:\))*$/;return r.test(e)&&u.test(e)&&u.test(e.replace(/\\[\s\S]/g,""))?e.replace(r,"").replace(u,""):e}function a(u,t){var n=t?"x":"";return e.isRegExp(u)?u[r]&&u[r].captureNames?u:e(u.source,n):e(u,n)}function d(r){return r instanceof RegExp?r:e.escape(r)}function i(e,r,u){return e["subpattern".concat(u)]=r,e}function s(e,r,u){return e+(r<u.length-1?"{{subpattern".concat(r,"}}"):"")}e.tag=function(r){return function(u){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];var o=n.map(d).reduce(i,{}),c=u.raw.map(s).join("");return e.build(c,o,r)}},e.build=function(d,i,s){var o=-1!==(s=s||"").indexOf("x"),c=/^\(\?([\w$]+)\)/.exec(d);c&&(s=e._clipDuplicates(s+c[1]));var l={};for(var g in i)if(i.hasOwnProperty(g)){var m=a(i[g],o);l[g]={pattern:n(m.source),names:m[r].captureNames||[]}}var f,x=a(d,o),p=0,b=0,h=[0],N=x[r].captureNames||[],R=x.source.replace(t,function(e,r,t,n,a){var d,i,s,o=r||t;if(o){if(!l.hasOwnProperty(o))throw new ReferenceError("Undefined property ".concat(e));r?(d=N[b],h[++b]=++p,i="(?<".concat(d||o,">")):i="(?:",f=p;var c=l[o].pattern.replace(u,function(e,r,u){if(r){if(d=l[o].names[p-f],++p,d)return"(?<".concat(d,">")}else if(u)return s=+u-1,l[o].names[s]?"\\k<".concat(l[o].names[s],">"):"\\".concat(+u+f);return e});return"".concat(i).concat(c,")")}if(n){if(d=N[b],h[++b]=++p,d)return"(?<".concat(d,">")}else if(a)return N[s=+a-1]?"\\k<".concat(N[s],">"):"\\".concat(h[+a]);return e});return e(R,s)}},e.exports=r.default});unwrapExports(build);var matchrecursive=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(e){function r(e,r,u,t){return{name:e,value:r,start:u,end:t}}e.matchRecursive=function(u,t,n,a,d){d=d||{};var i,s,o,c,l,g=-1!==(a=a||"").indexOf("g"),m=-1!==a.indexOf("y"),f=a.replace(/y/g,""),x=d.escapeChar,p=d.valueNames,b=[],h=0,N=0,R=0,E=0;if(t=e(t,f),n=e(n,f),x){if(x.length>1)throw new Error("Cannot use more than one escape character");x=e.escape(x),l=new RegExp("(?:".concat(x,"[\\S\\s]|(?:(?!").concat(e.union([t,n],"",{conjunction:"or"}).source,")[^").concat(x,"])+)+"),a.replace(/[^imu]+/g,""))}for(;;){if(x&&(R+=(e.exec(u,l,R,"sticky")||[""])[0].length),o=e.exec(u,t,R),c=e.exec(u,n,R),o&&c&&(o.index<=c.index?c=null:o=null),o||c)R=(N=(o||c).index)+(o||c)[0].length;else if(!h)break;if(m&&!h&&N>E)break;if(o)h||(i=N,s=R),++h;else{if(!c||!h)throw new Error("Unbalanced delimiter found in string");if(!--h&&(p?(p[0]&&i>E&&b.push(r(p[0],u.slice(E,i),E,i)),p[1]&&b.push(r(p[1],u.slice(i,s),i,s)),p[2]&&b.push(r(p[2],u.slice(s,N),s,N)),p[3]&&b.push(r(p[3],u.slice(N,R),N,R))):b.push(u.slice(s,N)),E=R,!g))break}N===R&&++R}return g&&!m&&p&&p[0]&&u.length>E&&b.push(r(p[0],u.slice(E),E,u.length)),b}},e.exports=r.default});unwrapExports(matchrecursive);var unicodeBase=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=function(e){var r={},u=e._dec,t=e._hex,n=e._pad4;function a(e){return e.replace(/[- _]+/g,"").toLowerCase()}function d(e){var r=/^\\[xu](.+)/.exec(e);return r?u(r[1]):e.charCodeAt("\\"===e[0]?1:0)}function i(u){var a,i,s;return r[u]["b!"]||(r[u]["b!"]=(a=r[u].bmp,i="",s=-1,e.forEach(a,/(\\x..|\\u....|\\?[\s\S])(?:-(\\x..|\\u....|\\?[\s\S]))?/,function(e){var r=d(e[1]);r>s+1&&(i+="\\u".concat(n(t(s+1))),r>s+2&&(i+="-\\u".concat(n(t(r-1))))),s=d(e[2]||e[1])}),s<65535&&(i+="\\u".concat(n(t(s+1))),s<65534&&(i+="-\\uFFFF")),i))}function s(e,u){var t=u?"a!":"a=";return r[e][t]||(r[e][t]=function(e,u){var t=r[e],n="";return t.bmp&&!t.isBmpLast&&(n="[".concat(t.bmp,"]").concat(t.astral?"|":"")),t.astral&&(n+=t.astral),t.isBmpLast&&t.bmp&&(n+="".concat(t.astral?"|":"","[").concat(t.bmp,"]")),u?"(?:(?!".concat(n,")(?:[\ud800-\udbff][\udc00-\udfff]|[\0-￿]))"):"(?:".concat(n,")")}(e,u))}e.addToken(/\\([pP])(?:{(\^?)([^}]*)}|([A-Za-z]))/,function(e,u,t){var n="P"===e[1]||!!e[2],d=-1!==t.indexOf("A"),o=a(e[4]||e[3]),c=r[o];if("P"===e[1]&&e[2])throw new SyntaxError("Invalid double negation "+e[0]);if(!r.hasOwnProperty(o))throw new SyntaxError("Unknown Unicode token "+e[0]);if(c.inverseOf){if(o=a(c.inverseOf),!r.hasOwnProperty(o))throw new ReferenceError("".concat("Unicode token missing data "+e[0]," -> ").concat(c.inverseOf));c=r[o],n=!n}if(!c.bmp&&!d)throw new SyntaxError("Astral mode required for Unicode token "+e[0]);if(d){if("class"===u)throw new SyntaxError("Astral mode does not support Unicode tokens within character classes");return s(o,n)}return"class"===u?n?i(o):c.bmp:"".concat((n?"[^":"[")+c.bmp,"]")},{scope:"all",optionalFlags:"A",leadChar:"\\"}),e.addUnicodeData=function(u){var t=!0,n=!1,d=void 0;try{for(var i,s=u[Symbol.iterator]();!(t=(i=s.next()).done);t=!0){var o=i.value;if(!o.name)throw new Error("Unicode token requires name");if(!(o.inverseOf||o.bmp||o.astral))throw new Error("Unicode token has no character data "+o.name);r[a(o.name)]=o,o.alias&&(r[a(o.alias)]=o)}}catch(e){n=!0,d=e}finally{try{t||null==s.return||s.return()}finally{if(n)throw d}}e.cache.flush("patterns")},e._getUnicodeProperty=function(e){var u=a(e);return r[u]}},e.exports=r.default});unwrapExports(unicodeBase);var blocks=[{name:"InAdlam",astral:"\ud83a[\udd00-\udd5f]"},{name:"InAegean_Numbers",astral:"\ud800[\udd00-\udd3f]"},{name:"InAhom",astral:"\ud805[\udf00-\udf3f]"},{name:"InAlchemical_Symbols",astral:"\ud83d[\udf00-\udf7f]"},{name:"InAlphabetic_Presentation_Forms",bmp:"ﬀ-ﭏ"},{name:"InAnatolian_Hieroglyphs",astral:"\ud811[\udc00-\ude7f]"},{name:"InAncient_Greek_Musical_Notation",astral:"\ud834[\ude00-\ude4f]"},{name:"InAncient_Greek_Numbers",astral:"\ud800[\udd40-\udd8f]"},{name:"InAncient_Symbols",astral:"\ud800[\udd90-\uddcf]"},{name:"InArabic",bmp:"؀-ۿ"},{name:"InArabic_Extended_A",bmp:"ࢠ-ࣿ"},{name:"InArabic_Mathematical_Alphabetic_Symbols",astral:"\ud83b[\ude00-\udeff]"},{name:"InArabic_Presentation_Forms_A",bmp:"ﭐ-﷿"},{name:"InArabic_Presentation_Forms_B",bmp:"ﹰ-\ufeff"},{name:"InArabic_Supplement",bmp:"ݐ-ݿ"},{name:"InArmenian",bmp:"԰-֏"},{name:"InArrows",bmp:"←-⇿"},{name:"InAvestan",astral:"\ud802[\udf00-\udf3f]"},{name:"InBalinese",bmp:"ᬀ-᭿"},{name:"InBamum",bmp:"ꚠ-꛿"},{name:"InBamum_Supplement",astral:"\ud81a[\udc00-\ude3f]"},{name:"InBasic_Latin",bmp:"\0-"},{name:"InBassa_Vah",astral:"\ud81a[\uded0-\udeff]"},{name:"InBatak",bmp:"ᯀ-᯿"},{name:"InBengali",bmp:"ঀ-৿"},{name:"InBhaiksuki",astral:"\ud807[\udc00-\udc6f]"},{name:"InBlock_Elements",bmp:"▀-▟"},{name:"InBopomofo",bmp:"㄀-ㄯ"},{name:"InBopomofo_Extended",bmp:"ㆠ-ㆿ"},{name:"InBox_Drawing",bmp:"─-╿"},{name:"InBrahmi",astral:"\ud804[\udc00-\udc7f]"},{name:"InBraille_Patterns",bmp:"⠀-⣿"},{name:"InBuginese",bmp:"ᨀ-᨟"},{name:"InBuhid",bmp:"ᝀ-᝟"},{name:"InByzantine_Musical_Symbols",astral:"\ud834[\udc00-\udcff]"},{name:"InCJK_Compatibility",bmp:"㌀-㏿"},{name:"InCJK_Compatibility_Forms",bmp:"︰-﹏"},{name:"InCJK_Compatibility_Ideographs",bmp:"豈-﫿"},{name:"InCJK_Compatibility_Ideographs_Supplement",astral:"\ud87e[\udc00-\ude1f]"},{name:"InCJK_Radicals_Supplement",bmp:"⺀-⻿"},{name:"InCJK_Strokes",bmp:"㇀-㇯"},{name:"InCJK_Symbols_And_Punctuation",bmp:"　-〿"},{name:"InCJK_Unified_Ideographs",bmp:"一-鿿"},{name:"InCJK_Unified_Ideographs_Extension_A",bmp:"㐀-䶿"},{name:"InCJK_Unified_Ideographs_Extension_B",astral:"[\ud840-\ud868][\udc00-\udfff]|\ud869[\udc00-\udedf]"},{name:"InCJK_Unified_Ideographs_Extension_C",astral:"\ud869[\udf00-\udfff]|[\ud86a-\ud86c][\udc00-\udfff]|\ud86d[\udc00-\udf3f]"},{name:"InCJK_Unified_Ideographs_Extension_D",astral:"\ud86d[\udf40-\udfff]|\ud86e[\udc00-\udc1f]"},{name:"InCJK_Unified_Ideographs_Extension_E",astral:"\ud86e[\udc20-\udfff]|[\ud86f-\ud872][\udc00-\udfff]|\ud873[\udc00-\udeaf]"},{name:"InCJK_Unified_Ideographs_Extension_F",astral:"\ud873[\udeb0-\udfff]|[\ud874-\ud879][\udc00-\udfff]|\ud87a[\udc00-\udfef]"},{name:"InCarian",astral:"\ud800[\udea0-\udedf]"},{name:"InCaucasian_Albanian",astral:"\ud801[\udd30-\udd6f]"},{name:"InChakma",astral:"\ud804[\udd00-\udd4f]"},{name:"InCham",bmp:"ꨀ-꩟"},{name:"InCherokee",bmp:"Ꭰ-᏿"},{name:"InCherokee_Supplement",bmp:"ꭰ-ꮿ"},{name:"InChess_Symbols",astral:"\ud83e[\ude00-\ude6f]"},{name:"InCombining_Diacritical_Marks",bmp:"̀-ͯ"},{name:"InCombining_Diacritical_Marks_Extended",bmp:"᪰-᫿"},{name:"InCombining_Diacritical_Marks_For_Symbols",bmp:"⃐-⃿"},{name:"InCombining_Diacritical_Marks_Supplement",bmp:"᷀-᷿"},{name:"InCombining_Half_Marks",bmp:"︠-︯"},{name:"InCommon_Indic_Number_Forms",bmp:"꠰-꠿"},{name:"InControl_Pictures",bmp:"␀-␿"},{name:"InCoptic",bmp:"Ⲁ-⳿"},{name:"InCoptic_Epact_Numbers",astral:"\ud800[\udee0-\udeff]"},{name:"InCounting_Rod_Numerals",astral:"\ud834[\udf60-\udf7f]"},{name:"InCuneiform",astral:"\ud808[\udc00-\udfff]"},{name:"InCuneiform_Numbers_And_Punctuation",astral:"\ud809[\udc00-\udc7f]"},{name:"InCurrency_Symbols",bmp:"₠-⃏"},{name:"InCypriot_Syllabary",astral:"\ud802[\udc00-\udc3f]"},{name:"InCyrillic",bmp:"Ѐ-ӿ"},{name:"InCyrillic_Extended_A",bmp:"ⷠ-ⷿ"},{name:"InCyrillic_Extended_B",bmp:"Ꙁ-ꚟ"},{name:"InCyrillic_Extended_C",bmp:"ᲀ-᲏"},{name:"InCyrillic_Supplement",bmp:"Ԁ-ԯ"},{name:"InDeseret",astral:"\ud801[\udc00-\udc4f]"},{name:"InDevanagari",bmp:"ऀ-ॿ"},{name:"InDevanagari_Extended",bmp:"꣠-ꣿ"},{name:"InDingbats",bmp:"✀-➿"},{name:"InDogra",astral:"\ud806[\udc00-\udc4f]"},{name:"InDomino_Tiles",astral:"\ud83c[\udc30-\udc9f]"},{name:"InDuployan",astral:"\ud82f[\udc00-\udc9f]"},{name:"InEarly_Dynastic_Cuneiform",astral:"\ud809[\udc80-\udd4f]"},{name:"InEgyptian_Hieroglyphs",astral:"\ud80c[\udc00-\udfff]|\ud80d[\udc00-\udc2f]"},{name:"InElbasan",astral:"\ud801[\udd00-\udd2f]"},{name:"InEmoticons",astral:"\ud83d[\ude00-\ude4f]"},{name:"InEnclosed_Alphanumeric_Supplement",astral:"\ud83c[\udd00-\uddff]"},{name:"InEnclosed_Alphanumerics",bmp:"①-⓿"},{name:"InEnclosed_CJK_Letters_And_Months",bmp:"㈀-㋿"},{name:"InEnclosed_Ideographic_Supplement",astral:"\ud83c[\ude00-\udeff]"},{name:"InEthiopic",bmp:"ሀ-፿"},{name:"InEthiopic_Extended",bmp:"ⶀ-⷟"},{name:"InEthiopic_Extended_A",bmp:"꬀-꬯"},{name:"InEthiopic_Supplement",bmp:"ᎀ-᎟"},{name:"InGeneral_Punctuation",bmp:" -⁯"},{name:"InGeometric_Shapes",bmp:"■-◿"},{name:"InGeometric_Shapes_Extended",astral:"\ud83d[\udf80-\udfff]"},{name:"InGeorgian",bmp:"Ⴀ-ჿ"},{name:"InGeorgian_Extended",bmp:"Ა-Ჿ"},{name:"InGeorgian_Supplement",bmp:"ⴀ-⴯"},{name:"InGlagolitic",bmp:"Ⰰ-ⱟ"},{name:"InGlagolitic_Supplement",astral:"\ud838[\udc00-\udc2f]"},{name:"InGothic",astral:"\ud800[\udf30-\udf4f]"},{name:"InGrantha",astral:"\ud804[\udf00-\udf7f]"},{name:"InGreek_And_Coptic",bmp:"Ͱ-Ͽ"},{name:"InGreek_Extended",bmp:"ἀ-῿"},{name:"InGujarati",bmp:"઀-૿"},{name:"InGunjala_Gondi",astral:"\ud807[\udd60-\uddaf]"},{name:"InGurmukhi",bmp:"਀-੿"},{name:"InHalfwidth_And_Fullwidth_Forms",bmp:"＀-￯"},{name:"InHangul_Compatibility_Jamo",bmp:"㄰-㆏"},{name:"InHangul_Jamo",bmp:"ᄀ-ᇿ"},{name:"InHangul_Jamo_Extended_A",bmp:"ꥠ-꥿"},{name:"InHangul_Jamo_Extended_B",bmp:"ힰ-퟿"},{name:"InHangul_Syllables",bmp:"가-힯"},{name:"InHanifi_Rohingya",astral:"\ud803[\udd00-\udd3f]"},{name:"InHanunoo",bmp:"ᜠ-᜿"},{name:"InHatran",astral:"\ud802[\udce0-\udcff]"},{name:"InHebrew",bmp:"֐-׿"},{name:"InHigh_Private_Use_Surrogates",bmp:"\udb80-\udbff"},{name:"InHigh_Surrogates",bmp:"\ud800-\udb7f"},{name:"InHiragana",bmp:"぀-ゟ"},{name:"InIPA_Extensions",bmp:"ɐ-ʯ"},{name:"InIdeographic_Description_Characters",bmp:"⿰-⿿"},{name:"InIdeographic_Symbols_And_Punctuation",astral:"\ud81b[\udfe0-\udfff]"},{name:"InImperial_Aramaic",astral:"\ud802[\udc40-\udc5f]"},{name:"InIndic_Siyaq_Numbers",astral:"\ud83b[\udc70-\udcbf]"},{name:"InInscriptional_Pahlavi",astral:"\ud802[\udf60-\udf7f]"},{name:"InInscriptional_Parthian",astral:"\ud802[\udf40-\udf5f]"},{name:"InJavanese",bmp:"ꦀ-꧟"},{name:"InKaithi",astral:"\ud804[\udc80-\udccf]"},{name:"InKana_Extended_A",astral:"\ud82c[\udd00-\udd2f]"},{name:"InKana_Supplement",astral:"\ud82c[\udc00-\udcff]"},{name:"InKanbun",bmp:"㆐-㆟"},{name:"InKangxi_Radicals",bmp:"⼀-⿟"},{name:"InKannada",bmp:"ಀ-೿"},{name:"InKatakana",bmp:"゠-ヿ"},{name:"InKatakana_Phonetic_Extensions",bmp:"ㇰ-ㇿ"},{name:"InKayah_Li",bmp:"꤀-꤯"},{name:"InKharoshthi",astral:"\ud802[\ude00-\ude5f]"},{name:"InKhmer",bmp:"ក-៿"},{name:"InKhmer_Symbols",bmp:"᧠-᧿"},{name:"InKhojki",astral:"\ud804[\ude00-\ude4f]"},{name:"InKhudawadi",astral:"\ud804[\udeb0-\udeff]"},{name:"InLao",bmp:"຀-໿"},{name:"InLatin_1_Supplement",bmp:"-ÿ"},{name:"InLatin_Extended_A",bmp:"Ā-ſ"},{name:"InLatin_Extended_Additional",bmp:"Ḁ-ỿ"},{name:"InLatin_Extended_B",bmp:"ƀ-ɏ"},{name:"InLatin_Extended_C",bmp:"Ⱡ-Ɀ"},{name:"InLatin_Extended_D",bmp:"꜠-ꟿ"},{name:"InLatin_Extended_E",bmp:"ꬰ-꭯"},{name:"InLepcha",bmp:"ᰀ-ᱏ"},{name:"InLetterlike_Symbols",bmp:"℀-⅏"},{name:"InLimbu",bmp:"ᤀ-᥏"},{name:"InLinear_A",astral:"\ud801[\ude00-\udf7f]"},{name:"InLinear_B_Ideograms",astral:"\ud800[\udc80-\udcff]"},{name:"InLinear_B_Syllabary",astral:"\ud800[\udc00-\udc7f]"},{name:"InLisu",bmp:"ꓐ-꓿"},{name:"InLow_Surrogates",bmp:"\udc00-\udfff"},{name:"InLycian",astral:"\ud800[\ude80-\ude9f]"},{name:"InLydian",astral:"\ud802[\udd20-\udd3f]"},{name:"InMahajani",astral:"\ud804[\udd50-\udd7f]"},{name:"InMahjong_Tiles",astral:"\ud83c[\udc00-\udc2f]"},{name:"InMakasar",astral:"\ud807[\udee0-\udeff]"},{name:"InMalayalam",bmp:"ഀ-ൿ"},{name:"InMandaic",bmp:"ࡀ-࡟"},{name:"InManichaean",astral:"\ud802[\udec0-\udeff]"},{name:"InMarchen",astral:"\ud807[\udc70-\udcbf]"},{name:"InMasaram_Gondi",astral:"\ud807[\udd00-\udd5f]"},{name:"InMathematical_Alphanumeric_Symbols",astral:"\ud835[\udc00-\udfff]"},{name:"InMathematical_Operators",bmp:"∀-⋿"},{name:"InMayan_Numerals",astral:"\ud834[\udee0-\udeff]"},{name:"InMedefaidrin",astral:"\ud81b[\ude40-\ude9f]"},{name:"InMeetei_Mayek",bmp:"ꯀ-꯿"},{name:"InMeetei_Mayek_Extensions",bmp:"ꫠ-꫿"},{name:"InMende_Kikakui",astral:"\ud83a[\udc00-\udcdf]"},{name:"InMeroitic_Cursive",astral:"\ud802[\udda0-\uddff]"},{name:"InMeroitic_Hieroglyphs",astral:"\ud802[\udd80-\udd9f]"},{name:"InMiao",astral:"\ud81b[\udf00-\udf9f]"},{name:"InMiscellaneous_Mathematical_Symbols_A",bmp:"⟀-⟯"},{name:"InMiscellaneous_Mathematical_Symbols_B",bmp:"⦀-⧿"},{name:"InMiscellaneous_Symbols",bmp:"☀-⛿"},{name:"InMiscellaneous_Symbols_And_Arrows",bmp:"⬀-⯿"},{name:"InMiscellaneous_Symbols_And_Pictographs",astral:"\ud83c[\udf00-\udfff]|\ud83d[\udc00-\uddff]"},{name:"InMiscellaneous_Technical",bmp:"⌀-⏿"},{name:"InModi",astral:"\ud805[\ude00-\ude5f]"},{name:"InModifier_Tone_Letters",bmp:"꜀-ꜟ"},{name:"InMongolian",bmp:"᠀-᢯"},{name:"InMongolian_Supplement",astral:"\ud805[\ude60-\ude7f]"},{name:"InMro",astral:"\ud81a[\ude40-\ude6f]"},{name:"InMultani",astral:"\ud804[\ude80-\udeaf]"},{name:"InMusical_Symbols",astral:"\ud834[\udd00-\uddff]"},{name:"InMyanmar",bmp:"က-႟"},{name:"InMyanmar_Extended_A",bmp:"ꩠ-ꩿ"},{name:"InMyanmar_Extended_B",bmp:"ꧠ-꧿"},{name:"InNKo",bmp:"߀-߿"},{name:"InNabataean",astral:"\ud802[\udc80-\udcaf]"},{name:"InNew_Tai_Lue",bmp:"ᦀ-᧟"},{name:"InNewa",astral:"\ud805[\udc00-\udc7f]"},{name:"InNumber_Forms",bmp:"⅐-↏"},{name:"InNushu",astral:"\ud82c[\udd70-\udeff]"},{name:"InOgham",bmp:" -᚟"},{name:"InOl_Chiki",bmp:"᱐-᱿"},{name:"InOld_Hungarian",astral:"\ud803[\udc80-\udcff]"},{name:"InOld_Italic",astral:"\ud800[\udf00-\udf2f]"},{name:"InOld_North_Arabian",astral:"\ud802[\ude80-\ude9f]"},{name:"InOld_Permic",astral:"\ud800[\udf50-\udf7f]"},{name:"InOld_Persian",astral:"\ud800[\udfa0-\udfdf]"},{name:"InOld_Sogdian",astral:"\ud803[\udf00-\udf2f]"},{name:"InOld_South_Arabian",astral:"\ud802[\ude60-\ude7f]"},{name:"InOld_Turkic",astral:"\ud803[\udc00-\udc4f]"},{name:"InOptical_Character_Recognition",bmp:"⑀-⑟"},{name:"InOriya",bmp:"଀-୿"},{name:"InOrnamental_Dingbats",astral:"\ud83d[\ude50-\ude7f]"},{name:"InOsage",astral:"\ud801[\udcb0-\udcff]"},{name:"InOsmanya",astral:"\ud801[\udc80-\udcaf]"},{name:"InPahawh_Hmong",astral:"\ud81a[\udf00-\udf8f]"},{name:"InPalmyrene",astral:"\ud802[\udc60-\udc7f]"},{name:"InPau_Cin_Hau",astral:"\ud806[\udec0-\udeff]"},{name:"InPhags_Pa",bmp:"ꡀ-꡿"},{name:"InPhaistos_Disc",astral:"\ud800[\uddd0-\uddff]"},{name:"InPhoenician",astral:"\ud802[\udd00-\udd1f]"},{name:"InPhonetic_Extensions",bmp:"ᴀ-ᵿ"},{name:"InPhonetic_Extensions_Supplement",bmp:"ᶀ-ᶿ"},{name:"InPlaying_Cards",astral:"\ud83c[\udca0-\udcff]"},{name:"InPrivate_Use_Area",bmp:"-"},{name:"InPsalter_Pahlavi",astral:"\ud802[\udf80-\udfaf]"},{name:"InRejang",bmp:"ꤰ-꥟"},{name:"InRumi_Numeral_Symbols",astral:"\ud803[\ude60-\ude7f]"},{name:"InRunic",bmp:"ᚠ-᛿"},{name:"InSamaritan",bmp:"ࠀ-࠿"},{name:"InSaurashtra",bmp:"ꢀ-꣟"},{name:"InSharada",astral:"\ud804[\udd80-\udddf]"},{name:"InShavian",astral:"\ud801[\udc50-\udc7f]"},{name:"InShorthand_Format_Controls",astral:"\ud82f[\udca0-\udcaf]"},{name:"InSiddham",astral:"\ud805[\udd80-\uddff]"},{name:"InSinhala",bmp:"඀-෿"},{name:"InSinhala_Archaic_Numbers",astral:"\ud804[\udde0-\uddff]"},{name:"InSmall_Form_Variants",bmp:"﹐-﹯"},{name:"InSogdian",astral:"\ud803[\udf30-\udf6f]"},{name:"InSora_Sompeng",astral:"\ud804[\udcd0-\udcff]"},{name:"InSoyombo",astral:"\ud806[\ude50-\udeaf]"},{name:"InSpacing_Modifier_Letters",bmp:"ʰ-˿"},{name:"InSpecials",bmp:"￰-￿"},{name:"InSundanese",bmp:"ᮀ-ᮿ"},{name:"InSundanese_Supplement",bmp:"᳀-᳏"},{name:"InSuperscripts_And_Subscripts",bmp:"⁰-₟"},{name:"InSupplemental_Arrows_A",bmp:"⟰-⟿"},{name:"InSupplemental_Arrows_B",bmp:"⤀-⥿"},{name:"InSupplemental_Arrows_C",astral:"\ud83e[\udc00-\udcff]"},{name:"InSupplemental_Mathematical_Operators",bmp:"⨀-⫿"},{name:"InSupplemental_Punctuation",bmp:"⸀-⹿"},{name:"InSupplemental_Symbols_And_Pictographs",astral:"\ud83e[\udd00-\uddff]"},{name:"InSupplementary_Private_Use_Area_A",astral:"[\udb80-\udbbf][\udc00-\udfff]"},{name:"InSupplementary_Private_Use_Area_B",astral:"[\udbc0-\udbff][\udc00-\udfff]"},{name:"InSutton_SignWriting",astral:"\ud836[\udc00-\udeaf]"},{name:"InSyloti_Nagri",bmp:"ꠀ-꠯"},{name:"InSyriac",bmp:"܀-ݏ"},{name:"InSyriac_Supplement",bmp:"ࡠ-࡯"},{name:"InTagalog",bmp:"ᜀ-ᜟ"},{name:"InTagbanwa",bmp:"ᝠ-᝿"},{name:"InTags",astral:"\udb40[\udc00-\udc7f]"},{name:"InTai_Le",bmp:"ᥐ-᥿"},{name:"InTai_Tham",bmp:"ᨠ-᪯"},{name:"InTai_Viet",bmp:"ꪀ-꫟"},{name:"InTai_Xuan_Jing_Symbols",astral:"\ud834[\udf00-\udf5f]"},{name:"InTakri",astral:"\ud805[\ude80-\udecf]"},{name:"InTamil",bmp:"஀-௿"},{name:"InTangut",astral:"[\ud81c-\ud821][\udc00-\udfff]"},{name:"InTangut_Components",astral:"\ud822[\udc00-\udeff]"},{name:"InTelugu",bmp:"ఀ-౿"},{name:"InThaana",bmp:"ހ-޿"},{name:"InThai",bmp:"฀-๿"},{name:"InTibetan",bmp:"ༀ-࿿"},{name:"InTifinagh",bmp:"ⴰ-⵿"},{name:"InTirhuta",astral:"\ud805[\udc80-\udcdf]"},{name:"InTransport_And_Map_Symbols",astral:"\ud83d[\ude80-\udeff]"},{name:"InUgaritic",astral:"\ud800[\udf80-\udf9f]"},{name:"InUnified_Canadian_Aboriginal_Syllabics",bmp:"᐀-ᙿ"},{name:"InUnified_Canadian_Aboriginal_Syllabics_Extended",bmp:"ᢰ-᣿"},{name:"InVai",bmp:"ꔀ-꘿"},{name:"InVariation_Selectors",bmp:"︀-️"},{name:"InVariation_Selectors_Supplement",astral:"\udb40[\udd00-\uddef]"},{name:"InVedic_Extensions",bmp:"᳐-᳿"},{name:"InVertical_Forms",bmp:"︐-︟"},{name:"InWarang_Citi",astral:"\ud806[\udca0-\udcff]"},{name:"InYi_Radicals",bmp:"꒐-꓏"},{name:"InYi_Syllables",bmp:"ꀀ-꒏"},{name:"InYijing_Hexagram_Symbols",bmp:"䷀-䷿"},{name:"InZanabazar_Square",astral:"\ud806[\ude00-\ude4f]"}],unicodeBlocks=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var u,t=(u=blocks)&&u.__esModule?u:{default:u};r.default=function(e){if(!e.addUnicodeData)throw new ReferenceError("Unicode Base must be loaded before Unicode Blocks");e.addUnicodeData(t.default)},e.exports=r.default});unwrapExports(unicodeBlocks);var categories=[{name:"C",alias:"Other",isBmpLast:!0,bmp:"\0--­͸͹΀-΃΋΍΢԰՗՘֋֌֐׈-׏׫-׮׵-؅؜؝۝܎܏݋݌޲-޿߻߼࠮࠯࠿࡜࡝࡟࡫-࢟ࢵࢾ-࣒࣢঄঍঎঑঒঩঱঳-঵঺঻৅৆৉৊৏-৖৘-৛৞৤৥৿਀਄਋-਎਑਒਩਱਴਷਺਻਽੃-੆੉੊੎-੐੒-੘੝੟-੥੷-઀઄઎઒઩઱઴઺઻૆૊૎૏૑-૟૤૥૲-૸଀଄଍଎଑଒଩଱଴଺଻୅୆୉୊୎-୕୘-୛୞୤୥୸-஁஄஋-஍஑஖-஘஛஝஠-஢஥-஧஫-஭஺-஽௃-௅௉௎௏௑-௖௘-௥௻-௿఍఑఩఺-఼౅౉౎-౔౗౛-౟౤౥౰-౷಍಑಩಴಺಻೅೉೎-೔೗-ೝ೟೤೥೰ೳ-೿ഄ഍഑൅൉൐-൓൤൥඀ඁ඄඗-඙඲඼඾඿෇-෉෋-෎෕෗෠-෥෰෱෵-฀฻-฾๜-຀຃຅ຆຉ຋ຌຎ-ຓຘຠ຤຦ຨຩຬ຺຾຿໅໇໎໏໚໛໠-໿཈཭-཰྘྽࿍࿛-࿿჆჈-჌჎჏቉቎቏቗቙቞቟኉኎኏኱኶኷኿዁዆዇዗጑጖጗፛፜፽-፿᎚-᎟᏶᏷᏾᏿᚝-᚟᛹-᛿ᜍ᜕-ᜟ᜷-᜿᝔-᝟᝭᝱᝴-᝿៞៟៪-៯៺-៿᠎᠏᠚-᠟᡹-᡿᢫-᢯᣶-᣿᤟᤬-᤯᤼-᤿᥁-᥃᥮᥯᥵-᥿᦬-᦯᧊-᧏᧛-᧝᨜᨝᩟᩽᩾᪊-᪏᪚-᪟᪮᪯ᪿ-᫿ᭌ-᭏᭽-᭿᯴-᯻᰸-᰺᱊-᱌Ᲊ-᲏᲻᲼᳈-᳏ᳺ-᳿᷺἖἗἞἟὆὇὎὏὘὚὜὞὾὿᾵῅῔῕῜῰῱῵῿​-‏‪-‮⁠-⁯⁲⁳₏₝-₟⃀-⃏⃱-⃿↌-↏␧-␿⑋-⑟⭴⭵⮖⮗⯉⯿Ⱟⱟ⳴-⳸⴦⴨-⴬⴮⴯⵨-⵮⵱-⵾⶗-⶟⶧⶯⶷⶿⷇⷏⷗⷟⹏-⹿⺚⻴-⻿⿖-⿯⿼-⿿぀゗゘㄀-㄄㄰㆏ㆻ-ㆿ㇤-㇯㈟㋿䶶-䶿鿰-鿿꒍-꒏꓇-꓏꘬-꘿꛸-꛿Ꞻ-ꟶ꠬-꠯꠺-꠿꡸-꡿꣆-꣍꣚-꣟꥔-꥞꥽-꥿꧎꧚-꧝꧿꨷-꨿꩎꩏꩚꩛꫃-꫚꫷-꬀꬇꬈꬏꬐꬗-꬟꬧꬯ꭦ-꭯꯮꯯꯺-꯿힤-힯퟇-퟊퟼-﩮﩯﫚-﫿﬇-﬒﬘-﬜﬷﬽﬿﭂﭅﯂-﯒﵀-﵏﶐﶑﷈-﷯﷾﷿︚-︟﹓﹧﹬-﹯﹵﻽-＀﾿-￁￈￉￐￑￘￙￝-￟￧￯-￻￾￿",astral:"\ud800[\udc0c\udc27\udc3b\udc3e\udc4e\udc4f\udc5e-\udc7f\udcfb-\udcff\udd03-\udd06\udd34-\udd36\udd8f\udd9c-\udd9f\udda1-\uddcf\uddfe-\ude7f\ude9d-\ude9f\uded1-\udedf\udefc-\udeff\udf24-\udf2c\udf4b-\udf4f\udf7b-\udf7f\udf9e\udfc4-\udfc7\udfd6-\udfff]|\ud801[\udc9e\udc9f\udcaa-\udcaf\udcd4-\udcd7\udcfc-\udcff\udd28-\udd2f\udd64-\udd6e\udd70-\uddff\udf37-\udf3f\udf56-\udf5f\udf68-\udfff]|\ud802[\udc06\udc07\udc09\udc36\udc39-\udc3b\udc3d\udc3e\udc56\udc9f-\udca6\udcb0-\udcdf\udcf3\udcf6-\udcfa\udd1c-\udd1e\udd3a-\udd3e\udd40-\udd7f\uddb8-\uddbb\uddd0\uddd1\ude04\ude07-\ude0b\ude14\ude18\ude36\ude37\ude3b-\ude3e\ude49-\ude4f\ude59-\ude5f\udea0-\udebf\udee7-\udeea\udef7-\udeff\udf36-\udf38\udf56\udf57\udf73-\udf77\udf92-\udf98\udf9d-\udfa8\udfb0-\udfff]|\ud803[\udc49-\udc7f\udcb3-\udcbf\udcf3-\udcf9\udd28-\udd2f\udd3a-\ude5f\ude7f-\udeff\udf28-\udf2f\udf5a-\udfff]|\ud804[\udc4e-\udc51\udc70-\udc7e\udcbd\udcc2-\udccf\udce9-\udcef\udcfa-\udcff\udd35\udd47-\udd4f\udd77-\udd7f\uddce\uddcf\udde0\uddf5-\uddff\ude12\ude3f-\ude7f\ude87\ude89\ude8e\ude9e\udeaa-\udeaf\udeeb-\udeef\udefa-\udeff\udf04\udf0d\udf0e\udf11\udf12\udf29\udf31\udf34\udf3a\udf45\udf46\udf49\udf4a\udf4e\udf4f\udf51-\udf56\udf58-\udf5c\udf64\udf65\udf6d-\udf6f\udf75-\udfff]|\ud805[\udc5a\udc5c\udc5f-\udc7f\udcc8-\udccf\udcda-\udd7f\uddb6\uddb7\uddde-\uddff\ude45-\ude4f\ude5a-\ude5f\ude6d-\ude7f\udeb8-\udebf\udeca-\udeff\udf1b\udf1c\udf2c-\udf2f\udf40-\udfff]|\ud806[\udc3c-\udc9f\udcf3-\udcfe\udd00-\uddff\ude48-\ude4f\ude84\ude85\udea3-\udebf\udef9-\udfff]|\ud807[\udc09\udc37\udc46-\udc4f\udc6d-\udc6f\udc90\udc91\udca8\udcb7-\udcff\udd07\udd0a\udd37-\udd39\udd3b\udd3e\udd48-\udd4f\udd5a-\udd5f\udd66\udd69\udd8f\udd92\udd99-\udd9f\uddaa-\udedf\udef9-\udfff]|\ud808[\udf9a-\udfff]|\ud809[\udc6f\udc75-\udc7f\udd44-\udfff]|[\ud80a\ud80b\ud80e-\ud810\ud812-\ud819\ud823-\ud82b\ud82d\ud82e\ud830-\ud833\ud837\ud839\ud83f\ud87b-\ud87d\ud87f-\udb3f\udb41-\udbff][\udc00-\udfff]|\ud80d[\udc2f-\udfff]|\ud811[\ude47-\udfff]|\ud81a[\ude39-\ude3f\ude5f\ude6a-\ude6d\ude70-\udecf\udeee\udeef\udef6-\udeff\udf46-\udf4f\udf5a\udf62\udf78-\udf7c\udf90-\udfff]|\ud81b[\udc00-\ude3f\ude9b-\udeff\udf45-\udf4f\udf7f-\udf8e\udfa0-\udfdf\udfe2-\udfff]|\ud821[\udff2-\udfff]|\ud822[\udef3-\udfff]|\ud82c[\udd1f-\udd6f\udefc-\udfff]|\ud82f[\udc6b-\udc6f\udc7d-\udc7f\udc89-\udc8f\udc9a\udc9b\udca0-\udfff]|\ud834[\udcf6-\udcff\udd27\udd28\udd73-\udd7a\udde9-\uddff\ude46-\udedf\udef4-\udeff\udf57-\udf5f\udf79-\udfff]|\ud835[\udc55\udc9d\udca0\udca1\udca3\udca4\udca7\udca8\udcad\udcba\udcbc\udcc4\udd06\udd0b\udd0c\udd15\udd1d\udd3a\udd3f\udd45\udd47-\udd49\udd51\udea6\udea7\udfcc\udfcd]|\ud836[\ude8c-\ude9a\udea0\udeb0-\udfff]|\ud838[\udc07\udc19\udc1a\udc22\udc25\udc2b-\udfff]|\ud83a[\udcc5\udcc6\udcd7-\udcff\udd4b-\udd4f\udd5a-\udd5d\udd60-\udfff]|\ud83b[\udc00-\udc70\udcb5-\uddff\ude04\ude20\ude23\ude25\ude26\ude28\ude33\ude38\ude3a\ude3c-\ude41\ude43-\ude46\ude48\ude4a\ude4c\ude50\ude53\ude55\ude56\ude58\ude5a\ude5c\ude5e\ude60\ude63\ude65\ude66\ude6b\ude73\ude78\ude7d\ude7f\ude8a\ude9c-\udea0\udea4\udeaa\udebc-\udeef\udef2-\udfff]|\ud83c[\udc2c-\udc2f\udc94-\udc9f\udcaf\udcb0\udcc0\udcd0\udcf6-\udcff\udd0d-\udd0f\udd6c-\udd6f\uddad-\udde5\ude03-\ude0f\ude3c-\ude3f\ude49-\ude4f\ude52-\ude5f\ude66-\udeff]|\ud83d[\uded5-\udedf\udeed-\udeef\udefa-\udeff\udf74-\udf7f\udfd9-\udfff]|\ud83e[\udc0c-\udc0f\udc48-\udc4f\udc5a-\udc5f\udc88-\udc8f\udcae-\udcff\udd0c-\udd0f\udd3f\udd71\udd72\udd77-\udd79\udd7b\udda3-\uddaf\uddba-\uddbf\uddc3-\uddcf\ude00-\ude5f\ude6e-\udfff]|\ud869[\uded7-\udeff]|\ud86d[\udf35-\udf3f]|\ud86e[\udc1e\udc1f]|\ud873[\udea2-\udeaf]|\ud87a[\udfe1-\udfff]|\ud87e[\ude1e-\udfff]|\udb40[\udc00-\udcff\uddf0-\udfff]"},{name:"Cc",alias:"Control",bmp:"\0--"},{name:"Cf",alias:"Format",bmp:"­؀-؅؜۝܏࣢᠎​-‏‪-‮⁠-⁤⁦-⁯\ufeff￹-￻",astral:"\ud804[\udcbd\udccd]|\ud82f[\udca0-\udca3]|\ud834[\udd73-\udd7a]|\udb40[\udc01\udc20-\udc7f]"},{name:"Cn",alias:"Unassigned",bmp:"͸͹΀-΃΋΍΢԰՗՘֋֌֐׈-׏׫-׮׵-׿؝܎݋݌޲-޿߻߼࠮࠯࠿࡜࡝࡟࡫-࢟ࢵࢾ-࣒঄঍঎঑঒঩঱঳-঵঺঻৅৆৉৊৏-৖৘-৛৞৤৥৿਀਄਋-਎਑਒਩਱਴਷਺਻਽੃-੆੉੊੎-੐੒-੘੝੟-੥੷-઀઄઎઒઩઱઴઺઻૆૊૎૏૑-૟૤૥૲-૸଀଄଍଎଑଒଩଱଴଺଻୅୆୉୊୎-୕୘-୛୞୤୥୸-஁஄஋-஍஑஖-஘஛஝஠-஢஥-஧஫-஭஺-஽௃-௅௉௎௏௑-௖௘-௥௻-௿఍఑఩఺-఼౅౉౎-౔౗౛-౟౤౥౰-౷಍಑಩಴಺಻೅೉೎-೔೗-ೝ೟೤೥೰ೳ-೿ഄ഍഑൅൉൐-൓൤൥඀ඁ඄඗-඙඲඼඾඿෇-෉෋-෎෕෗෠-෥෰෱෵-฀฻-฾๜-຀຃຅ຆຉ຋ຌຎ-ຓຘຠ຤຦ຨຩຬ຺຾຿໅໇໎໏໚໛໠-໿཈཭-཰྘྽࿍࿛-࿿჆჈-჌჎჏቉቎቏቗቙቞቟኉኎኏኱኶኷኿዁዆዇዗጑጖጗፛፜፽-፿᎚-᎟᏶᏷᏾᏿᚝-᚟᛹-᛿ᜍ᜕-ᜟ᜷-᜿᝔-᝟᝭᝱᝴-᝿៞៟៪-៯៺-៿᠏᠚-᠟᡹-᡿᢫-᢯᣶-᣿᤟᤬-᤯᤼-᤿᥁-᥃᥮᥯᥵-᥿᦬-᦯᧊-᧏᧛-᧝᨜᨝᩟᩽᩾᪊-᪏᪚-᪟᪮᪯ᪿ-᫿ᭌ-᭏᭽-᭿᯴-᯻᰸-᰺᱊-᱌Ᲊ-᲏᲻᲼᳈-᳏ᳺ-᳿᷺἖἗἞἟὆὇὎὏὘὚὜὞὾὿᾵῅῔῕῜῰῱῵῿⁥⁲⁳₏₝-₟⃀-⃏⃱-⃿↌-↏␧-␿⑋-⑟⭴⭵⮖⮗⯉⯿Ⱟⱟ⳴-⳸⴦⴨-⴬⴮⴯⵨-⵮⵱-⵾⶗-⶟⶧⶯⶷⶿⷇⷏⷗⷟⹏-⹿⺚⻴-⻿⿖-⿯⿼-⿿぀゗゘㄀-㄄㄰㆏ㆻ-ㆿ㇤-㇯㈟㋿䶶-䶿鿰-鿿꒍-꒏꓇-꓏꘬-꘿꛸-꛿Ꞻ-ꟶ꠬-꠯꠺-꠿꡸-꡿꣆-꣍꣚-꣟꥔-꥞꥽-꥿꧎꧚-꧝꧿꨷-꨿꩎꩏꩚꩛꫃-꫚꫷-꬀꬇꬈꬏꬐꬗-꬟꬧꬯ꭦ-꭯꯮꯯꯺-꯿힤-힯퟇-퟊퟼-퟿﩮﩯﫚-﫿﬇-﬒﬘-﬜﬷﬽﬿﭂﭅﯂-﯒﵀-﵏﶐﶑﷈-﷯﷾﷿︚-︟﹓﹧﹬-﹯﹵﻽﻾＀﾿-￁￈￉￐￑￘￙￝-￟￧￯-￸￾￿",astral:"\ud800[\udc0c\udc27\udc3b\udc3e\udc4e\udc4f\udc5e-\udc7f\udcfb-\udcff\udd03-\udd06\udd34-\udd36\udd8f\udd9c-\udd9f\udda1-\uddcf\uddfe-\ude7f\ude9d-\ude9f\uded1-\udedf\udefc-\udeff\udf24-\udf2c\udf4b-\udf4f\udf7b-\udf7f\udf9e\udfc4-\udfc7\udfd6-\udfff]|\ud801[\udc9e\udc9f\udcaa-\udcaf\udcd4-\udcd7\udcfc-\udcff\udd28-\udd2f\udd64-\udd6e\udd70-\uddff\udf37-\udf3f\udf56-\udf5f\udf68-\udfff]|\ud802[\udc06\udc07\udc09\udc36\udc39-\udc3b\udc3d\udc3e\udc56\udc9f-\udca6\udcb0-\udcdf\udcf3\udcf6-\udcfa\udd1c-\udd1e\udd3a-\udd3e\udd40-\udd7f\uddb8-\uddbb\uddd0\uddd1\ude04\ude07-\ude0b\ude14\ude18\ude36\ude37\ude3b-\ude3e\ude49-\ude4f\ude59-\ude5f\udea0-\udebf\udee7-\udeea\udef7-\udeff\udf36-\udf38\udf56\udf57\udf73-\udf77\udf92-\udf98\udf9d-\udfa8\udfb0-\udfff]|\ud803[\udc49-\udc7f\udcb3-\udcbf\udcf3-\udcf9\udd28-\udd2f\udd3a-\ude5f\ude7f-\udeff\udf28-\udf2f\udf5a-\udfff]|\ud804[\udc4e-\udc51\udc70-\udc7e\udcc2-\udccc\udcce\udccf\udce9-\udcef\udcfa-\udcff\udd35\udd47-\udd4f\udd77-\udd7f\uddce\uddcf\udde0\uddf5-\uddff\ude12\ude3f-\ude7f\ude87\ude89\ude8e\ude9e\udeaa-\udeaf\udeeb-\udeef\udefa-\udeff\udf04\udf0d\udf0e\udf11\udf12\udf29\udf31\udf34\udf3a\udf45\udf46\udf49\udf4a\udf4e\udf4f\udf51-\udf56\udf58-\udf5c\udf64\udf65\udf6d-\udf6f\udf75-\udfff]|\ud805[\udc5a\udc5c\udc5f-\udc7f\udcc8-\udccf\udcda-\udd7f\uddb6\uddb7\uddde-\uddff\ude45-\ude4f\ude5a-\ude5f\ude6d-\ude7f\udeb8-\udebf\udeca-\udeff\udf1b\udf1c\udf2c-\udf2f\udf40-\udfff]|\ud806[\udc3c-\udc9f\udcf3-\udcfe\udd00-\uddff\ude48-\ude4f\ude84\ude85\udea3-\udebf\udef9-\udfff]|\ud807[\udc09\udc37\udc46-\udc4f\udc6d-\udc6f\udc90\udc91\udca8\udcb7-\udcff\udd07\udd0a\udd37-\udd39\udd3b\udd3e\udd48-\udd4f\udd5a-\udd5f\udd66\udd69\udd8f\udd92\udd99-\udd9f\uddaa-\udedf\udef9-\udfff]|\ud808[\udf9a-\udfff]|\ud809[\udc6f\udc75-\udc7f\udd44-\udfff]|[\ud80a\ud80b\ud80e-\ud810\ud812-\ud819\ud823-\ud82b\ud82d\ud82e\ud830-\ud833\ud837\ud839\ud83f\ud87b-\ud87d\ud87f-\udb3f\udb41-\udb7f][\udc00-\udfff]|\ud80d[\udc2f-\udfff]|\ud811[\ude47-\udfff]|\ud81a[\ude39-\ude3f\ude5f\ude6a-\ude6d\ude70-\udecf\udeee\udeef\udef6-\udeff\udf46-\udf4f\udf5a\udf62\udf78-\udf7c\udf90-\udfff]|\ud81b[\udc00-\ude3f\ude9b-\udeff\udf45-\udf4f\udf7f-\udf8e\udfa0-\udfdf\udfe2-\udfff]|\ud821[\udff2-\udfff]|\ud822[\udef3-\udfff]|\ud82c[\udd1f-\udd6f\udefc-\udfff]|\ud82f[\udc6b-\udc6f\udc7d-\udc7f\udc89-\udc8f\udc9a\udc9b\udca4-\udfff]|\ud834[\udcf6-\udcff\udd27\udd28\udde9-\uddff\ude46-\udedf\udef4-\udeff\udf57-\udf5f\udf79-\udfff]|\ud835[\udc55\udc9d\udca0\udca1\udca3\udca4\udca7\udca8\udcad\udcba\udcbc\udcc4\udd06\udd0b\udd0c\udd15\udd1d\udd3a\udd3f\udd45\udd47-\udd49\udd51\udea6\udea7\udfcc\udfcd]|\ud836[\ude8c-\ude9a\udea0\udeb0-\udfff]|\ud838[\udc07\udc19\udc1a\udc22\udc25\udc2b-\udfff]|\ud83a[\udcc5\udcc6\udcd7-\udcff\udd4b-\udd4f\udd5a-\udd5d\udd60-\udfff]|\ud83b[\udc00-\udc70\udcb5-\uddff\ude04\ude20\ude23\ude25\ude26\ude28\ude33\ude38\ude3a\ude3c-\ude41\ude43-\ude46\ude48\ude4a\ude4c\ude50\ude53\ude55\ude56\ude58\ude5a\ude5c\ude5e\ude60\ude63\ude65\ude66\ude6b\ude73\ude78\ude7d\ude7f\ude8a\ude9c-\udea0\udea4\udeaa\udebc-\udeef\udef2-\udfff]|\ud83c[\udc2c-\udc2f\udc94-\udc9f\udcaf\udcb0\udcc0\udcd0\udcf6-\udcff\udd0d-\udd0f\udd6c-\udd6f\uddad-\udde5\ude03-\ude0f\ude3c-\ude3f\ude49-\ude4f\ude52-\ude5f\ude66-\udeff]|\ud83d[\uded5-\udedf\udeed-\udeef\udefa-\udeff\udf74-\udf7f\udfd9-\udfff]|\ud83e[\udc0c-\udc0f\udc48-\udc4f\udc5a-\udc5f\udc88-\udc8f\udcae-\udcff\udd0c-\udd0f\udd3f\udd71\udd72\udd77-\udd79\udd7b\udda3-\uddaf\uddba-\uddbf\uddc3-\uddcf\ude00-\ude5f\ude6e-\udfff]|\ud869[\uded7-\udeff]|\ud86d[\udf35-\udf3f]|\ud86e[\udc1e\udc1f]|\ud873[\udea2-\udeaf]|\ud87a[\udfe1-\udfff]|\ud87e[\ude1e-\udfff]|\udb40[\udc00\udc02-\udc1f\udc80-\udcff\uddf0-\udfff]|[\udbbf\udbff][\udffe\udfff]"},{name:"Co",alias:"Private_Use",bmp:"-",astral:"[\udb80-\udbbe\udbc0-\udbfe][\udc00-\udfff]|[\udbbf\udbff][\udc00-\udffd]"},{name:"Cs",alias:"Surrogate",bmp:"\ud800-\udfff"},{name:"L",alias:"Letter",bmp:"A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛱ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢄᢇ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎↃↄⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々〆〱-〵〻〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛥꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",astral:"\ud800[\udc00-\udc0b\udc0d-\udc26\udc28-\udc3a\udc3c\udc3d\udc3f-\udc4d\udc50-\udc5d\udc80-\udcfa\ude80-\ude9c\udea0-\uded0\udf00-\udf1f\udf2d-\udf40\udf42-\udf49\udf50-\udf75\udf80-\udf9d\udfa0-\udfc3\udfc8-\udfcf]|\ud801[\udc00-\udc9d\udcb0-\udcd3\udcd8-\udcfb\udd00-\udd27\udd30-\udd63\ude00-\udf36\udf40-\udf55\udf60-\udf67]|\ud802[\udc00-\udc05\udc08\udc0a-\udc35\udc37\udc38\udc3c\udc3f-\udc55\udc60-\udc76\udc80-\udc9e\udce0-\udcf2\udcf4\udcf5\udd00-\udd15\udd20-\udd39\udd80-\uddb7\uddbe\uddbf\ude00\ude10-\ude13\ude15-\ude17\ude19-\ude35\ude60-\ude7c\ude80-\ude9c\udec0-\udec7\udec9-\udee4\udf00-\udf35\udf40-\udf55\udf60-\udf72\udf80-\udf91]|\ud803[\udc00-\udc48\udc80-\udcb2\udcc0-\udcf2\udd00-\udd23\udf00-\udf1c\udf27\udf30-\udf45]|\ud804[\udc03-\udc37\udc83-\udcaf\udcd0-\udce8\udd03-\udd26\udd44\udd50-\udd72\udd76\udd83-\uddb2\uddc1-\uddc4\uddda\udddc\ude00-\ude11\ude13-\ude2b\ude80-\ude86\ude88\ude8a-\ude8d\ude8f-\ude9d\ude9f-\udea8\udeb0-\udede\udf05-\udf0c\udf0f\udf10\udf13-\udf28\udf2a-\udf30\udf32\udf33\udf35-\udf39\udf3d\udf50\udf5d-\udf61]|\ud805[\udc00-\udc34\udc47-\udc4a\udc80-\udcaf\udcc4\udcc5\udcc7\udd80-\uddae\uddd8-\udddb\ude00-\ude2f\ude44\ude80-\udeaa\udf00-\udf1a]|\ud806[\udc00-\udc2b\udca0-\udcdf\udcff\ude00\ude0b-\ude32\ude3a\ude50\ude5c-\ude83\ude86-\ude89\ude9d\udec0-\udef8]|\ud807[\udc00-\udc08\udc0a-\udc2e\udc40\udc72-\udc8f\udd00-\udd06\udd08\udd09\udd0b-\udd30\udd46\udd60-\udd65\udd67\udd68\udd6a-\udd89\udd98\udee0-\udef2]|\ud808[\udc00-\udf99]|\ud809[\udc80-\udd43]|[\ud80c\ud81c-\ud820\ud840-\ud868\ud86a-\ud86c\ud86f-\ud872\ud874-\ud879][\udc00-\udfff]|\ud80d[\udc00-\udc2e]|\ud811[\udc00-\ude46]|\ud81a[\udc00-\ude38\ude40-\ude5e\uded0-\udeed\udf00-\udf2f\udf40-\udf43\udf63-\udf77\udf7d-\udf8f]|\ud81b[\ude40-\ude7f\udf00-\udf44\udf50\udf93-\udf9f\udfe0\udfe1]|\ud821[\udc00-\udff1]|\ud822[\udc00-\udef2]|\ud82c[\udc00-\udd1e\udd70-\udefb]|\ud82f[\udc00-\udc6a\udc70-\udc7c\udc80-\udc88\udc90-\udc99]|\ud835[\udc00-\udc54\udc56-\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd1e-\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd52-\udea5\udea8-\udec0\udec2-\udeda\udedc-\udefa\udefc-\udf14\udf16-\udf34\udf36-\udf4e\udf50-\udf6e\udf70-\udf88\udf8a-\udfa8\udfaa-\udfc2\udfc4-\udfcb]|\ud83a[\udc00-\udcc4\udd00-\udd43]|\ud83b[\ude00-\ude03\ude05-\ude1f\ude21\ude22\ude24\ude27\ude29-\ude32\ude34-\ude37\ude39\ude3b\ude42\ude47\ude49\ude4b\ude4d-\ude4f\ude51\ude52\ude54\ude57\ude59\ude5b\ude5d\ude5f\ude61\ude62\ude64\ude67-\ude6a\ude6c-\ude72\ude74-\ude77\ude79-\ude7c\ude7e\ude80-\ude89\ude8b-\ude9b\udea1-\udea3\udea5-\udea9\udeab-\udebb]|\ud869[\udc00-\uded6\udf00-\udfff]|\ud86d[\udc00-\udf34\udf40-\udfff]|\ud86e[\udc00-\udc1d\udc20-\udfff]|\ud873[\udc00-\udea1\udeb0-\udfff]|\ud87a[\udc00-\udfe0]|\ud87e[\udc00-\ude1d]"},{name:"LC",alias:"Cased_Letter",bmp:"A-Za-zµÀ-ÖØ-öø-ƺƼ-ƿǄ-ʓʕ-ʯͰ-ͳͶͷͻ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՠ-ֈႠ-ჅჇჍა-ჺჽ-ჿᎠ-Ᏽᏸ-ᏽᲀ-ᲈᲐ-ᲺᲽ-Ჿᴀ-ᴫᵫ-ᵷᵹ-ᶚḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℴℹℼ-ℿⅅ-ⅉⅎↃↄⰀ-Ⱞⰰ-ⱞⱠ-ⱻⱾ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭꙀ-ꙭꚀ-ꚛꜢ-ꝯꝱ-ꞇꞋ-ꞎꞐ-ꞹꟺꬰ-ꭚꭠ-ꭥꭰ-ꮿﬀ-ﬆﬓ-ﬗＡ-Ｚａ-ｚ",astral:"\ud801[\udc00-\udc4f\udcb0-\udcd3\udcd8-\udcfb]|\ud803[\udc80-\udcb2\udcc0-\udcf2]|\ud806[\udca0-\udcdf]|\ud81b[\ude40-\ude7f]|\ud835[\udc00-\udc54\udc56-\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd1e-\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd52-\udea5\udea8-\udec0\udec2-\udeda\udedc-\udefa\udefc-\udf14\udf16-\udf34\udf36-\udf4e\udf50-\udf6e\udf70-\udf88\udf8a-\udfa8\udfaa-\udfc2\udfc4-\udfcb]|\ud83a[\udd00-\udd43]"},{name:"Ll",alias:"Lowercase_Letter",bmp:"a-zµß-öø-ÿāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįıĳĵķĸĺļľŀłńņňŉŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž-ƀƃƅƈƌƍƒƕƙ-ƛƞơƣƥƨƪƫƭưƴƶƹƺƽ-ƿǆǉǌǎǐǒǔǖǘǚǜǝǟǡǣǥǧǩǫǭǯǰǳǵǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟȡȣȥȧȩȫȭȯȱȳ-ȹȼȿɀɂɇɉɋɍɏ-ʓʕ-ʯͱͳͷͻ-ͽΐά-ώϐϑϕ-ϗϙϛϝϟϡϣϥϧϩϫϭϯ-ϳϵϸϻϼа-џѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӏӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯՠ-ֈა-ჺჽ-ჿᏸ-ᏽᲀ-ᲈᴀ-ᴫᵫ-ᵷᵹ-ᶚḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕ-ẝẟạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿ-ἇἐ-ἕἠ-ἧἰ-ἷὀ-ὅὐ-ὗὠ-ὧὰ-ώᾀ-ᾇᾐ-ᾗᾠ-ᾧᾰ-ᾴᾶᾷιῂ-ῄῆῇῐ-ΐῖῗῠ-ῧῲ-ῴῶῷℊℎℏℓℯℴℹℼℽⅆ-ⅉⅎↄⰰ-ⱞⱡⱥⱦⱨⱪⱬⱱⱳⱴⱶ-ⱻⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳤⳬⳮⳳⴀ-ⴥⴧⴭꙁꙃꙅꙇꙉꙋꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯ-ꜱꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝱ-ꝸꝺꝼꝿꞁꞃꞅꞇꞌꞎꞑꞓ-ꞕꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩꞯꞵꞷꞹꟺꬰ-ꭚꭠ-ꭥꭰ-ꮿﬀ-ﬆﬓ-ﬗａ-ｚ",astral:"\ud801[\udc28-\udc4f\udcd8-\udcfb]|\ud803[\udcc0-\udcf2]|\ud806[\udcc0-\udcdf]|\ud81b[\ude60-\ude7f]|\ud835[\udc1a-\udc33\udc4e-\udc54\udc56-\udc67\udc82-\udc9b\udcb6-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udccf\udcea-\udd03\udd1e-\udd37\udd52-\udd6b\udd86-\udd9f\uddba-\uddd3\uddee-\ude07\ude22-\ude3b\ude56-\ude6f\ude8a-\udea5\udec2-\udeda\udedc-\udee1\udefc-\udf14\udf16-\udf1b\udf36-\udf4e\udf50-\udf55\udf70-\udf88\udf8a-\udf8f\udfaa-\udfc2\udfc4-\udfc9\udfcb]|\ud83a[\udd22-\udd43]"},{name:"Lm",alias:"Modifier_Letter",bmp:"ʰ-ˁˆ-ˑˠ-ˤˬˮʹͺՙـۥۦߴߵߺࠚࠤࠨॱๆໆჼៗᡃᪧᱸ-ᱽᴬ-ᵪᵸᶛ-ᶿⁱⁿₐ-ₜⱼⱽⵯⸯ々〱-〵〻ゝゞー-ヾꀕꓸ-ꓽꘌꙿꚜꚝꜗ-ꜟꝰꞈꟸꟹꧏꧦꩰꫝꫳꫴꭜ-ꭟｰﾞﾟ",astral:"\ud81a[\udf40-\udf43]|\ud81b[\udf93-\udf9f\udfe0\udfe1]"},{name:"Lo",alias:"Other_Letter",bmp:"ªºƻǀ-ǃʔא-תׯ-ײؠ-ؿف-يٮٯٱ-ۓەۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪࠀ-ࠕࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॲ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๅກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎᄀ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛱ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៜᠠ-ᡂᡄ-ᡸᢀ-ᢄᢇ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱷᳩ-ᳬᳮ-ᳱᳵᳶℵ-ℸⴰ-ⵧⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ〆〼ぁ-ゖゟァ-ヺヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꀔꀖ-ꒌꓐ-ꓷꔀ-ꘋꘐ-ꘟꘪꘫꙮꚠ-ꛥꞏꟷꟻ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧠ-ꧤꧧ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩯꩱ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛꫜꫠ-ꫪꫲꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎יִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼｦ-ｯｱ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",astral:"\ud800[\udc00-\udc0b\udc0d-\udc26\udc28-\udc3a\udc3c\udc3d\udc3f-\udc4d\udc50-\udc5d\udc80-\udcfa\ude80-\ude9c\udea0-\uded0\udf00-\udf1f\udf2d-\udf40\udf42-\udf49\udf50-\udf75\udf80-\udf9d\udfa0-\udfc3\udfc8-\udfcf]|\ud801[\udc50-\udc9d\udd00-\udd27\udd30-\udd63\ude00-\udf36\udf40-\udf55\udf60-\udf67]|\ud802[\udc00-\udc05\udc08\udc0a-\udc35\udc37\udc38\udc3c\udc3f-\udc55\udc60-\udc76\udc80-\udc9e\udce0-\udcf2\udcf4\udcf5\udd00-\udd15\udd20-\udd39\udd80-\uddb7\uddbe\uddbf\ude00\ude10-\ude13\ude15-\ude17\ude19-\ude35\ude60-\ude7c\ude80-\ude9c\udec0-\udec7\udec9-\udee4\udf00-\udf35\udf40-\udf55\udf60-\udf72\udf80-\udf91]|\ud803[\udc00-\udc48\udd00-\udd23\udf00-\udf1c\udf27\udf30-\udf45]|\ud804[\udc03-\udc37\udc83-\udcaf\udcd0-\udce8\udd03-\udd26\udd44\udd50-\udd72\udd76\udd83-\uddb2\uddc1-\uddc4\uddda\udddc\ude00-\ude11\ude13-\ude2b\ude80-\ude86\ude88\ude8a-\ude8d\ude8f-\ude9d\ude9f-\udea8\udeb0-\udede\udf05-\udf0c\udf0f\udf10\udf13-\udf28\udf2a-\udf30\udf32\udf33\udf35-\udf39\udf3d\udf50\udf5d-\udf61]|\ud805[\udc00-\udc34\udc47-\udc4a\udc80-\udcaf\udcc4\udcc5\udcc7\udd80-\uddae\uddd8-\udddb\ude00-\ude2f\ude44\ude80-\udeaa\udf00-\udf1a]|\ud806[\udc00-\udc2b\udcff\ude00\ude0b-\ude32\ude3a\ude50\ude5c-\ude83\ude86-\ude89\ude9d\udec0-\udef8]|\ud807[\udc00-\udc08\udc0a-\udc2e\udc40\udc72-\udc8f\udd00-\udd06\udd08\udd09\udd0b-\udd30\udd46\udd60-\udd65\udd67\udd68\udd6a-\udd89\udd98\udee0-\udef2]|\ud808[\udc00-\udf99]|\ud809[\udc80-\udd43]|[\ud80c\ud81c-\ud820\ud840-\ud868\ud86a-\ud86c\ud86f-\ud872\ud874-\ud879][\udc00-\udfff]|\ud80d[\udc00-\udc2e]|\ud811[\udc00-\ude46]|\ud81a[\udc00-\ude38\ude40-\ude5e\uded0-\udeed\udf00-\udf2f\udf63-\udf77\udf7d-\udf8f]|\ud81b[\udf00-\udf44\udf50]|\ud821[\udc00-\udff1]|\ud822[\udc00-\udef2]|\ud82c[\udc00-\udd1e\udd70-\udefb]|\ud82f[\udc00-\udc6a\udc70-\udc7c\udc80-\udc88\udc90-\udc99]|\ud83a[\udc00-\udcc4]|\ud83b[\ude00-\ude03\ude05-\ude1f\ude21\ude22\ude24\ude27\ude29-\ude32\ude34-\ude37\ude39\ude3b\ude42\ude47\ude49\ude4b\ude4d-\ude4f\ude51\ude52\ude54\ude57\ude59\ude5b\ude5d\ude5f\ude61\ude62\ude64\ude67-\ude6a\ude6c-\ude72\ude74-\ude77\ude79-\ude7c\ude7e\ude80-\ude89\ude8b-\ude9b\udea1-\udea3\udea5-\udea9\udeab-\udebb]|\ud869[\udc00-\uded6\udf00-\udfff]|\ud86d[\udc00-\udf34\udf40-\udfff]|\ud86e[\udc00-\udc1d\udc20-\udfff]|\ud873[\udc00-\udea1\udeb0-\udfff]|\ud87a[\udc00-\udfe0]|\ud87e[\udc00-\ude1d]"},{name:"Lt",alias:"Titlecase_Letter",bmp:"ǅǈǋǲᾈ-ᾏᾘ-ᾟᾨ-ᾯᾼῌῼ"},{name:"Lu",alias:"Uppercase_Letter",bmp:"A-ZÀ-ÖØ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸŹŻŽƁƂƄƆƇƉ-ƋƎ-ƑƓƔƖ-ƘƜƝƟƠƢƤƦƧƩƬƮƯƱ-ƳƵƷƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶ-ǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺȻȽȾɁɃ-ɆɈɊɌɎͰͲͶͿΆΈ-ΊΌΎΏΑ-ΡΣ-ΫϏϒ-ϔϘϚϜϞϠϢϤϦϨϪϬϮϴϷϹϺϽ-ЯѠѢѤѦѨѪѬѮѰѲѴѶѸѺѼѾҀҊҌҎҐҒҔҖҘҚҜҞҠҢҤҦҨҪҬҮҰҲҴҶҸҺҼҾӀӁӃӅӇӉӋӍӐӒӔӖӘӚӜӞӠӢӤӦӨӪӬӮӰӲӴӶӸӺӼӾԀԂԄԆԈԊԌԎԐԒԔԖԘԚԜԞԠԢԤԦԨԪԬԮԱ-ՖႠ-ჅჇჍᎠ-ᏵᲐ-ᲺᲽ-ᲿḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẞẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸỺỼỾἈ-ἏἘ-ἝἨ-ἯἸ-ἿὈ-ὍὙὛὝὟὨ-ὯᾸ-ΆῈ-ΉῘ-ΊῨ-ῬῸ-Ώℂℇℋ-ℍℐ-ℒℕℙ-ℝℤΩℨK-ℭℰ-ℳℾℿⅅↃⰀ-ⰮⱠⱢ-ⱤⱧⱩⱫⱭ-ⱰⱲⱵⱾ-ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢⳫⳭⳲꙀꙂꙄꙆꙈꙊꙌꙎꙐꙒꙔꙖꙘꙚꙜꙞꙠꙢꙤꙦꙨꙪꙬꚀꚂꚄꚆꚈꚊꚌꚎꚐꚒꚔꚖꚘꚚꜢꜤꜦꜨꜪꜬꜮꜲꜴꜶꜸꜺꜼꜾꝀꝂꝄꝆꝈꝊꝌꝎꝐꝒꝔꝖꝘꝚꝜꝞꝠꝢꝤꝦꝨꝪꝬꝮꝹꝻꝽꝾꞀꞂꞄꞆꞋꞍꞐꞒꞖꞘꞚꞜꞞꞠꞢꞤꞦꞨꞪ-ꞮꞰ-ꞴꞶꞸＡ-Ｚ",astral:"\ud801[\udc00-\udc27\udcb0-\udcd3]|\ud803[\udc80-\udcb2]|\ud806[\udca0-\udcbf]|\ud81b[\ude40-\ude5f]|\ud835[\udc00-\udc19\udc34-\udc4d\udc68-\udc81\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb5\udcd0-\udce9\udd04\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd38\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd6c-\udd85\udda0-\uddb9\uddd4-\udded\ude08-\ude21\ude3c-\ude55\ude70-\ude89\udea8-\udec0\udee2-\udefa\udf1c-\udf34\udf56-\udf6e\udf90-\udfa8\udfca]|\ud83a[\udd00-\udd21]"},{name:"M",alias:"Mark",bmp:"̀-ͯ҃-҉֑-ׇֽֿׁׂׅׄؐ-ًؚ-ٰٟۖ-ۜ۟-۪ۤۧۨ-ܑۭܰ-݊ަ-ް߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣঁ-ঃ়া-ৄেৈো-্ৗৢৣ৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑੰੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣஂா-ூெ-ைொ-்ௗఀ-ఄా-ౄె-ైొ-్ౕౖౢౣಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣංඃ්ා-ුූෘ-ෟෲෳัิ-ฺ็-๎ັິ-ູົຼ່-ໍ༹༘༙༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏႚ-ႝ፝-፟ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝᠋-᠍ᢅᢆᢩᤠ-ᤫᤰ-᤻ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼᪰-᪾ᬀ-ᬄ᬴-᭄᭫-᭳ᮀ-ᮂᮡ-ᮭ᯦-᯳ᰤ-᰷᳐-᳔᳒-᳨᳭ᳲ-᳴᳷-᳹᷀-᷹᷻-᷿⃐-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꙯-꙲ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-ꣅ꣠-꣱ꣿꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀ꧥꨩ-ꨶꩃꩌꩍꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭ﬞ︀-️︠-︯",astral:"\ud800[\uddfd\udee0\udf76-\udf7a]|\ud802[\ude01-\ude03\ude05\ude06\ude0c-\ude0f\ude38-\ude3a\ude3f\udee5\udee6]|\ud803[\udd24-\udd27\udf46-\udf50]|\ud804[\udc00-\udc02\udc38-\udc46\udc7f-\udc82\udcb0-\udcba\udd00-\udd02\udd27-\udd34\udd45\udd46\udd73\udd80-\udd82\uddb3-\uddc0\uddc9-\uddcc\ude2c-\ude37\ude3e\udedf-\udeea\udf00-\udf03\udf3b\udf3c\udf3e-\udf44\udf47\udf48\udf4b-\udf4d\udf57\udf62\udf63\udf66-\udf6c\udf70-\udf74]|\ud805[\udc35-\udc46\udc5e\udcb0-\udcc3\uddaf-\uddb5\uddb8-\uddc0\udddc\udddd\ude30-\ude40\udeab-\udeb7\udf1d-\udf2b]|\ud806[\udc2c-\udc3a\ude01-\ude0a\ude33-\ude39\ude3b-\ude3e\ude47\ude51-\ude5b\ude8a-\ude99]|\ud807[\udc2f-\udc36\udc38-\udc3f\udc92-\udca7\udca9-\udcb6\udd31-\udd36\udd3a\udd3c\udd3d\udd3f-\udd45\udd47\udd8a-\udd8e\udd90\udd91\udd93-\udd97\udef3-\udef6]|\ud81a[\udef0-\udef4\udf30-\udf36]|\ud81b[\udf51-\udf7e\udf8f-\udf92]|\ud82f[\udc9d\udc9e]|\ud834[\udd65-\udd69\udd6d-\udd72\udd7b-\udd82\udd85-\udd8b\uddaa-\uddad\ude42-\ude44]|\ud836[\ude00-\ude36\ude3b-\ude6c\ude75\ude84\ude9b-\ude9f\udea1-\udeaf]|\ud838[\udc00-\udc06\udc08-\udc18\udc1b-\udc21\udc23\udc24\udc26-\udc2a]|\ud83a[\udcd0-\udcd6\udd44-\udd4a]|\udb40[\udd00-\uddef]"},{name:"Mc",alias:"Spacing_Mark",bmp:"ःऻा-ीॉ-ौॎॏংঃা-ীেৈোৌৗਃਾ-ੀઃા-ીૉોૌଂଃାୀେୈୋୌୗாிுூெ-ைொ-ௌௗఁ-ఃు-ౄಂಃಾೀ-ೄೇೈೊೋೕೖംഃാ-ീെ-ൈൊ-ൌൗංඃා-ෑෘ-ෟෲෳ༾༿ཿါာေးျြၖၗၢ-ၤၧ-ၭႃႄႇ-ႌႏႚ-ႜាើ-ៅះៈᤣ-ᤦᤩ-ᤫᤰᤱᤳ-ᤸᨙᨚᩕᩗᩡᩣᩤᩭ-ᩲᬄᬵᬻᬽ-ᭁᭃ᭄ᮂᮡᮦᮧ᮪ᯧᯪ-ᯬᯮ᯲᯳ᰤ-ᰫᰴᰵ᳡ᳲᳳ᳷〮〯ꠣꠤꠧꢀꢁꢴ-ꣃꥒ꥓ꦃꦴꦵꦺꦻꦽ-꧀ꨯꨰꨳꨴꩍꩻꩽꫫꫮꫯꫵꯣꯤꯦꯧꯩꯪ꯬",astral:"\ud804[\udc00\udc02\udc82\udcb0-\udcb2\udcb7\udcb8\udd2c\udd45\udd46\udd82\uddb3-\uddb5\uddbf\uddc0\ude2c-\ude2e\ude32\ude33\ude35\udee0-\udee2\udf02\udf03\udf3e\udf3f\udf41-\udf44\udf47\udf48\udf4b-\udf4d\udf57\udf62\udf63]|\ud805[\udc35-\udc37\udc40\udc41\udc45\udcb0-\udcb2\udcb9\udcbb-\udcbe\udcc1\uddaf-\uddb1\uddb8-\uddbb\uddbe\ude30-\ude32\ude3b\ude3c\ude3e\udeac\udeae\udeaf\udeb6\udf20\udf21\udf26]|\ud806[\udc2c-\udc2e\udc38\ude39\ude57\ude58\ude97]|\ud807[\udc2f\udc3e\udca9\udcb1\udcb4\udd8a-\udd8e\udd93\udd94\udd96\udef5\udef6]|\ud81b[\udf51-\udf7e]|\ud834[\udd65\udd66\udd6d-\udd72]"},{name:"Me",alias:"Enclosing_Mark",bmp:"҈҉᪾⃝-⃠⃢-⃤꙰-꙲"},{name:"Mn",alias:"Nonspacing_Mark",bmp:"̀-ͯ҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-ٰٟۖ-ۜ۟-۪ۤۧۨ-ܑۭܰ-݊ަ-ް߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ंऺ़ु-ै्॑-ॗॢॣঁ়ু-ৄ্ৢৣ৾ਁਂ਼ੁੂੇੈੋ-੍ੑੰੱੵઁં઼ુ-ૅેૈ્ૢૣૺ-૿ଁ଼ିୁ-ୄ୍ୖୢୣஂீ்ఀఄా-ీె-ైొ-్ౕౖౢౣಁ಼ಿೆೌ್ೢೣഀഁ഻഼ു-ൄ്ൢൣ්ි-ුූัิ-ฺ็-๎ັິ-ູົຼ່-ໍཱ༹༘༙༵༷-ཾྀ-྄྆྇ྍ-ྗྙ-ྼ࿆ိ-ူဲ-့္်ွှၘၙၞ-ၠၱ-ၴႂႅႆႍႝ፝-፟ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴឵ិ-ួំ៉-៓៝᠋-᠍ᢅᢆᢩᤠ-ᤢᤧᤨᤲ᤹-᤻ᨘᨗᨛᩖᩘ-ᩞ᩠ᩢᩥ-ᩬᩳ-᩿᩼᪰-᪽ᬀ-ᬃ᬴ᬶ-ᬺᬼᭂ᭫-᭳ᮀᮁᮢ-ᮥᮨᮩ᮫-ᮭ᯦ᯨᯩᯭᯯ-ᯱᰬ-ᰳᰶ᰷᳐-᳔᳒-᳢᳠-᳨᳭᳴᳸᳹᷀-᷹᷻-᷿⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〭꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠥꠦ꣄ꣅ꣠-꣱ꣿꤦ-꤭ꥇ-ꥑꦀ-ꦂ꦳ꦶ-ꦹꦼꧥꨩ-ꨮꨱꨲꨵꨶꩃꩌꩼꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫬꫭ꫶ꯥꯨ꯭ﬞ︀-️︠-︯",astral:"\ud800[\uddfd\udee0\udf76-\udf7a]|\ud802[\ude01-\ude03\ude05\ude06\ude0c-\ude0f\ude38-\ude3a\ude3f\udee5\udee6]|\ud803[\udd24-\udd27\udf46-\udf50]|\ud804[\udc01\udc38-\udc46\udc7f-\udc81\udcb3-\udcb6\udcb9\udcba\udd00-\udd02\udd27-\udd2b\udd2d-\udd34\udd73\udd80\udd81\uddb6-\uddbe\uddc9-\uddcc\ude2f-\ude31\ude34\ude36\ude37\ude3e\udedf\udee3-\udeea\udf00\udf01\udf3b\udf3c\udf40\udf66-\udf6c\udf70-\udf74]|\ud805[\udc38-\udc3f\udc42-\udc44\udc46\udc5e\udcb3-\udcb8\udcba\udcbf\udcc0\udcc2\udcc3\uddb2-\uddb5\uddbc\uddbd\uddbf\uddc0\udddc\udddd\ude33-\ude3a\ude3d\ude3f\ude40\udeab\udead\udeb0-\udeb5\udeb7\udf1d-\udf1f\udf22-\udf25\udf27-\udf2b]|\ud806[\udc2f-\udc37\udc39\udc3a\ude01-\ude0a\ude33-\ude38\ude3b-\ude3e\ude47\ude51-\ude56\ude59-\ude5b\ude8a-\ude96\ude98\ude99]|\ud807[\udc30-\udc36\udc38-\udc3d\udc3f\udc92-\udca7\udcaa-\udcb0\udcb2\udcb3\udcb5\udcb6\udd31-\udd36\udd3a\udd3c\udd3d\udd3f-\udd45\udd47\udd90\udd91\udd95\udd97\udef3\udef4]|\ud81a[\udef0-\udef4\udf30-\udf36]|\ud81b[\udf8f-\udf92]|\ud82f[\udc9d\udc9e]|\ud834[\udd67-\udd69\udd7b-\udd82\udd85-\udd8b\uddaa-\uddad\ude42-\ude44]|\ud836[\ude00-\ude36\ude3b-\ude6c\ude75\ude84\ude9b-\ude9f\udea1-\udeaf]|\ud838[\udc00-\udc06\udc08-\udc18\udc1b-\udc21\udc23\udc24\udc26-\udc2a]|\ud83a[\udcd0-\udcd6\udd44-\udd4a]|\udb40[\udd00-\uddef]"},{name:"N",alias:"Number",bmp:"0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൘-൞൦-൸෦-෯๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꧰-꧹꩐-꩙꯰-꯹０-９",astral:"\ud800[\udd07-\udd33\udd40-\udd78\udd8a\udd8b\udee1-\udefb\udf20-\udf23\udf41\udf4a\udfd1-\udfd5]|\ud801[\udca0-\udca9]|\ud802[\udc58-\udc5f\udc79-\udc7f\udca7-\udcaf\udcfb-\udcff\udd16-\udd1b\uddbc\uddbd\uddc0-\uddcf\uddd2-\uddff\ude40-\ude48\ude7d\ude7e\ude9d-\ude9f\udeeb-\udeef\udf58-\udf5f\udf78-\udf7f\udfa9-\udfaf]|\ud803[\udcfa-\udcff\udd30-\udd39\ude60-\ude7e\udf1d-\udf26\udf51-\udf54]|\ud804[\udc52-\udc6f\udcf0-\udcf9\udd36-\udd3f\uddd0-\uddd9\udde1-\uddf4\udef0-\udef9]|\ud805[\udc50-\udc59\udcd0-\udcd9\ude50-\ude59\udec0-\udec9\udf30-\udf3b]|\ud806[\udce0-\udcf2]|\ud807[\udc50-\udc6c\udd50-\udd59\udda0-\udda9]|\ud809[\udc00-\udc6e]|\ud81a[\ude60-\ude69\udf50-\udf59\udf5b-\udf61]|\ud81b[\ude80-\ude96]|\ud834[\udee0-\udef3\udf60-\udf78]|\ud835[\udfce-\udfff]|\ud83a[\udcc7-\udccf\udd50-\udd59]|\ud83b[\udc71-\udcab\udcad-\udcaf\udcb1-\udcb4]|\ud83c[\udd00-\udd0c]"},{name:"Nd",alias:"Decimal_Number",bmp:"0-9٠-٩۰-۹߀-߉०-९০-৯੦-੯૦-૯୦-୯௦-௯౦-౯೦-೯൦-൯෦-෯๐-๙໐-໙༠-༩၀-၉႐-႙០-៩᠐-᠙᥆-᥏᧐-᧙᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙꘠-꘩꣐-꣙꤀-꤉꧐-꧙꧰-꧹꩐-꩙꯰-꯹０-９",astral:"\ud801[\udca0-\udca9]|\ud803[\udd30-\udd39]|\ud804[\udc66-\udc6f\udcf0-\udcf9\udd36-\udd3f\uddd0-\uddd9\udef0-\udef9]|\ud805[\udc50-\udc59\udcd0-\udcd9\ude50-\ude59\udec0-\udec9\udf30-\udf39]|\ud806[\udce0-\udce9]|\ud807[\udc50-\udc59\udd50-\udd59\udda0-\udda9]|\ud81a[\ude60-\ude69\udf50-\udf59]|\ud835[\udfce-\udfff]|\ud83a[\udd50-\udd59]"},{name:"Nl",alias:"Letter_Number",bmp:"ᛮ-ᛰⅠ-ↂↅ-ↈ〇〡-〩〸-〺ꛦ-ꛯ",astral:"\ud800[\udd40-\udd74\udf41\udf4a\udfd1-\udfd5]|\ud809[\udc00-\udc6e]"},{name:"No",alias:"Other_Number",bmp:"²³¹¼-¾৴-৹୲-୷௰-௲౸-౾൘-൞൰-൸༪-༳፩-፼៰-៹᧚⁰⁴-⁹₀-₉⅐-⅟↉①-⒛⓪-⓿❶-➓⳽㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꠰-꠵",astral:"\ud800[\udd07-\udd33\udd75-\udd78\udd8a\udd8b\udee1-\udefb\udf20-\udf23]|\ud802[\udc58-\udc5f\udc79-\udc7f\udca7-\udcaf\udcfb-\udcff\udd16-\udd1b\uddbc\uddbd\uddc0-\uddcf\uddd2-\uddff\ude40-\ude48\ude7d\ude7e\ude9d-\ude9f\udeeb-\udeef\udf58-\udf5f\udf78-\udf7f\udfa9-\udfaf]|\ud803[\udcfa-\udcff\ude60-\ude7e\udf1d-\udf26\udf51-\udf54]|\ud804[\udc52-\udc65\udde1-\uddf4]|\ud805[\udf3a\udf3b]|\ud806[\udcea-\udcf2]|\ud807[\udc5a-\udc6c]|\ud81a[\udf5b-\udf61]|\ud81b[\ude80-\ude96]|\ud834[\udee0-\udef3\udf60-\udf78]|\ud83a[\udcc7-\udccf]|\ud83b[\udc71-\udcab\udcad-\udcaf\udcb1-\udcb4]|\ud83c[\udd00-\udd0c]"},{name:"P",alias:"Punctuation",bmp:"!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}¡§«¶·»¿;·՚-՟։֊־׀׃׆׳״؉؊،؍؛؞؟٪-٭۔܀-܍߷-߹࠰-࠾࡞।॥॰৽੶૰಄෴๏๚๛༄-༒༔༺-༽྅࿐-࿔࿙࿚၊-၏჻፠-፨᐀᙭᙮᚛᚜᛫-᛭᜵᜶។-៖៘-៚᠀-᠊᥄᥅᨞᨟᪠-᪦᪨-᪭᭚-᭠᯼-᯿᰻-᰿᱾᱿᳀-᳇᳓‐-‧‰-⁃⁅-⁑⁓-⁞⁽⁾₍₎⌈-⌋〈〉❨-❵⟅⟆⟦-⟯⦃-⦘⧘-⧛⧼⧽⳹-⳼⳾⳿⵰⸀-⸮⸰-⹎、-〃〈-】〔-〟〰〽゠・꓾꓿꘍-꘏꙳꙾꛲-꛷꡴-꡷꣎꣏꣸-꣺꣼꤮꤯꥟꧁-꧍꧞꧟꩜-꩟꫞꫟꫰꫱꯫﴾﴿︐-︙︰-﹒﹔-﹡﹣﹨﹪﹫！-＃％-＊，-／：；？＠［-］＿｛｝｟-･",astral:"\ud800[\udd00-\udd02\udf9f\udfd0]|𐕯|\ud802[\udc57\udd1f\udd3f\ude50-\ude58\ude7f\udef0-\udef6\udf39-\udf3f\udf99-\udf9c]|\ud803[\udf55-\udf59]|\ud804[\udc47-\udc4d\udcbb\udcbc\udcbe-\udcc1\udd40-\udd43\udd74\udd75\uddc5-\uddc8\uddcd\udddb\udddd-\udddf\ude38-\ude3d\udea9]|\ud805[\udc4b-\udc4f\udc5b\udc5d\udcc6\uddc1-\uddd7\ude41-\ude43\ude60-\ude6c\udf3c-\udf3e]|\ud806[\udc3b\ude3f-\ude46\ude9a-\ude9c\ude9e-\udea2]|\ud807[\udc41-\udc45\udc70\udc71\udef7\udef8]|\ud809[\udc70-\udc74]|\ud81a[\ude6e\ude6f\udef5\udf37-\udf3b\udf44]|\ud81b[\ude97-\ude9a]|𛲟|\ud836[\ude87-\ude8b]|\ud83a[\udd5e\udd5f]"},{name:"Pc",alias:"Connector_Punctuation",bmp:"_‿⁀⁔︳︴﹍-﹏＿"},{name:"Pd",alias:"Dash_Punctuation",bmp:"\\-֊־᐀᠆‐-―⸗⸚⸺⸻⹀〜〰゠︱︲﹘﹣－"},{name:"Pe",alias:"Close_Punctuation",bmp:"\\)\\]\\}༻༽᚜⁆⁾₎⌉⌋〉❩❫❭❯❱❳❵⟆⟧⟩⟫⟭⟯⦄⦆⦈⦊⦌⦎⦐⦒⦔⦖⦘⧙⧛⧽⸣⸥⸧⸩〉》」』】〕〗〙〛〞〟﴾︘︶︸︺︼︾﹀﹂﹄﹈﹚﹜﹞）］｝｠｣"},{name:"Pf",alias:"Final_Punctuation",bmp:"»’”›⸃⸅⸊⸍⸝⸡"},{name:"Pi",alias:"Initial_Punctuation",bmp:"«‘‛“‟‹⸂⸄⸉⸌⸜⸠"},{name:"Po",alias:"Other_Punctuation",bmp:"!-#%-'\\*,\\.\\/:;\\?@\\¡§¶·¿;·՚-՟։׀׃׆׳״؉؊،؍؛؞؟٪-٭۔܀-܍߷-߹࠰-࠾࡞।॥॰৽੶૰಄෴๏๚๛༄-༒༔྅࿐-࿔࿙࿚၊-၏჻፠-፨᙭᙮᛫-᛭᜵᜶។-៖៘-៚᠀-᠅᠇-᠊᥄᥅᨞᨟᪠-᪦᪨-᪭᭚-᭠᯼-᯿᰻-᰿᱾᱿᳀-᳇᳓‖‗†-‧‰-‸※-‾⁁-⁃⁇-⁑⁓⁕-⁞⳹-⳼⳾⳿⵰⸀⸁⸆-⸈⸋⸎-⸖⸘⸙⸛⸞⸟⸪-⸮⸰-⸹⸼-⸿⹁⹃-⹎、-〃〽・꓾꓿꘍-꘏꙳꙾꛲-꛷꡴-꡷꣎꣏꣸-꣺꣼꤮꤯꥟꧁-꧍꧞꧟꩜-꩟꫞꫟꫰꫱꯫︐-︖︙︰﹅﹆﹉-﹌﹐-﹒﹔-﹗﹟-﹡﹨﹪﹫！-＃％-＇＊，．／：；？＠＼｡､･",astral:"\ud800[\udd00-\udd02\udf9f\udfd0]|𐕯|\ud802[\udc57\udd1f\udd3f\ude50-\ude58\ude7f\udef0-\udef6\udf39-\udf3f\udf99-\udf9c]|\ud803[\udf55-\udf59]|\ud804[\udc47-\udc4d\udcbb\udcbc\udcbe-\udcc1\udd40-\udd43\udd74\udd75\uddc5-\uddc8\uddcd\udddb\udddd-\udddf\ude38-\ude3d\udea9]|\ud805[\udc4b-\udc4f\udc5b\udc5d\udcc6\uddc1-\uddd7\ude41-\ude43\ude60-\ude6c\udf3c-\udf3e]|\ud806[\udc3b\ude3f-\ude46\ude9a-\ude9c\ude9e-\udea2]|\ud807[\udc41-\udc45\udc70\udc71\udef7\udef8]|\ud809[\udc70-\udc74]|\ud81a[\ude6e\ude6f\udef5\udf37-\udf3b\udf44]|\ud81b[\ude97-\ude9a]|𛲟|\ud836[\ude87-\ude8b]|\ud83a[\udd5e\udd5f]"},{name:"Ps",alias:"Open_Punctuation",bmp:"\\(\\[\\{༺༼᚛‚„⁅⁽₍⌈⌊〈❨❪❬❮❰❲❴⟅⟦⟨⟪⟬⟮⦃⦅⦇⦉⦋⦍⦏⦑⦓⦕⦗⧘⧚⧼⸢⸤⸦⸨⹂〈《「『【〔〖〘〚〝﴿︗︵︷︹︻︽︿﹁﹃﹇﹙﹛﹝（［｛｟｢"},{name:"S",alias:"Symbol",bmp:"\\$\\+<->\\^`\\|~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֍-֏؆-؈؋؎؏۞۩۽۾߶߾߿৲৳৺৻૱୰௳-௺౿൏൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₿℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏↊↋←-⌇⌌-⌨⌫-␦⑀-⑊⒜-ⓩ─-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭳⭶-⮕⮘-⯈⯊-⯾⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹꭛﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�",astral:"\ud800[\udd37-\udd3f\udd79-\udd89\udd8c-\udd8e\udd90-\udd9b\udda0\uddd0-\uddfc]|\ud802[\udc77\udc78\udec8]|𑜿|\ud81a[\udf3c-\udf3f\udf45]|𛲜|\ud834[\udc00-\udcf5\udd00-\udd26\udd29-\udd64\udd6a-\udd6c\udd83\udd84\udd8c-\udda9\uddae-\udde8\ude00-\ude41\ude45\udf00-\udf56]|\ud835[\udec1\udedb\udefb\udf15\udf35\udf4f\udf6f\udf89\udfa9\udfc3]|\ud836[\udc00-\uddff\ude37-\ude3a\ude6d-\ude74\ude76-\ude83\ude85\ude86]|\ud83b[\udcac\udcb0\udef0\udef1]|\ud83c[\udc00-\udc2b\udc30-\udc93\udca0-\udcae\udcb1-\udcbf\udcc1-\udccf\udcd1-\udcf5\udd10-\udd6b\udd70-\uddac\udde6-\ude02\ude10-\ude3b\ude40-\ude48\ude50\ude51\ude60-\ude65\udf00-\udfff]|\ud83d[\udc00-\uded4\udee0-\udeec\udef0-\udef9\udf00-\udf73\udf80-\udfd8]|\ud83e[\udc00-\udc0b\udc10-\udc47\udc50-\udc59\udc60-\udc87\udc90-\udcad\udd00-\udd0b\udd10-\udd3e\udd40-\udd70\udd73-\udd76\udd7a\udd7c-\udda2\uddb0-\uddb9\uddc0-\uddc2\uddd0-\uddff\ude60-\ude6d]"},{name:"Sc",alias:"Currency_Symbol",bmp:"\\$¢-¥֏؋߾߿৲৳৻૱௹฿៛₠-₿꠸﷼﹩＄￠￡￥￦",astral:"𞲰"},{name:"Sk",alias:"Modifier_Symbol",bmp:"\\^`¨¯´¸˂-˅˒-˟˥-˫˭˯-˿͵΄΅᾽᾿-῁῍-῏῝-῟῭-`´῾゛゜꜀-꜖꜠꜡꞉꞊꭛﮲-﯁＾｀￣",astral:"\ud83c[\udffb-\udfff]"},{name:"Sm",alias:"Math_Symbol",bmp:"\\+<->\\|~¬±×÷϶؆-؈⁄⁒⁺-⁼₊-₌℘⅀-⅄⅋←-↔↚↛↠↣↦↮⇎⇏⇒⇔⇴-⋿⌠⌡⍼⎛-⎳⏜-⏡▷◁◸-◿♯⟀-⟄⟇-⟥⟰-⟿⤀-⦂⦙-⧗⧜-⧻⧾-⫿⬰-⭄⭇-⭌﬩﹢﹤-﹦＋＜-＞｜～￢￩-￬",astral:"\ud835[\udec1\udedb\udefb\udf15\udf35\udf4f\udf6f\udf89\udfa9\udfc3]|\ud83b[\udef0\udef1]"},{name:"So",alias:"Other_Symbol",bmp:"¦©®°҂֍֎؎؏۞۩۽۾߶৺୰௳-௸௺౿൏൹༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙᥀᧞-᧿᭡-᭪᭴-᭼℀℁℃-℆℈℉℔№℗℞-℣℥℧℩℮℺℻⅊⅌⅍⅏↊↋↕-↙↜-↟↡↢↤↥↧-↭↯-⇍⇐⇑⇓⇕-⇳⌀-⌇⌌-⌟⌢-⌨⌫-⍻⍽-⎚⎴-⏛⏢-␦⑀-⑊⒜-ⓩ─-▶▸-◀◂-◷☀-♮♰-❧➔-➿⠀-⣿⬀-⬯⭅⭆⭍-⭳⭶-⮕⮘-⯈⯊-⯾⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꠨-꠫꠶꠷꠹꩷-꩹﷽￤￨￭￮￼�",astral:"\ud800[\udd37-\udd3f\udd79-\udd89\udd8c-\udd8e\udd90-\udd9b\udda0\uddd0-\uddfc]|\ud802[\udc77\udc78\udec8]|𑜿|\ud81a[\udf3c-\udf3f\udf45]|𛲜|\ud834[\udc00-\udcf5\udd00-\udd26\udd29-\udd64\udd6a-\udd6c\udd83\udd84\udd8c-\udda9\uddae-\udde8\ude00-\ude41\ude45\udf00-\udf56]|\ud836[\udc00-\uddff\ude37-\ude3a\ude6d-\ude74\ude76-\ude83\ude85\ude86]|𞲬|\ud83c[\udc00-\udc2b\udc30-\udc93\udca0-\udcae\udcb1-\udcbf\udcc1-\udccf\udcd1-\udcf5\udd10-\udd6b\udd70-\uddac\udde6-\ude02\ude10-\ude3b\ude40-\ude48\ude50\ude51\ude60-\ude65\udf00-\udffa]|\ud83d[\udc00-\uded4\udee0-\udeec\udef0-\udef9\udf00-\udf73\udf80-\udfd8]|\ud83e[\udc00-\udc0b\udc10-\udc47\udc50-\udc59\udc60-\udc87\udc90-\udcad\udd00-\udd0b\udd10-\udd3e\udd40-\udd70\udd73-\udd76\udd7a\udd7c-\udda2\uddb0-\uddb9\uddc0-\uddc2\uddd0-\uddff\ude60-\ude6d]"},{name:"Z",alias:"Separator",bmp:"    - \u2028\u2029  　"},{name:"Zl",alias:"Line_Separator",bmp:"\u2028"},{name:"Zp",alias:"Paragraph_Separator",bmp:"\u2029"},{name:"Zs",alias:"Space_Separator",bmp:"    -   　"}],unicodeCategories=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var u,t=(u=categories)&&u.__esModule?u:{default:u};r.default=function(e){if(!e.addUnicodeData)throw new ReferenceError("Unicode Base must be loaded before Unicode Categories");e.addUnicodeData(t.default)},e.exports=r.default});unwrapExports(unicodeCategories);var properties=[{name:"ASCII",bmp:"\0-"},{name:"Alphabetic",bmp:"A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͅͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈְ-ׇֽֿׁׂׅׄא-תׯ-ײؐ-ؚؠ-ٗٙ-ٟٮ-ۓە-ۜۡ-ۭۨ-ۯۺ-ۼۿܐ-ܿݍ-ޱߊ-ߪߴߵߺࠀ-ࠗࠚ-ࠬࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽࣔ-ࣣࣟ-ࣰࣩ-ऻऽ-ौॎ-ॐॕ-ॣॱ-ঃঅ-ঌএঐও-নপ-রলশ-হঽ-ৄেৈোৌৎৗড়ঢ়য়-ৣৰৱৼਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਾ-ੂੇੈੋੌੑਖ਼-ੜਫ਼ੰ-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽ-ૅે-ૉોૌૐૠ-ૣૹ-ૼଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽ-ୄେୈୋୌୖୗଡ଼ଢ଼ୟ-ୣୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-ௌௐௗఀ-ఃఅ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-ౌౕౖౘ-ౚౠ-ౣಀ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽ-ೄೆ-ೈೊ-ೌೕೖೞೠ-ೣೱೲഀ-ഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൌൎൔ-ൗൟ-ൣൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆා-ුූෘ-ෟෲෳก-ฺเ-ๆํກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆໍໜ-ໟༀཀ-ཇཉ-ཬཱ-ཱྀྈ-ྗྙ-ྼက-ံးျ-ဿၐ-ၢၥ-ၨၮ-ႆႎႜႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፟ᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜓᜠ-ᜳᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-ឳា-ៈៗៜᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-ᤸᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨛᨠ-ᩞᩡ-ᩴᪧᬀ-ᬳᬵ-ᭃᭅ-ᭋᮀ-ᮩᮬ-ᮯᮺ-ᯥᯧ-ᯱᰀ-ᰵᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᴀ-ᶿᷧ-ᷴḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⒶ-ⓩⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙴ-ꙻꙿ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠧꡀ-ꡳꢀ-ꣃꣅꣲ-ꣷꣻꣽꣾꤊ-ꤪꤰ-ꥒꥠ-ꥼꦀ-ꦲꦴ-ꦿꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨶꩀ-ꩍꩠ-ꩶꩺꩾ-ꪾꫀꫂꫛ-ꫝꫠ-ꫯꫲ-ꫵꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯪ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",astral:"\ud800[\udc00-\udc0b\udc0d-\udc26\udc28-\udc3a\udc3c\udc3d\udc3f-\udc4d\udc50-\udc5d\udc80-\udcfa\udd40-\udd74\ude80-\ude9c\udea0-\uded0\udf00-\udf1f\udf2d-\udf4a\udf50-\udf7a\udf80-\udf9d\udfa0-\udfc3\udfc8-\udfcf\udfd1-\udfd5]|\ud801[\udc00-\udc9d\udcb0-\udcd3\udcd8-\udcfb\udd00-\udd27\udd30-\udd63\ude00-\udf36\udf40-\udf55\udf60-\udf67]|\ud802[\udc00-\udc05\udc08\udc0a-\udc35\udc37\udc38\udc3c\udc3f-\udc55\udc60-\udc76\udc80-\udc9e\udce0-\udcf2\udcf4\udcf5\udd00-\udd15\udd20-\udd39\udd80-\uddb7\uddbe\uddbf\ude00-\ude03\ude05\ude06\ude0c-\ude13\ude15-\ude17\ude19-\ude35\ude60-\ude7c\ude80-\ude9c\udec0-\udec7\udec9-\udee4\udf00-\udf35\udf40-\udf55\udf60-\udf72\udf80-\udf91]|\ud803[\udc00-\udc48\udc80-\udcb2\udcc0-\udcf2\udd00-\udd27\udf00-\udf1c\udf27\udf30-\udf45]|\ud804[\udc00-\udc45\udc82-\udcb8\udcd0-\udce8\udd00-\udd32\udd44-\udd46\udd50-\udd72\udd76\udd80-\uddbf\uddc1-\uddc4\uddda\udddc\ude00-\ude11\ude13-\ude34\ude37\ude3e\ude80-\ude86\ude88\ude8a-\ude8d\ude8f-\ude9d\ude9f-\udea8\udeb0-\udee8\udf00-\udf03\udf05-\udf0c\udf0f\udf10\udf13-\udf28\udf2a-\udf30\udf32\udf33\udf35-\udf39\udf3d-\udf44\udf47\udf48\udf4b\udf4c\udf50\udf57\udf5d-\udf63]|\ud805[\udc00-\udc41\udc43-\udc45\udc47-\udc4a\udc80-\udcc1\udcc4\udcc5\udcc7\udd80-\uddb5\uddb8-\uddbe\uddd8-\udddd\ude00-\ude3e\ude40\ude44\ude80-\udeb5\udf00-\udf1a\udf1d-\udf2a]|\ud806[\udc00-\udc38\udca0-\udcdf\udcff\ude00-\ude32\ude35-\ude3e\ude50-\ude83\ude86-\ude97\ude9d\udec0-\udef8]|\ud807[\udc00-\udc08\udc0a-\udc36\udc38-\udc3e\udc40\udc72-\udc8f\udc92-\udca7\udca9-\udcb6\udd00-\udd06\udd08\udd09\udd0b-\udd36\udd3a\udd3c\udd3d\udd3f-\udd41\udd43\udd46\udd47\udd60-\udd65\udd67\udd68\udd6a-\udd8e\udd90\udd91\udd93-\udd96\udd98\udee0-\udef6]|\ud808[\udc00-\udf99]|\ud809[\udc00-\udc6e\udc80-\udd43]|[\ud80c\ud81c-\ud820\ud840-\ud868\ud86a-\ud86c\ud86f-\ud872\ud874-\ud879][\udc00-\udfff]|\ud80d[\udc00-\udc2e]|\ud811[\udc00-\ude46]|\ud81a[\udc00-\ude38\ude40-\ude5e\uded0-\udeed\udf00-\udf36\udf40-\udf43\udf63-\udf77\udf7d-\udf8f]|\ud81b[\ude40-\ude7f\udf00-\udf44\udf50-\udf7e\udf93-\udf9f\udfe0\udfe1]|\ud821[\udc00-\udff1]|\ud822[\udc00-\udef2]|\ud82c[\udc00-\udd1e\udd70-\udefb]|\ud82f[\udc00-\udc6a\udc70-\udc7c\udc80-\udc88\udc90-\udc99\udc9e]|\ud835[\udc00-\udc54\udc56-\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd1e-\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd52-\udea5\udea8-\udec0\udec2-\udeda\udedc-\udefa\udefc-\udf14\udf16-\udf34\udf36-\udf4e\udf50-\udf6e\udf70-\udf88\udf8a-\udfa8\udfaa-\udfc2\udfc4-\udfcb]|\ud838[\udc00-\udc06\udc08-\udc18\udc1b-\udc21\udc23\udc24\udc26-\udc2a]|\ud83a[\udc00-\udcc4\udd00-\udd43\udd47]|\ud83b[\ude00-\ude03\ude05-\ude1f\ude21\ude22\ude24\ude27\ude29-\ude32\ude34-\ude37\ude39\ude3b\ude42\ude47\ude49\ude4b\ude4d-\ude4f\ude51\ude52\ude54\ude57\ude59\ude5b\ude5d\ude5f\ude61\ude62\ude64\ude67-\ude6a\ude6c-\ude72\ude74-\ude77\ude79-\ude7c\ude7e\ude80-\ude89\ude8b-\ude9b\udea1-\udea3\udea5-\udea9\udeab-\udebb]|\ud83c[\udd30-\udd49\udd50-\udd69\udd70-\udd89]|\ud869[\udc00-\uded6\udf00-\udfff]|\ud86d[\udc00-\udf34\udf40-\udfff]|\ud86e[\udc00-\udc1d\udc20-\udfff]|\ud873[\udc00-\udea1\udeb0-\udfff]|\ud87a[\udc00-\udfe0]|\ud87e[\udc00-\ude1d]"},{name:"Any",isBmpLast:!0,bmp:"\0-￿",astral:"[\ud800-\udbff][\udc00-\udfff]"},{name:"Default_Ignorable_Code_Point",bmp:"­͏؜ᅟᅠ឴឵᠋-᠎​-‏‪-‮⁠-⁯ㅤ︀-️\ufeffﾠ￰-￸",astral:"\ud82f[\udca0-\udca3]|\ud834[\udd73-\udd7a]|[\udb40-\udb43][\udc00-\udfff]"},{name:"Lowercase",bmp:"a-zªµºß-öø-ÿāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįıĳĵķĸĺļľŀłńņňŉŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž-ƀƃƅƈƌƍƒƕƙ-ƛƞơƣƥƨƪƫƭưƴƶƹƺƽ-ƿǆǉǌǎǐǒǔǖǘǚǜǝǟǡǣǥǧǩǫǭǯǰǳǵǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟȡȣȥȧȩȫȭȯȱȳ-ȹȼȿɀɂɇɉɋɍɏ-ʓʕ-ʸˀˁˠ-ˤͅͱͳͷͺ-ͽΐά-ώϐϑϕ-ϗϙϛϝϟϡϣϥϧϩϫϭϯ-ϳϵϸϻϼа-џѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӏӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯՠ-ֈა-ჺჽ-ჿᏸ-ᏽᲀ-ᲈᴀ-ᶿḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕ-ẝẟạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿ-ἇἐ-ἕἠ-ἧἰ-ἷὀ-ὅὐ-ὗὠ-ὧὰ-ώᾀ-ᾇᾐ-ᾗᾠ-ᾧᾰ-ᾴᾶᾷιῂ-ῄῆῇῐ-ΐῖῗῠ-ῧῲ-ῴῶῷⁱⁿₐ-ₜℊℎℏℓℯℴℹℼℽⅆ-ⅉⅎⅰ-ⅿↄⓐ-ⓩⰰ-ⱞⱡⱥⱦⱨⱪⱬⱱⱳⱴⱶ-ⱽⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳤⳬⳮⳳⴀ-ⴥⴧⴭꙁꙃꙅꙇꙉꙋꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛ-ꚝꜣꜥꜧꜩꜫꜭꜯ-ꜱꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯ-ꝸꝺꝼꝿꞁꞃꞅꞇꞌꞎꞑꞓ-ꞕꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩꞯꞵꞷꞹꟸ-ꟺꬰ-ꭚꭜ-ꭥꭰ-ꮿﬀ-ﬆﬓ-ﬗａ-ｚ",astral:"\ud801[\udc28-\udc4f\udcd8-\udcfb]|\ud803[\udcc0-\udcf2]|\ud806[\udcc0-\udcdf]|\ud81b[\ude60-\ude7f]|\ud835[\udc1a-\udc33\udc4e-\udc54\udc56-\udc67\udc82-\udc9b\udcb6-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udccf\udcea-\udd03\udd1e-\udd37\udd52-\udd6b\udd86-\udd9f\uddba-\uddd3\uddee-\ude07\ude22-\ude3b\ude56-\ude6f\ude8a-\udea5\udec2-\udeda\udedc-\udee1\udefc-\udf14\udf16-\udf1b\udf36-\udf4e\udf50-\udf55\udf70-\udf88\udf8a-\udf8f\udfaa-\udfc2\udfc4-\udfc9\udfcb]|\ud83a[\udd22-\udd43]"},{name:"Noncharacter_Code_Point",bmp:"﷐-﷯￾￿",astral:"[\ud83f\ud87f\ud8bf\ud8ff\ud93f\ud97f\ud9bf\ud9ff\uda3f\uda7f\udabf\udaff\udb3f\udb7f\udbbf\udbff][\udffe\udfff]"},{name:"Uppercase",bmp:"A-ZÀ-ÖØ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸŹŻŽƁƂƄƆƇƉ-ƋƎ-ƑƓƔƖ-ƘƜƝƟƠƢƤƦƧƩƬƮƯƱ-ƳƵƷƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶ-ǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺȻȽȾɁɃ-ɆɈɊɌɎͰͲͶͿΆΈ-ΊΌΎΏΑ-ΡΣ-ΫϏϒ-ϔϘϚϜϞϠϢϤϦϨϪϬϮϴϷϹϺϽ-ЯѠѢѤѦѨѪѬѮѰѲѴѶѸѺѼѾҀҊҌҎҐҒҔҖҘҚҜҞҠҢҤҦҨҪҬҮҰҲҴҶҸҺҼҾӀӁӃӅӇӉӋӍӐӒӔӖӘӚӜӞӠӢӤӦӨӪӬӮӰӲӴӶӸӺӼӾԀԂԄԆԈԊԌԎԐԒԔԖԘԚԜԞԠԢԤԦԨԪԬԮԱ-ՖႠ-ჅჇჍᎠ-ᏵᲐ-ᲺᲽ-ᲿḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẞẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸỺỼỾἈ-ἏἘ-ἝἨ-ἯἸ-ἿὈ-ὍὙὛὝὟὨ-ὯᾸ-ΆῈ-ΉῘ-ΊῨ-ῬῸ-Ώℂℇℋ-ℍℐ-ℒℕℙ-ℝℤΩℨK-ℭℰ-ℳℾℿⅅⅠ-ⅯↃⒶ-ⓏⰀ-ⰮⱠⱢ-ⱤⱧⱩⱫⱭ-ⱰⱲⱵⱾ-ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢⳫⳭⳲꙀꙂꙄꙆꙈꙊꙌꙎꙐꙒꙔꙖꙘꙚꙜꙞꙠꙢꙤꙦꙨꙪꙬꚀꚂꚄꚆꚈꚊꚌꚎꚐꚒꚔꚖꚘꚚꜢꜤꜦꜨꜪꜬꜮꜲꜴꜶꜸꜺꜼꜾꝀꝂꝄꝆꝈꝊꝌꝎꝐꝒꝔꝖꝘꝚꝜꝞꝠꝢꝤꝦꝨꝪꝬꝮꝹꝻꝽꝾꞀꞂꞄꞆꞋꞍꞐꞒꞖꞘꞚꞜꞞꞠꞢꞤꞦꞨꞪ-ꞮꞰ-ꞴꞶꞸＡ-Ｚ",astral:"\ud801[\udc00-\udc27\udcb0-\udcd3]|\ud803[\udc80-\udcb2]|\ud806[\udca0-\udcbf]|\ud81b[\ude40-\ude5f]|\ud835[\udc00-\udc19\udc34-\udc4d\udc68-\udc81\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb5\udcd0-\udce9\udd04\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd38\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd6c-\udd85\udda0-\uddb9\uddd4-\udded\ude08-\ude21\ude3c-\ude55\ude70-\ude89\udea8-\udec0\udee2-\udefa\udf1c-\udf34\udf56-\udf6e\udf90-\udfa8\udfca]|\ud83a[\udd00-\udd21]|\ud83c[\udd30-\udd49\udd50-\udd69\udd70-\udd89]"},{name:"White_Space",bmp:"\t-\r    - \u2028\u2029  　"}],unicodeProperties=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var u,t=(u=properties)&&u.__esModule?u:{default:u};r.default=function(e){if(!e.addUnicodeData)throw new ReferenceError("Unicode Base must be loaded before Unicode Properties");var r=t.default;r.push({name:"Assigned",inverseOf:"Cn"}),e.addUnicodeData(r)},e.exports=r.default});unwrapExports(unicodeProperties);var scripts=[{name:"Adlam",astral:"\ud83a[\udd00-\udd4a\udd50-\udd59\udd5e\udd5f]"},{name:"Ahom",astral:"\ud805[\udf00-\udf1a\udf1d-\udf2b\udf30-\udf3f]"},{name:"Anatolian_Hieroglyphs",astral:"\ud811[\udc00-\ude46]"},{name:"Arabic",bmp:"؀-؄؆-؋؍-ؚ؜؞ؠ-ؿف-يٖ-ٯٱ-ۜ۞-ۿݐ-ݿࢠ-ࢴࢶ-ࢽ࣓-ࣣ࣡-ࣿﭐ-﯁ﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-﷽ﹰ-ﹴﹶ-ﻼ",astral:"\ud803[\ude60-\ude7e]|\ud83b[\ude00-\ude03\ude05-\ude1f\ude21\ude22\ude24\ude27\ude29-\ude32\ude34-\ude37\ude39\ude3b\ude42\ude47\ude49\ude4b\ude4d-\ude4f\ude51\ude52\ude54\ude57\ude59\ude5b\ude5d\ude5f\ude61\ude62\ude64\ude67-\ude6a\ude6c-\ude72\ude74-\ude77\ude79-\ude7c\ude7e\ude80-\ude89\ude8b-\ude9b\udea1-\udea3\udea5-\udea9\udeab-\udebb\udef0\udef1]"},{name:"Armenian",bmp:"Ա-Ֆՙ-ֈ֊֍-֏ﬓ-ﬗ"},{name:"Avestan",astral:"\ud802[\udf00-\udf35\udf39-\udf3f]"},{name:"Balinese",bmp:"ᬀ-ᭋ᭐-᭼"},{name:"Bamum",bmp:"ꚠ-꛷",astral:"\ud81a[\udc00-\ude38]"},{name:"Bassa_Vah",astral:"\ud81a[\uded0-\udeed\udef0-\udef5]"},{name:"Batak",bmp:"ᯀ-᯳᯼-᯿"},{name:"Bengali",bmp:"ঀ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-৾"},{name:"Bhaiksuki",astral:"\ud807[\udc00-\udc08\udc0a-\udc36\udc38-\udc45\udc50-\udc6c]"},{name:"Bopomofo",bmp:"˪˫ㄅ-ㄯㆠ-ㆺ"},{name:"Brahmi",astral:"\ud804[\udc00-\udc4d\udc52-\udc6f\udc7f]"},{name:"Braille",bmp:"⠀-⣿"},{name:"Buginese",bmp:"ᨀ-ᨛ᨞᨟"},{name:"Buhid",bmp:"ᝀ-ᝓ"},{name:"Canadian_Aboriginal",bmp:"᐀-ᙿᢰ-ᣵ"},{name:"Carian",astral:"\ud800[\udea0-\uded0]"},{name:"Caucasian_Albanian",astral:"\ud801[\udd30-\udd63\udd6f]"},{name:"Chakma",astral:"\ud804[\udd00-\udd34\udd36-\udd46]"},{name:"Cham",bmp:"ꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-꩟"},{name:"Cherokee",bmp:"Ꭰ-Ᏽᏸ-ᏽꭰ-ꮿ"},{name:"Common",bmp:"\0-@\\[-`\\{-©«-¹»-¿×÷ʹ-˟˥-˩ˬ-˿ʹ;΅·։؅،؛؟ـ۝࣢।॥฿࿕-࿘჻᛫-᛭᜵᜶᠂᠃᠅᳓᳡ᳩ-ᳬᳮ-ᳳᳵ-᳷ -​‎-⁤⁦-⁰⁴-⁾₀-₎₠-₿℀-℥℧-℩ℬ-ℱℳ-⅍⅏-⅟↉-↋←-␦⑀-⑊①-⟿⤀-⭳⭶-⮕⮘-⯈⯊-⯾⸀-⹎⿰-⿻　-〄〆〈-〠〰-〷〼-〿゛゜゠・ー㆐-㆟㇀-㇣㈠-㉟㉿-㋏㍘-㏿䷀-䷿꜀-꜡ꞈ-꞊꠰-꠹꤮ꧏ꭛﴾﴿︐-︙︰-﹒﹔-﹦﹨-﹫\ufeff！-＠［-｀｛-･ｰﾞﾟ￠-￦￨-￮￹-�",astral:"\ud800[\udd00-\udd02\udd07-\udd33\udd37-\udd3f\udd90-\udd9b\uddd0-\uddfc\udee1-\udefb]|\ud82f[\udca0-\udca3]|\ud834[\udc00-\udcf5\udd00-\udd26\udd29-\udd66\udd6a-\udd7a\udd83\udd84\udd8c-\udda9\uddae-\udde8\udee0-\udef3\udf00-\udf56\udf60-\udf78]|\ud835[\udc00-\udc54\udc56-\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd1e-\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd52-\udea5\udea8-\udfcb\udfce-\udfff]|\ud83b[\udc71-\udcb4]|\ud83c[\udc00-\udc2b\udc30-\udc93\udca0-\udcae\udcb1-\udcbf\udcc1-\udccf\udcd1-\udcf5\udd00-\udd0c\udd10-\udd6b\udd70-\uddac\udde6-\uddff\ude01\ude02\ude10-\ude3b\ude40-\ude48\ude50\ude51\ude60-\ude65\udf00-\udfff]|\ud83d[\udc00-\uded4\udee0-\udeec\udef0-\udef9\udf00-\udf73\udf80-\udfd8]|\ud83e[\udc00-\udc0b\udc10-\udc47\udc50-\udc59\udc60-\udc87\udc90-\udcad\udd00-\udd0b\udd10-\udd3e\udd40-\udd70\udd73-\udd76\udd7a\udd7c-\udda2\uddb0-\uddb9\uddc0-\uddc2\uddd0-\uddff\ude60-\ude6d]|\udb40[\udc01\udc20-\udc7f]"},{name:"Coptic",bmp:"Ϣ-ϯⲀ-ⳳ⳹-⳿"},{name:"Cuneiform",astral:"\ud808[\udc00-\udf99]|\ud809[\udc00-\udc6e\udc70-\udc74\udc80-\udd43]"},{name:"Cypriot",astral:"\ud802[\udc00-\udc05\udc08\udc0a-\udc35\udc37\udc38\udc3c\udc3f]"},{name:"Cyrillic",bmp:"Ѐ-҄҇-ԯᲀ-ᲈᴫᵸⷠ-ⷿꙀ-ꚟ︮︯"},{name:"Deseret",astral:"\ud801[\udc00-\udc4f]"},{name:"Devanagari",bmp:"ऀ-ॐ॓-ॣ०-ॿ꣠-ꣿ"},{name:"Dogra",astral:"\ud806[\udc00-\udc3b]"},{name:"Duployan",astral:"\ud82f[\udc00-\udc6a\udc70-\udc7c\udc80-\udc88\udc90-\udc99\udc9c-\udc9f]"},{name:"Egyptian_Hieroglyphs",astral:"\ud80c[\udc00-\udfff]|\ud80d[\udc00-\udc2e]"},{name:"Elbasan",astral:"\ud801[\udd00-\udd27]"},{name:"Ethiopic",bmp:"ሀ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙ⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮ"},{name:"Georgian",bmp:"Ⴀ-ჅჇჍა-ჺჼ-ჿᲐ-ᲺᲽ-Ჿⴀ-ⴥⴧⴭ"},{name:"Glagolitic",bmp:"Ⰰ-Ⱞⰰ-ⱞ",astral:"\ud838[\udc00-\udc06\udc08-\udc18\udc1b-\udc21\udc23\udc24\udc26-\udc2a]"},{name:"Gothic",astral:"\ud800[\udf30-\udf4a]"},{name:"Grantha",astral:"\ud804[\udf00-\udf03\udf05-\udf0c\udf0f\udf10\udf13-\udf28\udf2a-\udf30\udf32\udf33\udf35-\udf39\udf3c-\udf44\udf47\udf48\udf4b-\udf4d\udf50\udf57\udf5d-\udf63\udf66-\udf6c\udf70-\udf74]"},{name:"Greek",bmp:"Ͱ-ͳ͵-ͷͺ-ͽͿ΄ΆΈ-ΊΌΎ-ΡΣ-ϡϰ-Ͽᴦ-ᴪᵝ-ᵡᵦ-ᵪᶿἀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾Ωꭥ",astral:"\ud800[\udd40-\udd8e\udda0]|\ud834[\ude00-\ude45]"},{name:"Gujarati",bmp:"ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿"},{name:"Gunjala_Gondi",astral:"\ud807[\udd60-\udd65\udd67\udd68\udd6a-\udd8e\udd90\udd91\udd93-\udd98\udda0-\udda9]"},{name:"Gurmukhi",bmp:"ਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶"},{name:"Han",bmp:"⺀-⺙⺛-⻳⼀-⿕々〇〡-〩〸-〻㐀-䶵一-鿯豈-舘並-龎",astral:"[\ud840-\ud868\ud86a-\ud86c\ud86f-\ud872\ud874-\ud879][\udc00-\udfff]|\ud869[\udc00-\uded6\udf00-\udfff]|\ud86d[\udc00-\udf34\udf40-\udfff]|\ud86e[\udc00-\udc1d\udc20-\udfff]|\ud873[\udc00-\udea1\udeb0-\udfff]|\ud87a[\udc00-\udfe0]|\ud87e[\udc00-\ude1d]"},{name:"Hangul",bmp:"ᄀ-ᇿ〮〯ㄱ-ㆎ㈀-㈞㉠-㉾ꥠ-ꥼ가-힣ힰ-ퟆퟋ-ퟻﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ"},{name:"Hanifi_Rohingya",astral:"\ud803[\udd00-\udd27\udd30-\udd39]"},{name:"Hanunoo",bmp:"ᜠ-᜴"},{name:"Hatran",astral:"\ud802[\udce0-\udcf2\udcf4\udcf5\udcfb-\udcff]"},{name:"Hebrew",bmp:"֑-ׇא-תׯ-״יִ-זּטּ-לּמּנּסּףּפּצּ-ﭏ"},{name:"Hiragana",bmp:"ぁ-ゖゝ-ゟ",astral:"\ud82c[\udc01-\udd1e]|🈀"},{name:"Imperial_Aramaic",astral:"\ud802[\udc40-\udc55\udc57-\udc5f]"},{name:"Inherited",bmp:"̀-ًͯ҅҆-ٰٕ॒॑᪰-᪾᳐-᳔᳒-᳢᳠-᳨᳭᳴᳸᳹᷀-᷹᷻-᷿‌‍⃐-〪⃰-゙゚〭︀-️︠-︭",astral:"\ud800[\uddfd\udee0]|𑌻|\ud834[\udd67-\udd69\udd7b-\udd82\udd85-\udd8b\uddaa-\uddad]|\udb40[\udd00-\uddef]"},{name:"Inscriptional_Pahlavi",astral:"\ud802[\udf60-\udf72\udf78-\udf7f]"},{name:"Inscriptional_Parthian",astral:"\ud802[\udf40-\udf55\udf58-\udf5f]"},{name:"Javanese",bmp:"ꦀ-꧍꧐-꧙꧞꧟"},{name:"Kaithi",astral:"\ud804[\udc80-\udcc1\udccd]"},{name:"Kannada",bmp:"ಀ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲ"},{name:"Katakana",bmp:"ァ-ヺヽ-ヿㇰ-ㇿ㋐-㋾㌀-㍗ｦ-ｯｱ-ﾝ",astral:"𛀀"},{name:"Kayah_Li",bmp:"꤀-꤭꤯"},{name:"Kharoshthi",astral:"\ud802[\ude00-\ude03\ude05\ude06\ude0c-\ude13\ude15-\ude17\ude19-\ude35\ude38-\ude3a\ude3f-\ude48\ude50-\ude58]"},{name:"Khmer",bmp:"ក-៝០-៩៰-៹᧠-᧿"},{name:"Khojki",astral:"\ud804[\ude00-\ude11\ude13-\ude3e]"},{name:"Khudawadi",astral:"\ud804[\udeb0-\udeea\udef0-\udef9]"},{name:"Lao",bmp:"ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟ"},{name:"Latin",bmp:"A-Za-zªºÀ-ÖØ-öø-ʸˠ-ˤᴀ-ᴥᴬ-ᵜᵢ-ᵥᵫ-ᵷᵹ-ᶾḀ-ỿⁱⁿₐ-ₜKÅℲⅎⅠ-ↈⱠ-ⱿꜢ-ꞇꞋ-ꞹꟷ-ꟿꬰ-ꭚꭜ-ꭤﬀ-ﬆＡ-Ｚａ-ｚ"},{name:"Lepcha",bmp:"ᰀ-᰷᰻-᱉ᱍ-ᱏ"},{name:"Limbu",bmp:"ᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-᥏"},{name:"Linear_A",astral:"\ud801[\ude00-\udf36\udf40-\udf55\udf60-\udf67]"},{name:"Linear_B",astral:"\ud800[\udc00-\udc0b\udc0d-\udc26\udc28-\udc3a\udc3c\udc3d\udc3f-\udc4d\udc50-\udc5d\udc80-\udcfa]"},{name:"Lisu",bmp:"ꓐ-꓿"},{name:"Lycian",astral:"\ud800[\ude80-\ude9c]"},{name:"Lydian",astral:"\ud802[\udd20-\udd39\udd3f]"},{name:"Mahajani",astral:"\ud804[\udd50-\udd76]"},{name:"Makasar",astral:"\ud807[\udee0-\udef8]"},{name:"Malayalam",bmp:"ഀ-ഃഅ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿ"},{name:"Mandaic",bmp:"ࡀ-࡛࡞"},{name:"Manichaean",astral:"\ud802[\udec0-\udee6\udeeb-\udef6]"},{name:"Marchen",astral:"\ud807[\udc70-\udc8f\udc92-\udca7\udca9-\udcb6]"},{name:"Masaram_Gondi",astral:"\ud807[\udd00-\udd06\udd08\udd09\udd0b-\udd36\udd3a\udd3c\udd3d\udd3f-\udd47\udd50-\udd59]"},{name:"Medefaidrin",astral:"\ud81b[\ude40-\ude9a]"},{name:"Meetei_Mayek",bmp:"ꫠ-꫶ꯀ-꯭꯰-꯹"},{name:"Mende_Kikakui",astral:"\ud83a[\udc00-\udcc4\udcc7-\udcd6]"},{name:"Meroitic_Cursive",astral:"\ud802[\udda0-\uddb7\uddbc-\uddcf\uddd2-\uddff]"},{name:"Meroitic_Hieroglyphs",astral:"\ud802[\udd80-\udd9f]"},{name:"Miao",astral:"\ud81b[\udf00-\udf44\udf50-\udf7e\udf8f-\udf9f]"},{name:"Modi",astral:"\ud805[\ude00-\ude44\ude50-\ude59]"},{name:"Mongolian",bmp:"᠀᠁᠄᠆-᠎᠐-᠙ᠠ-ᡸᢀ-ᢪ",astral:"\ud805[\ude60-\ude6c]"},{name:"Mro",astral:"\ud81a[\ude40-\ude5e\ude60-\ude69\ude6e\ude6f]"},{name:"Multani",astral:"\ud804[\ude80-\ude86\ude88\ude8a-\ude8d\ude8f-\ude9d\ude9f-\udea9]"},{name:"Myanmar",bmp:"က-႟ꧠ-ꧾꩠ-ꩿ"},{name:"Nabataean",astral:"\ud802[\udc80-\udc9e\udca7-\udcaf]"},{name:"New_Tai_Lue",bmp:"ᦀ-ᦫᦰ-ᧉ᧐-᧚᧞᧟"},{name:"Newa",astral:"\ud805[\udc00-\udc59\udc5b\udc5d\udc5e]"},{name:"Nko",bmp:"߀-ߺ߽-߿"},{name:"Nushu",astral:"𖿡|\ud82c[\udd70-\udefb]"},{name:"Ogham",bmp:" -᚜"},{name:"Ol_Chiki",bmp:"᱐-᱿"},{name:"Old_Hungarian",astral:"\ud803[\udc80-\udcb2\udcc0-\udcf2\udcfa-\udcff]"},{name:"Old_Italic",astral:"\ud800[\udf00-\udf23\udf2d-\udf2f]"},{name:"Old_North_Arabian",astral:"\ud802[\ude80-\ude9f]"},{name:"Old_Permic",astral:"\ud800[\udf50-\udf7a]"},{name:"Old_Persian",astral:"\ud800[\udfa0-\udfc3\udfc8-\udfd5]"},{name:"Old_Sogdian",astral:"\ud803[\udf00-\udf27]"},{name:"Old_South_Arabian",astral:"\ud802[\ude60-\ude7f]"},{name:"Old_Turkic",astral:"\ud803[\udc00-\udc48]"},{name:"Oriya",bmp:"ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୷"},{name:"Osage",astral:"\ud801[\udcb0-\udcd3\udcd8-\udcfb]"},{name:"Osmanya",astral:"\ud801[\udc80-\udc9d\udca0-\udca9]"},{name:"Pahawh_Hmong",astral:"\ud81a[\udf00-\udf45\udf50-\udf59\udf5b-\udf61\udf63-\udf77\udf7d-\udf8f]"},{name:"Palmyrene",astral:"\ud802[\udc60-\udc7f]"},{name:"Pau_Cin_Hau",astral:"\ud806[\udec0-\udef8]"},{name:"Phags_Pa",bmp:"ꡀ-꡷"},{name:"Phoenician",astral:"\ud802[\udd00-\udd1b\udd1f]"},{name:"Psalter_Pahlavi",astral:"\ud802[\udf80-\udf91\udf99-\udf9c\udfa9-\udfaf]"},{name:"Rejang",bmp:"ꤰ-꥓꥟"},{name:"Runic",bmp:"ᚠ-ᛪᛮ-ᛸ"},{name:"Samaritan",bmp:"ࠀ-࠭࠰-࠾"},{name:"Saurashtra",bmp:"ꢀ-ꣅ꣎-꣙"},{name:"Sharada",astral:"\ud804[\udd80-\uddcd\uddd0-\udddf]"},{name:"Shavian",astral:"\ud801[\udc50-\udc7f]"},{name:"Siddham",astral:"\ud805[\udd80-\uddb5\uddb8-\udddd]"},{name:"SignWriting",astral:"\ud836[\udc00-\ude8b\ude9b-\ude9f\udea1-\udeaf]"},{name:"Sinhala",bmp:"ංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴",astral:"\ud804[\udde1-\uddf4]"},{name:"Sogdian",astral:"\ud803[\udf30-\udf59]"},{name:"Sora_Sompeng",astral:"\ud804[\udcd0-\udce8\udcf0-\udcf9]"},{name:"Soyombo",astral:"\ud806[\ude50-\ude83\ude86-\udea2]"},{name:"Sundanese",bmp:"ᮀ-ᮿ᳀-᳇"},{name:"Syloti_Nagri",bmp:"ꠀ-꠫"},{name:"Syriac",bmp:"܀-܍܏-݊ݍ-ݏࡠ-ࡪ"},{name:"Tagalog",bmp:"ᜀ-ᜌᜎ-᜔"},{name:"Tagbanwa",bmp:"ᝠ-ᝬᝮ-ᝰᝲᝳ"},{name:"Tai_Le",bmp:"ᥐ-ᥭᥰ-ᥴ"},{name:"Tai_Tham",bmp:"ᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭"},{name:"Tai_Viet",bmp:"ꪀ-ꫂꫛ-꫟"},{name:"Takri",astral:"\ud805[\ude80-\udeb7\udec0-\udec9]"},{name:"Tamil",bmp:"ஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺"},{name:"Tangut",astral:"𖿠|[\ud81c-\ud820][\udc00-\udfff]|\ud821[\udc00-\udff1]|\ud822[\udc00-\udef2]"},{name:"Telugu",bmp:"ఀ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-్ౕౖౘ-ౚౠ-ౣ౦-౯౸-౿"},{name:"Thaana",bmp:"ހ-ޱ"},{name:"Thai",bmp:"ก-ฺเ-๛"},{name:"Tibetan",bmp:"ༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿔࿙࿚"},{name:"Tifinagh",bmp:"ⴰ-ⵧⵯ⵰⵿"},{name:"Tirhuta",astral:"\ud805[\udc80-\udcc7\udcd0-\udcd9]"},{name:"Ugaritic",astral:"\ud800[\udf80-\udf9d\udf9f]"},{name:"Vai",bmp:"ꔀ-ꘫ"},{name:"Warang_Citi",astral:"\ud806[\udca0-\udcf2\udcff]"},{name:"Yi",bmp:"ꀀ-ꒌ꒐-꓆"},{name:"Zanabazar_Square",astral:"\ud806[\ude00-\ude47]"}],unicodeScripts=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var u,t=(u=scripts)&&u.__esModule?u:{default:u};r.default=function(e){if(!e.addUnicodeData)throw new ReferenceError("Unicode Base must be loaded before Unicode Scripts");e.addUnicodeData(t.default)},e.exports=r.default});unwrapExports(unicodeScripts);var lib=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var u=c(xregexp),t=c(build),n=c(matchrecursive),a=c(unicodeBase),d=c(unicodeBlocks),i=c(unicodeCategories),s=c(unicodeProperties),o=c(unicodeScripts);function c(e){return e&&e.__esModule?e:{default:e}}t.default(u.default),n.default(u.default),a.default(u.default),d.default(u.default),i.default(u.default),s.default(u.default),o.default(u.default);var l=u.default;r.default=l,e.exports=r.default});unwrapExports(lib);var utilities=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.FormatUtility=class{static preProcess(e,r=!0){return r&&(e=e.toLowerCase()),e.replace(/０/g,"0").replace(/１/g,"1").replace(/２/g,"2").replace(/３/g,"3").replace(/４/g,"4").replace(/５/g,"5").replace(/６/g,"6").replace(/７/g,"7").replace(/８/g,"8").replace(/９/g,"9").replace(/：/g,":").replace(/－/g,"-").replace(/，/g,",").replace(/／/g,"/").replace(/Ｇ/g,"G").replace(/Ｍ/g,"M").replace(/Ｔ/g,"T").replace(/Ｋ/g,"K").replace(/ｋ/g,"k").replace(/．/g,".").replace(/（/g,"(").replace(/）/g,")")}};class u{constructor(e,r,u,t){this.index=e,this.length=r,this.value=u,this.innerGroups=t}groups(e){return this.innerGroups[e]?this.innerGroups[e]:{value:"",index:0,length:0,captures:[]}}}r.Match=u;class t{static getMatches(e,r){if(!e)return[];let u=e.xregexp.source;if(!u.includes("(?<nlb__"))return this.getMatchesSimple(e,r);let n=new Array,a=new Array,d=e.flags,i=0,s=u.indexOf("(?<nlb__",0);for(;s>=0;){i=this.getClosePos(u,s);let e=lib(u.substring(s,i+1),d),r=t.getNextRegex(u,s);e.nextRegex=r?lib(r,d):null,a.push(e),s=(u=u.substr(0,s)+u.substr(i+1)).indexOf("(?<nlb__",0)}let o=lib(u,d);return t.getMatchesSimple(o,r).forEach(e=>{let u=!0;a.forEach(n=>{t.getMatchesSimple(n,r).forEach(a=>{let d=a.index+a.length,i=n.nextRegex;if(e.index===d){if(!i)return void(u=!1);{let n=t.getFirstMatchIndex(i,r.substring(a.index));if(n.matched&&(n.index===a.length||r.includes(n.value+e.value)))return void(u=!1)}}if(a.value.includes(e.value)){t.getMatchesSimple(n,r.substring(0,e.index)).forEach(t=>{r.includes(t.value+e.value)&&(u=!1)})}})}),u&&n.push(e)}),n}static getMatchesSimple(e,r){let t=n.removeDiacriticsFromWordBoundaries(r),a=new Array;return lib.forEach(t,e,e=>{let t=[],d={},i="";Object.keys(e).forEach(u=>{if(!u.includes("__"))return;if(u.startsWith("plb")&&e[u]){if(0!==e[0].indexOf(e[u])&&!n.isNullOrEmpty(i)){let t=e.index+e[0].indexOf(e[u]),n=e[u].length,a=r.substr(t,n);d[i].value=d[i].value+a}return void t.push({key:u,value:e[u]})}if(u.startsWith("nlb"))return;let a=u.substr(0,u.lastIndexOf("__"));if(i=a,d[a]||(d[a]={value:"",index:0,length:0,captures:[]}),e[u]){let t=e.index+e[0].indexOf(e[u]),n=e[u].length,i=r.substr(t,n);d[a].index=t,d[a].length=n,d[a].value=i,d[a].captures.push(i)}});let s=e[0],o=e.index,c=s.length;t&&t.length>0&&0===s.indexOf(t[0].value)?(s=r.substr(o,c).substr(t[0].value.length),o+=t[0].value.length,c-=t[0].value.length):s=r.substr(o,c),a.push(new u(o,c,s,d))}),a}static getSafeRegExp(e,r){let u=this.sanitizeGroups(e);return lib(u,r||"gis")}static getFirstMatchIndex(e,r){let u=t.getMatches(e,r);return u.length?{matched:!0,index:u[0].index,value:u[0].value}:{matched:!1,index:-1,value:null}}static split(e,r){return lib.split(r,e)}static isMatch(e,r){return!n.isNullOrEmpty(r)&&this.getMatches(e,r).length>0}static sanitizeGroups(e){let r=0,u=lib.replace(e,this.matchGroup,(e,u)=>e.replace(u,`${u}__${r++}`));return r=0,u=lib.replace(u,this.matchPositiveLookbehind,()=>`(?<plb__${r++}>`),r=0,u=lib.replace(u,this.matchNegativeLookbehind,()=>`(?<nlb__${r++}>`)}static getNextRegex(e,r){r=t.getClosePos(e,r)+1;let u=t.getClosePos(e,r);return"("!==e[r]&&u--,r===u?null:e.substring(r,u+1)}static getClosePos(e,r){let u=1,t=r;for(;u>0&&t<e.length;){let r=e[++t];"("===r?u++:")"===r&&u--}return t}}t.matchGroup=lib(String.raw`\?<(?<name>\w+)>`,"gis"),t.matchPositiveLookbehind=lib(String.raw`\(\?<=`,"gis"),t.matchNegativeLookbehind=lib(String.raw`\(\?<!`,"gis"),r.RegExpUtility=t;class n{static isNullOrWhitespace(e){return!e||!e.trim()}static isNullOrEmpty(e){return!e||""===e}static isWhitespace(e){return e&&""!==e&&!e.trim()}static insertInto(e,r,u){return e.substr(0,u)+r+e.substr(u)}static removeDiacriticsFromWordBoundaries(e){return e.split(" ").map(e=>{let r=e.length;if(0===r)return e;let u=n.removeDiacritics(e.substring(0,1));if(1===r)return u;let t=r>1?n.removeDiacritics(e.substring(r-1)):"";return u+e.substring(1,r-1)+t}).join(" ")}static removeDiacritics(e){let r=n.diacriticsRemovalMap[e];return r||e}}n.diacriticsRemovalMap={"Ⓐ":"A","Ａ":"A","À":"A","Á":"A","Â":"A","Ầ":"A","Ấ":"A","Ẫ":"A","Ẩ":"A","Ã":"A","Ā":"A","Ă":"A","Ằ":"A","Ắ":"A","Ẵ":"A","Ẳ":"A","Ȧ":"A","Ǡ":"A","Ä":"A","Ǟ":"A","Ả":"A","Å":"A","Ǻ":"A","Ǎ":"A","Ȁ":"A","Ȃ":"A","Ạ":"A","Ậ":"A","Ặ":"A","Ḁ":"A","Ą":"A","Ⱥ":"A","Ɐ":"A","Ⓑ":"B","Ｂ":"B","Ḃ":"B","Ḅ":"B","Ḇ":"B","Ƀ":"B","Ƃ":"B","Ɓ":"B","Ⓒ":"C","Ｃ":"C","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","Ç":"C","Ḉ":"C","Ƈ":"C","Ȼ":"C","Ꜿ":"C","Ⓓ":"D","Ｄ":"D","Ḋ":"D","Ď":"D","Ḍ":"D","Ḑ":"D","Ḓ":"D","Ḏ":"D","Đ":"D","Ƌ":"D","Ɗ":"D","Ɖ":"D","Ꝺ":"D","Ⓔ":"E","Ｅ":"E","È":"E","É":"E","Ê":"E","Ề":"E","Ế":"E","Ễ":"E","Ể":"E","Ẽ":"E","Ē":"E","Ḕ":"E","Ḗ":"E","Ĕ":"E","Ė":"E","Ë":"E","Ẻ":"E","Ě":"E","Ȅ":"E","Ȇ":"E","Ẹ":"E","Ệ":"E","Ȩ":"E","Ḝ":"E","Ę":"E","Ḙ":"E","Ḛ":"E","Ɛ":"E","Ǝ":"E","Ⓕ":"F","Ｆ":"F","Ḟ":"F","Ƒ":"F","Ꝼ":"F","Ⓖ":"G","Ｇ":"G","Ǵ":"G","Ĝ":"G","Ḡ":"G","Ğ":"G","Ġ":"G","Ǧ":"G","Ģ":"G","Ǥ":"G","Ɠ":"G","Ꞡ":"G","Ᵹ":"G","Ꝿ":"G","Ⓗ":"H","Ｈ":"H","Ĥ":"H","Ḣ":"H","Ḧ":"H","Ȟ":"H","Ḥ":"H","Ḩ":"H","Ḫ":"H","Ħ":"H","Ⱨ":"H","Ⱶ":"H","Ɥ":"H","Ⓘ":"I","Ｉ":"I","Ì":"I","Í":"I","Î":"I","Ĩ":"I","Ī":"I","Ĭ":"I","İ":"I","Ï":"I","Ḯ":"I","Ỉ":"I","Ǐ":"I","Ȉ":"I","Ȋ":"I","Ị":"I","Į":"I","Ḭ":"I","Ɨ":"I","Ⓙ":"J","Ｊ":"J","Ĵ":"J","Ɉ":"J","Ⓚ":"K","Ｋ":"K","Ḱ":"K","Ǩ":"K","Ḳ":"K","Ķ":"K","Ḵ":"K","Ƙ":"K","Ⱪ":"K","Ꝁ":"K","Ꝃ":"K","Ꝅ":"K","Ꞣ":"K","Ⓛ":"L","Ｌ":"L","Ŀ":"L","Ĺ":"L","Ľ":"L","Ḷ":"L","Ḹ":"L","Ļ":"L","Ḽ":"L","Ḻ":"L","Ł":"L","Ƚ":"L","Ɫ":"L","Ⱡ":"L","Ꝉ":"L","Ꝇ":"L","Ꞁ":"L","Ⓜ":"M","Ｍ":"M","Ḿ":"M","Ṁ":"M","Ṃ":"M","Ɱ":"M","Ɯ":"M","Ⓝ":"N","Ｎ":"N","Ǹ":"N","Ń":"N","Ñ":"N","Ṅ":"N","Ň":"N","Ṇ":"N","Ņ":"N","Ṋ":"N","Ṉ":"N","Ƞ":"N","Ɲ":"N","Ꞑ":"N","Ꞥ":"N","Ⓞ":"O","Ｏ":"O","Ò":"O","Ó":"O","Ô":"O","Ồ":"O","Ố":"O","Ỗ":"O","Ổ":"O","Õ":"O","Ṍ":"O","Ȭ":"O","Ṏ":"O","Ō":"O","Ṑ":"O","Ṓ":"O","Ŏ":"O","Ȯ":"O","Ȱ":"O","Ö":"O","Ȫ":"O","Ỏ":"O","Ő":"O","Ǒ":"O","Ȍ":"O","Ȏ":"O","Ơ":"O","Ờ":"O","Ớ":"O","Ỡ":"O","Ở":"O","Ợ":"O","Ọ":"O","Ộ":"O","Ǫ":"O","Ǭ":"O","Ø":"O","Ǿ":"O","Ɔ":"O","Ɵ":"O","Ꝋ":"O","Ꝍ":"O","Ⓟ":"P","Ｐ":"P","Ṕ":"P","Ṗ":"P","Ƥ":"P","Ᵽ":"P","Ꝑ":"P","Ꝓ":"P","Ꝕ":"P","Ⓠ":"Q","Ｑ":"Q","Ꝗ":"Q","Ꝙ":"Q","Ɋ":"Q","Ⓡ":"R","Ｒ":"R","Ŕ":"R","Ṙ":"R","Ř":"R","Ȑ":"R","Ȓ":"R","Ṛ":"R","Ṝ":"R","Ŗ":"R","Ṟ":"R","Ɍ":"R","Ɽ":"R","Ꝛ":"R","Ꞧ":"R","Ꞃ":"R","Ⓢ":"S","Ｓ":"S","ẞ":"S","Ś":"S","Ṥ":"S","Ŝ":"S","Ṡ":"S","Š":"S","Ṧ":"S","Ṣ":"S","Ṩ":"S","Ș":"S","Ş":"S","Ȿ":"S","Ꞩ":"S","Ꞅ":"S","Ⓣ":"T","Ｔ":"T","Ṫ":"T","Ť":"T","Ṭ":"T","Ț":"T","Ţ":"T","Ṱ":"T","Ṯ":"T","Ŧ":"T","Ƭ":"T","Ʈ":"T","Ⱦ":"T","Ꞇ":"T","Ⓤ":"U","Ｕ":"U","Ù":"U","Ú":"U","Û":"U","Ũ":"U","Ṹ":"U","Ū":"U","Ṻ":"U","Ŭ":"U","Ü":"U","Ǜ":"U","Ǘ":"U","Ǖ":"U","Ǚ":"U","Ủ":"U","Ů":"U","Ű":"U","Ǔ":"U","Ȕ":"U","Ȗ":"U","Ư":"U","Ừ":"U","Ứ":"U","Ữ":"U","Ử":"U","Ự":"U","Ụ":"U","Ṳ":"U","Ų":"U","Ṷ":"U","Ṵ":"U","Ʉ":"U","Ⓥ":"V","Ｖ":"V","Ṽ":"V","Ṿ":"V","Ʋ":"V","Ꝟ":"V","Ʌ":"V","Ⓦ":"W","Ｗ":"W","Ẁ":"W","Ẃ":"W","Ŵ":"W","Ẇ":"W","Ẅ":"W","Ẉ":"W","Ⱳ":"W","Ⓧ":"X","Ｘ":"X","Ẋ":"X","Ẍ":"X","Ⓨ":"Y","Ｙ":"Y","Ỳ":"Y","Ý":"Y","Ŷ":"Y","Ỹ":"Y","Ȳ":"Y","Ẏ":"Y","Ÿ":"Y","Ỷ":"Y","Ỵ":"Y","Ƴ":"Y","Ɏ":"Y","Ỿ":"Y","Ⓩ":"Z","Ｚ":"Z","Ź":"Z","Ẑ":"Z","Ż":"Z","Ž":"Z","Ẓ":"Z","Ẕ":"Z","Ƶ":"Z","Ȥ":"Z","Ɀ":"Z","Ⱬ":"Z","Ꝣ":"Z","ⓐ":"a","ａ":"a","ẚ":"a","à":"a","á":"a","â":"a","ầ":"a","ấ":"a","ẫ":"a","ẩ":"a","ã":"a","ā":"a","ă":"a","ằ":"a","ắ":"a","ẵ":"a","ẳ":"a","ȧ":"a","ǡ":"a","ä":"a","ǟ":"a","ả":"a","å":"a","ǻ":"a","ǎ":"a","ȁ":"a","ȃ":"a","ạ":"a","ậ":"a","ặ":"a","ḁ":"a","ą":"a","ⱥ":"a","ɐ":"a","ⓑ":"b","ｂ":"b","ḃ":"b","ḅ":"b","ḇ":"b","ƀ":"b","ƃ":"b","ɓ":"b","ⓒ":"c","ｃ":"c","ć":"c","ĉ":"c","ċ":"c","č":"c","ç":"c","ḉ":"c","ƈ":"c","ȼ":"c","ꜿ":"c","ↄ":"c","ⓓ":"d","ｄ":"d","ḋ":"d","ď":"d","ḍ":"d","ḑ":"d","ḓ":"d","ḏ":"d","đ":"d","ƌ":"d","ɖ":"d","ɗ":"d","ꝺ":"d","ⓔ":"e","ｅ":"e","è":"e","é":"e","ê":"e","ề":"e","ế":"e","ễ":"e","ể":"e","ẽ":"e","ē":"e","ḕ":"e","ḗ":"e","ĕ":"e","ė":"e","ë":"e","ẻ":"e","ě":"e","ȅ":"e","ȇ":"e","ẹ":"e","ệ":"e","ȩ":"e","ḝ":"e","ę":"e","ḙ":"e","ḛ":"e","ɇ":"e","ɛ":"e","ǝ":"e","ⓕ":"f","ｆ":"f","ḟ":"f","ƒ":"f","ꝼ":"f","ⓖ":"g","ｇ":"g","ǵ":"g","ĝ":"g","ḡ":"g","ğ":"g","ġ":"g","ǧ":"g","ģ":"g","ǥ":"g","ɠ":"g","ꞡ":"g","ᵹ":"g","ꝿ":"g","ⓗ":"h","ｈ":"h","ĥ":"h","ḣ":"h","ḧ":"h","ȟ":"h","ḥ":"h","ḩ":"h","ḫ":"h","ẖ":"h","ħ":"h","ⱨ":"h","ⱶ":"h","ɥ":"h","ⓘ":"i","ｉ":"i","ì":"i","í":"i","î":"i","ĩ":"i","ī":"i","ĭ":"i","ï":"i","ḯ":"i","ỉ":"i","ǐ":"i","ȉ":"i","ȋ":"i","ị":"i","į":"i","ḭ":"i","ɨ":"i","ı":"i","ⓙ":"j","ｊ":"j","ĵ":"j","ǰ":"j","ɉ":"j","ⓚ":"k","ｋ":"k","ḱ":"k","ǩ":"k","ḳ":"k","ķ":"k","ḵ":"k","ƙ":"k","ⱪ":"k","ꝁ":"k","ꝃ":"k","ꝅ":"k","ꞣ":"k","ⓛ":"l","ｌ":"l","ŀ":"l","ĺ":"l","ľ":"l","ḷ":"l","ḹ":"l","ļ":"l","ḽ":"l","ḻ":"l","ſ":"l","ł":"l","ƚ":"l","ɫ":"l","ⱡ":"l","ꝉ":"l","ꞁ":"l","ꝇ":"l","ⓜ":"m","ｍ":"m","ḿ":"m","ṁ":"m","ṃ":"m","ɱ":"m","ɯ":"m","ⓝ":"n","ｎ":"n","ǹ":"n","ń":"n","ñ":"n","ṅ":"n","ň":"n","ṇ":"n","ņ":"n","ṋ":"n","ṉ":"n","ƞ":"n","ɲ":"n","ŉ":"n","ꞑ":"n","ꞥ":"n","ⓞ":"o","ｏ":"o","ò":"o","ó":"o","ô":"o","ồ":"o","ố":"o","ỗ":"o","ổ":"o","õ":"o","ṍ":"o","ȭ":"o","ṏ":"o","ō":"o","ṑ":"o","ṓ":"o","ŏ":"o","ȯ":"o","ȱ":"o","ö":"o","ȫ":"o","ỏ":"o","ő":"o","ǒ":"o","ȍ":"o","ȏ":"o","ơ":"o","ờ":"o","ớ":"o","ỡ":"o","ở":"o","ợ":"o","ọ":"o","ộ":"o","ǫ":"o","ǭ":"o","ø":"o","ǿ":"o","ɔ":"o","ꝋ":"o","ꝍ":"o","ɵ":"o","ⓟ":"p","ｐ":"p","ṕ":"p","ṗ":"p","ƥ":"p","ᵽ":"p","ꝑ":"p","ꝓ":"p","ꝕ":"p","ⓠ":"q","ｑ":"q","ɋ":"q","ꝗ":"q","ꝙ":"q","ⓡ":"r","ｒ":"r","ŕ":"r","ṙ":"r","ř":"r","ȑ":"r","ȓ":"r","ṛ":"r","ṝ":"r","ŗ":"r","ṟ":"r","ɍ":"r","ɽ":"r","ꝛ":"r","ꞧ":"r","ꞃ":"r","ⓢ":"s","ｓ":"s","ß":"s","ś":"s","ṥ":"s","ŝ":"s","ṡ":"s","š":"s","ṧ":"s","ṣ":"s","ṩ":"s","ș":"s","ş":"s","ȿ":"s","ꞩ":"s","ꞅ":"s","ẛ":"s","ⓣ":"t","ｔ":"t","ṫ":"t","ẗ":"t","ť":"t","ṭ":"t","ț":"t","ţ":"t","ṱ":"t","ṯ":"t","ŧ":"t","ƭ":"t","ʈ":"t","ⱦ":"t","ꞇ":"t","ⓤ":"u","ｕ":"u","ù":"u","ú":"u","û":"u","ũ":"u","ṹ":"u","ū":"u","ṻ":"u","ŭ":"u","ü":"u","ǜ":"u","ǘ":"u","ǖ":"u","ǚ":"u","ủ":"u","ů":"u","ű":"u","ǔ":"u","ȕ":"u","ȗ":"u","ư":"u","ừ":"u","ứ":"u","ữ":"u","ử":"u","ự":"u","ụ":"u","ṳ":"u","ų":"u","ṷ":"u","ṵ":"u","ʉ":"u","ⓥ":"v","ｖ":"v","ṽ":"v","ṿ":"v","ʋ":"v","ꝟ":"v","ʌ":"v","ⓦ":"w","ｗ":"w","ẁ":"w","ẃ":"w","ŵ":"w","ẇ":"w","ẅ":"w","ẘ":"w","ẉ":"w","ⱳ":"w","ⓧ":"x","ｘ":"x","ẋ":"x","ẍ":"x","ⓨ":"y","ｙ":"y","ỳ":"y","ý":"y","ŷ":"y","ỹ":"y","ȳ":"y","ẏ":"y","ÿ":"y","ỷ":"y","ẙ":"y","ỵ":"y","ƴ":"y","ɏ":"y","ỿ":"y","ⓩ":"z","ｚ":"z","ź":"z","ẑ":"z","ż":"z","ž":"z","ẓ":"z","ẕ":"z","ƶ":"z","ȥ":"z","ɀ":"z","ⱬ":"z","ꝣ":"z"},r.StringUtility=n});unwrapExports(utilities);var models=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});class u{}r.ModelResult=u;r.ExtendedModelResult=class extends u{constructor(e=null){super(),e&&(this.text=e.text,this.start=e.start,this.end=e.end,this.typeName=e.typeName,this.resolution=e.resolution)}};class t{constructor(e,r,u=null){this.culture=e?e.toLowerCase():null,this.modelType=r,this.options=u}toString(){return JSON.stringify(this)}static fromString(e){return JSON.parse(e)}}class n{constructor(){this.modelFactories=new Map}getModel(e,r,u,t){let a=this.tryGetModel(e,r,t);if(!a.containsModel&&u&&(a=this.tryGetModel(e,n.fallbackCulture,t)),a.containsModel)return a.model;throw new Error(`Could not find Model with the specified configuration: ${r},${e}`)}tryGetModel(e,r,u){r=culture.Culture.mapToNearestLanguage(r);let t=this.getModelFromCache(e,r,u);if(t)return{containsModel:!0,model:t};let n=this.generateKey(e,r);if(this.modelFactories.has(n)){let t=this.modelFactories.get(n)(u);return this.registerModelInCache(e,r,u,t),{containsModel:!0,model:t}}return{containsModel:!1}}registerModel(e,r,u){let t=this.generateKey(e,r);if(this.modelFactories.has(t))throw new Error(`${r}-${e} has already been registered.`);this.modelFactories.set(t,u)}initializeModels(e,r){this.modelFactories.forEach((r,u)=>{let n=t.fromString(u);(utilities.StringUtility.isNullOrEmpty(e)||n.culture===e)&&this.tryGetModel(n.modelType,n.culture,n.options)})}generateKey(e,r){return new t(r,e).toString()}getModelFromCache(e,r,u){let t=this.generateCacheKey(e,r,u);return n.cache.get(t)}registerModelInCache(e,r,u,t){let a=this.generateCacheKey(e,r,u);n.cache.set(a,t)}generateCacheKey(e,r,u){return new t(r,e,u).toString()}}n.fallbackCulture=culture.Culture.English,n.cache=new Map,r.ModelFactory=n});unwrapExports(models);var recognizer=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.Recognizer=class{constructor(e,r,u){if(this.modelFactory=new models.ModelFactory,!this.IsValidOptions(r))throw new Error(`${r} is not a valid options value.`);this.TargetCulture=e,this.Options=r,this.InitializeConfiguration(),u||this.initializeModels(e,r)}getModel(e,r,u){return this.modelFactory.getModel(e,r||this.TargetCulture,u,this.Options)}registerModel(e,r,u){this.modelFactory.registerModel(e,r,u)}initializeModels(e,r){this.modelFactory.initializeModels(e,r)}}});unwrapExports(recognizer);var extractors=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.ExtractResult=class{static isOverlap(e,r){return!(e.start>=r.start+r.length||r.start>=e.start+e.length)}static isCover(e,r){return r.start<e.start&&r.start+r.length>=e.start+e.length||r.start<=e.start&&r.start+r.length>e.start+e.length}static getFromText(e){return{start:0,length:e.length,text:e,type:"custom"}}}});unwrapExports(extractors);var parsers=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.ParseResult=class extends extractors.ExtractResult{constructor(e){super(),e&&(this.length=e.length,this.start=e.start,this.data=e.data,this.text=e.text,this.type=e.type),this.resolutionStr=""}}});unwrapExports(parsers);var recognizersText=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.Culture=culture.Culture,r.CultureInfo=culture.CultureInfo,r.ModelResult=models.ModelResult,r.ModelFactory=models.ModelFactory,r.Recognizer=recognizer.Recognizer,r.ExtractResult=extractors.ExtractResult,r.ParseResult=parsers.ParseResult,r.FormatUtility=utilities.FormatUtility,r.StringUtility=utilities.StringUtility,r.Match=utilities.Match,r.RegExpUtility=utilities.RegExpUtility});unwrapExports(recognizersText);var INFINITY=1/0,symbolTag="[object Symbol]",reTrimEnd=/\s+$/,rsAstralRange="\\ud800-\\udfff",rsComboMarksRange="\\u0300-\\u036f\\ufe20-\\ufe23",rsComboSymbolsRange="\\u20d0-\\u20f0",rsVarRange="\\ufe0e\\ufe0f",rsAstral="["+rsAstralRange+"]",rsCombo="["+rsComboMarksRange+rsComboSymbolsRange+"]",rsFitz="\\ud83c[\\udffb-\\udfff]",rsModifier="(?:"+rsCombo+"|"+rsFitz+")",rsNonAstral="[^"+rsAstralRange+"]",rsRegional="(?:\\ud83c[\\udde6-\\uddff]){2}",rsSurrPair="[\\ud800-\\udbff][\\udc00-\\udfff]",rsZWJ="\\u200d",reOptMod=rsModifier+"?",rsOptVar="["+rsVarRange+"]?",rsOptJoin="(?:"+rsZWJ+"(?:"+[rsNonAstral,rsRegional,rsSurrPair].join("|")+")"+rsOptVar+reOptMod+")*",rsSeq=rsOptVar+reOptMod+rsOptJoin,rsSymbol="(?:"+[rsNonAstral+rsCombo+"?",rsCombo,rsRegional,rsSurrPair,rsAstral].join("|")+")",reUnicode=RegExp(rsFitz+"(?="+rsFitz+")|"+rsSymbol+rsSeq,"g"),reHasUnicode=RegExp("["+rsZWJ+rsAstralRange+rsComboMarksRange+rsComboSymbolsRange+rsVarRange+"]"),freeGlobal="object"==typeof commonjsGlobal&&commonjsGlobal&&commonjsGlobal.Object===Object&&commonjsGlobal,freeSelf="object"==typeof self&&self&&self.Object===Object&&self,root=freeGlobal||freeSelf||Function("return this")();function asciiToArray(e){return e.split("")}function baseFindIndex(e,r,u,t){for(var n=e.length,a=u+(t?1:-1);t?a--:++a<n;)if(r(e[a],a,e))return a;return-1}function baseIndexOf(e,r,u){if(r!=r)return baseFindIndex(e,baseIsNaN,u);for(var t=u-1,n=e.length;++t<n;)if(e[t]===r)return t;return-1}function baseIsNaN(e){return e!=e}function charsEndIndex(e,r){for(var u=e.length;u--&&baseIndexOf(r,e[u],0)>-1;);return u}function hasUnicode(e){return reHasUnicode.test(e)}function stringToArray(e){return hasUnicode(e)?unicodeToArray(e):asciiToArray(e)}function unicodeToArray(e){return e.match(reUnicode)||[]}var objectProto=Object.prototype,objectToString=objectProto.toString,Symbol$1=root.Symbol,symbolProto=Symbol$1?Symbol$1.prototype:void 0,symbolToString=symbolProto?symbolProto.toString:void 0;function baseSlice(e,r,u){var t=-1,n=e.length;r<0&&(r=-r>n?0:n+r),(u=u>n?n:u)<0&&(u+=n),n=r>u?0:u-r>>>0,r>>>=0;for(var a=Array(n);++t<n;)a[t]=e[t+r];return a}function baseToString(e){if("string"==typeof e)return e;if(isSymbol(e))return symbolToString?symbolToString.call(e):"";var r=e+"";return"0"==r&&1/e==-INFINITY?"-0":r}function castSlice(e,r,u){var t=e.length;return u=void 0===u?t:u,!r&&u>=t?e:baseSlice(e,r,u)}function isObjectLike(e){return!!e&&"object"==typeof e}function isSymbol(e){return"symbol"==typeof e||isObjectLike(e)&&objectToString.call(e)==symbolTag}function toString(e){return null==e?"":baseToString(e)}function trimEnd(e,r,u){if((e=toString(e))&&(u||void 0===r))return e.replace(reTrimEnd,"");if(!e||!(r=baseToString(r)))return e;var t=stringToArray(e);return castSlice(t,0,charsEndIndex(t,stringToArray(r))+1).join("")}var lodash_trimend=trimEnd,bignumber=createCommonjsModule(function(e){!function(r){"use strict";var u,t=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,n=Math.ceil,a=Math.floor,d="[BigNumber Error] ",i=d+"Number primitive has more than 15 significant digits: ",s=1e14,o=14,c=9007199254740991,l=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],g=1e7,m=1e9;function f(e){var r=0|e;return e>0||e===r?r:r-1}function x(e){for(var r,u,t=1,n=e.length,a=e[0]+"";t<n;){for(r=e[t++]+"",u=o-r.length;u--;r="0"+r);a+=r}for(n=a.length;48===a.charCodeAt(--n););return a.slice(0,n+1||1)}function p(e,r){var u,t,n=e.c,a=r.c,d=e.s,i=r.s,s=e.e,o=r.e;if(!d||!i)return null;if(u=n&&!n[0],t=a&&!a[0],u||t)return u?t?0:-i:d;if(d!=i)return d;if(u=d<0,t=s==o,!n||!a)return t?0:!n^u?1:-1;if(!t)return s>o^u?1:-1;for(i=(s=n.length)<(o=a.length)?s:o,d=0;d<i;d++)if(n[d]!=a[d])return n[d]>a[d]^u?1:-1;return s==o?0:s>o^u?1:-1}function b(e,r,u,t){if(e<r||e>u||e!==(e<0?n(e):a(e)))throw Error(d+(t||"Argument")+("number"==typeof e?e<r||e>u?" out of range: ":" not an integer: ":" not a primitive number: ")+e)}function h(e){return"[object Array]"==Object.prototype.toString.call(e)}function N(e){var r=e.c.length-1;return f(e.e/o)==r&&e.c[r]%2!=0}function R(e,r){return(e.length>1?e.charAt(0)+"."+e.slice(1):e)+(r<0?"e":"e+")+r}function E(e,r,u){var t,n;if(r<0){for(n=u+".";++r;n+=u);e=n+e}else if(++r>(t=e.length)){for(n=u,r-=t;--r;n+=u);e+=n}else r<t&&(e=e.slice(0,r)+"."+e.slice(r));return e}(u=function e(r){var u,T,S,v,$,y,_,I,C,P=Z.prototype={constructor:Z,toString:null,valueOf:null},M=new Z(1),z=20,w=4,F=-7,O=21,A=-1e7,D=1e7,U=!1,k=1,H=0,L={decimalSeparator:".",groupSeparator:",",groupSize:3,secondaryGroupSize:0,fractionGroupSeparator:" ",fractionGroupSize:0},j="0123456789abcdefghijklmnopqrstuvwxyz";function Z(e,r){var u,n,d,s,l,g,m,f,x=this;if(!(x instanceof Z))return new Z(e,r);if(null==r){if(e instanceof Z)return x.s=e.s,x.e=e.e,void(x.c=(e=e.c)?e.slice():e);if((g="number"==typeof e)&&0*e==0){if(x.s=1/e<0?(e=-e,-1):1,e===~~e){for(s=0,l=e;l>=10;l/=10,s++);return x.e=s,void(x.c=[e])}f=e+""}else{if(!t.test(f=e+""))return S(x,f,g);x.s=45==f.charCodeAt(0)?(f=f.slice(1),-1):1}(s=f.indexOf("."))>-1&&(f=f.replace(".","")),(l=f.search(/e/i))>0?(s<0&&(s=l),s+=+f.slice(l+1),f=f.substring(0,l)):s<0&&(s=f.length)}else{if(b(r,2,j.length,"Base"),f=e+"",10==r)return J(x=new Z(e instanceof Z?e:f),z+x.e+1,w);if(g="number"==typeof e){if(0*e!=0)return S(x,f,g,r);if(x.s=1/e<0?(f=f.slice(1),-1):1,Z.DEBUG&&f.replace(/^0\.0*|\./,"").length>15)throw Error(i+e);g=!1}else x.s=45===f.charCodeAt(0)?(f=f.slice(1),-1):1;for(u=j.slice(0,r),s=l=0,m=f.length;l<m;l++)if(u.indexOf(n=f.charAt(l))<0){if("."==n){if(l>s){s=m;continue}}else if(!d&&(f==f.toUpperCase()&&(f=f.toLowerCase())||f==f.toLowerCase()&&(f=f.toUpperCase()))){d=!0,l=-1,s=0;continue}return S(x,e+"",g,r)}(s=(f=T(f,r,10,x.s)).indexOf("."))>-1?f=f.replace(".",""):s=f.length}for(l=0;48===f.charCodeAt(l);l++);for(m=f.length;48===f.charCodeAt(--m););if(f=f.slice(l,++m)){if(m-=l,g&&Z.DEBUG&&m>15&&(e>c||e!==a(e)))throw Error(i+x.s*e);if((s=s-l-1)>D)x.c=x.e=null;else if(s<A)x.c=[x.e=0];else{if(x.e=s,x.c=[],l=(s+1)%o,s<0&&(l+=o),l<m){for(l&&x.c.push(+f.slice(0,l)),m-=o;l<m;)x.c.push(+f.slice(l,l+=o));f=f.slice(l),l=o-f.length}else l-=m;for(;l--;f+="0");x.c.push(+f)}}else x.c=[x.e=0]}function B(e,r,u,t){var n,a,d,i,s;if(null==u?u=w:b(u,0,8),!e.c)return e.toString();if(n=e.c[0],d=e.e,null==r)s=x(e.c),s=1==t||2==t&&d<=F?R(s,d):E(s,d,"0");else if(a=(e=J(new Z(e),r,u)).e,i=(s=x(e.c)).length,1==t||2==t&&(r<=a||a<=F)){for(;i<r;s+="0",i++);s=R(s,a)}else if(r-=d,s=E(s,a,"0"),a+1>i){if(--r>0)for(s+=".";r--;s+="0");}else if((r+=a-i)>0)for(a+1==i&&(s+=".");r--;s+="0");return e.s<0&&n?"-"+s:s}function W(e,r){var u,t,n=0;for(h(e[0])&&(e=e[0]),u=new Z(e[0]);++n<e.length;){if(!(t=new Z(e[n])).s){u=t;break}r.call(u,t)&&(u=t)}return u}function q(e,r,u){for(var t=1,n=r.length;!r[--n];r.pop());for(n=r[0];n>=10;n/=10,t++);return(u=t+u*o-1)>D?e.c=e.e=null:u<A?e.c=[e.e=0]:(e.e=u,e.c=r),e}function J(e,r,u,t){var d,i,c,g,m,f,x,p=e.c,b=l;if(p){e:{for(d=1,g=p[0];g>=10;g/=10,d++);if((i=r-d)<0)i+=o,c=r,x=(m=p[f=0])/b[d-c-1]%10|0;else if((f=n((i+1)/o))>=p.length){if(!t)break e;for(;p.length<=f;p.push(0));m=x=0,d=1,c=(i%=o)-o+1}else{for(m=g=p[f],d=1;g>=10;g/=10,d++);x=(c=(i%=o)-o+d)<0?0:m/b[d-c-1]%10|0}if(t=t||r<0||null!=p[f+1]||(c<0?m:m%b[d-c-1]),t=u<4?(x||t)&&(0==u||u==(e.s<0?3:2)):x>5||5==x&&(4==u||t||6==u&&(i>0?c>0?m/b[d-c]:0:p[f-1])%10&1||u==(e.s<0?8:7)),r<1||!p[0])return p.length=0,t?(r-=e.e+1,p[0]=b[(o-r%o)%o],e.e=-r||0):p[0]=e.e=0,e;if(0==i?(p.length=f,g=1,f--):(p.length=f+1,g=b[o-i],p[f]=c>0?a(m/b[d-c]%b[c])*g:0),t)for(;;){if(0==f){for(i=1,c=p[0];c>=10;c/=10,i++);for(c=p[0]+=g,g=1;c>=10;c/=10,g++);i!=g&&(e.e++,p[0]==s&&(p[0]=1));break}if(p[f]+=g,p[f]!=s)break;p[f--]=0,g=1}for(i=p.length;0===p[--i];p.pop());}e.e>D?e.c=e.e=null:e.e<A&&(e.c=[e.e=0])}return e}return Z.clone=e,Z.ROUND_UP=0,Z.ROUND_DOWN=1,Z.ROUND_CEIL=2,Z.ROUND_FLOOR=3,Z.ROUND_HALF_UP=4,Z.ROUND_HALF_DOWN=5,Z.ROUND_HALF_EVEN=6,Z.ROUND_HALF_CEIL=7,Z.ROUND_HALF_FLOOR=8,Z.EUCLID=9,Z.config=Z.set=function(e){var r,u;if(null!=e){if("object"!=typeof e)throw Error(d+"Object expected: "+e);if(e.hasOwnProperty(r="DECIMAL_PLACES")&&(b(u=e[r],0,m,r),z=u),e.hasOwnProperty(r="ROUNDING_MODE")&&(b(u=e[r],0,8,r),w=u),e.hasOwnProperty(r="EXPONENTIAL_AT")&&(h(u=e[r])?(b(u[0],-m,0,r),b(u[1],0,m,r),F=u[0],O=u[1]):(b(u,-m,m,r),F=-(O=u<0?-u:u))),e.hasOwnProperty(r="RANGE"))if(h(u=e[r]))b(u[0],-m,-1,r),b(u[1],1,m,r),A=u[0],D=u[1];else{if(b(u,-m,m,r),!u)throw Error(d+r+" cannot be zero: "+u);A=-(D=u<0?-u:u)}if(e.hasOwnProperty(r="CRYPTO")){if((u=e[r])!==!!u)throw Error(d+r+" not true or false: "+u);if(u){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw U=!u,Error(d+"crypto unavailable");U=u}else U=u}if(e.hasOwnProperty(r="MODULO_MODE")&&(b(u=e[r],0,9,r),k=u),e.hasOwnProperty(r="POW_PRECISION")&&(b(u=e[r],0,m,r),H=u),e.hasOwnProperty(r="FORMAT")){if("object"!=typeof(u=e[r]))throw Error(d+r+" not an object: "+u);L=u}if(e.hasOwnProperty(r="ALPHABET")){if("string"!=typeof(u=e[r])||/^.$|\.|(.).*\1/.test(u))throw Error(d+r+" invalid: "+u);j=u}}return{DECIMAL_PLACES:z,ROUNDING_MODE:w,EXPONENTIAL_AT:[F,O],RANGE:[A,D],CRYPTO:U,MODULO_MODE:k,POW_PRECISION:H,FORMAT:L,ALPHABET:j}},Z.isBigNumber=function(e){return e instanceof Z||e&&!0===e._isBigNumber||!1},Z.maximum=Z.max=function(){return W(arguments,P.lt)},Z.minimum=Z.min=function(){return W(arguments,P.gt)},Z.random=(v=9007199254740992*Math.random()&2097151?function(){return a(9007199254740992*Math.random())}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(e){var r,u,t,i,s,c=0,g=[],f=new Z(M);if(null==e?e=z:b(e,0,m),i=n(e/o),U)if(crypto.getRandomValues){for(r=crypto.getRandomValues(new Uint32Array(i*=2));c<i;)(s=131072*r[c]+(r[c+1]>>>11))>=9e15?(u=crypto.getRandomValues(new Uint32Array(2)),r[c]=u[0],r[c+1]=u[1]):(g.push(s%1e14),c+=2);c=i/2}else{if(!crypto.randomBytes)throw U=!1,Error(d+"crypto unavailable");for(r=crypto.randomBytes(i*=7);c<i;)(s=281474976710656*(31&r[c])+1099511627776*r[c+1]+4294967296*r[c+2]+16777216*r[c+3]+(r[c+4]<<16)+(r[c+5]<<8)+r[c+6])>=9e15?crypto.randomBytes(7).copy(r,c):(g.push(s%1e14),c+=7);c=i/7}if(!U)for(;c<i;)(s=v())<9e15&&(g[c++]=s%1e14);for(i=g[--c],e%=o,i&&e&&(s=l[o-e],g[c]=a(i/s)*s);0===g[c];g.pop(),c--);if(c<0)g=[t=0];else{for(t=-1;0===g[0];g.splice(0,1),t-=o);for(c=1,s=g[0];s>=10;s/=10,c++);c<o&&(t-=o-c)}return f.e=t,f.c=g,f}),T=function(){function e(e,r,u,t){for(var n,a,d=[0],i=0,s=e.length;i<s;){for(a=d.length;a--;d[a]*=r);for(d[0]+=t.indexOf(e.charAt(i++)),n=0;n<d.length;n++)d[n]>u-1&&(null==d[n+1]&&(d[n+1]=0),d[n+1]+=d[n]/u|0,d[n]%=u)}return d.reverse()}return function(r,t,n,a,d){var i,s,o,c,l,g,m,f,p=r.indexOf("."),b=z,h=w;for(p>=0&&(c=H,H=0,r=r.replace(".",""),g=(f=new Z(t)).pow(r.length-p),H=c,f.c=e(E(x(g.c),g.e,"0"),10,n,"0123456789"),f.e=f.c.length),o=c=(m=e(r,t,n,d?(i=j,"0123456789"):(i="0123456789",j))).length;0==m[--c];m.pop());if(!m[0])return i.charAt(0);if(p<0?--o:(g.c=m,g.e=o,g.s=a,m=(g=u(g,f,b,h,n)).c,l=g.r,o=g.e),p=m[s=o+b+1],c=n/2,l=l||s<0||null!=m[s+1],l=h<4?(null!=p||l)&&(0==h||h==(g.s<0?3:2)):p>c||p==c&&(4==h||l||6==h&&1&m[s-1]||h==(g.s<0?8:7)),s<1||!m[0])r=l?E(i.charAt(1),-b,i.charAt(0)):i.charAt(0);else{if(m.length=s,l)for(--n;++m[--s]>n;)m[s]=0,s||(++o,m=[1].concat(m));for(c=m.length;!m[--c];);for(p=0,r="";p<=c;r+=i.charAt(m[p++]));r=E(r,o,i.charAt(0))}return r}}(),u=function(){function e(e,r,u){var t,n,a,d,i=0,s=e.length,o=r%g,c=r/g|0;for(e=e.slice();s--;)i=((n=o*(a=e[s]%g)+(t=c*a+(d=e[s]/g|0)*o)%g*g+i)/u|0)+(t/g|0)+c*d,e[s]=n%u;return i&&(e=[i].concat(e)),e}function r(e,r,u,t){var n,a;if(u!=t)a=u>t?1:-1;else for(n=a=0;n<u;n++)if(e[n]!=r[n]){a=e[n]>r[n]?1:-1;break}return a}function u(e,r,u,t){for(var n=0;u--;)e[u]-=n,n=e[u]<r[u]?1:0,e[u]=n*t+e[u]-r[u];for(;!e[0]&&e.length>1;e.splice(0,1));}return function(t,n,d,i,c){var l,g,m,x,p,b,h,N,R,E,T,S,v,$,y,_,I,C=t.s==n.s?1:-1,P=t.c,M=n.c;if(!(P&&P[0]&&M&&M[0]))return new Z(t.s&&n.s&&(P?!M||P[0]!=M[0]:M)?P&&0==P[0]||!M?0*C:C/0:NaN);for(R=(N=new Z(C)).c=[],C=d+(g=t.e-n.e)+1,c||(c=s,g=f(t.e/o)-f(n.e/o),C=C/o|0),m=0;M[m]==(P[m]||0);m++);if(M[m]>(P[m]||0)&&g--,C<0)R.push(1),x=!0;else{for($=P.length,_=M.length,m=0,C+=2,(p=a(c/(M[0]+1)))>1&&(M=e(M,p,c),P=e(P,p,c),_=M.length,$=P.length),v=_,T=(E=P.slice(0,_)).length;T<_;E[T++]=0);I=M.slice(),I=[0].concat(I),y=M[0],M[1]>=c/2&&y++;do{if(p=0,(l=r(M,E,_,T))<0){if(S=E[0],_!=T&&(S=S*c+(E[1]||0)),(p=a(S/y))>1)for(p>=c&&(p=c-1),h=(b=e(M,p,c)).length,T=E.length;1==r(b,E,h,T);)p--,u(b,_<h?I:M,h,c),h=b.length,l=1;else 0==p&&(l=p=1),h=(b=M.slice()).length;if(h<T&&(b=[0].concat(b)),u(E,b,T,c),T=E.length,-1==l)for(;r(M,E,_,T)<1;)p++,u(E,_<T?I:M,T,c),T=E.length}else 0===l&&(p++,E=[0]);R[m++]=p,E[0]?E[T++]=P[v]||0:(E=[P[v]],T=1)}while((v++<$||null!=E[0])&&C--);x=null!=E[0],R[0]||R.splice(0,1)}if(c==s){for(m=1,C=R[0];C>=10;C/=10,m++);J(N,d+(N.e=m+g*o-1)+1,i,x)}else N.e=g,N.r=+x;return N}}(),$=/^(-?)0([xbo])(?=\w[\w.]*$)/i,y=/^([^.]+)\.$/,_=/^\.([^.]+)$/,I=/^-?(Infinity|NaN)$/,C=/^\s*\+(?=[\w.])|^\s+|\s+$/g,S=function(e,r,u,t){var n,a=u?r:r.replace(C,"");if(I.test(a))e.s=isNaN(a)?null:a<0?-1:1,e.c=e.e=null;else{if(!u&&(a=a.replace($,function(e,r,u){return n="x"==(u=u.toLowerCase())?16:"b"==u?2:8,t&&t!=n?e:r}),t&&(n=t,a=a.replace(y,"$1").replace(_,"0.$1")),r!=a))return new Z(a,n);if(Z.DEBUG)throw Error(d+"Not a"+(t?" base "+t:"")+" number: "+r);e.c=e.e=e.s=null}},P.absoluteValue=P.abs=function(){var e=new Z(this);return e.s<0&&(e.s=1),e},P.comparedTo=function(e,r){return p(this,new Z(e,r))},P.decimalPlaces=P.dp=function(e,r){var u,t,n,a=this;if(null!=e)return b(e,0,m),null==r?r=w:b(r,0,8),J(new Z(a),e+a.e+1,r);if(!(u=a.c))return null;if(t=((n=u.length-1)-f(this.e/o))*o,n=u[n])for(;n%10==0;n/=10,t--);return t<0&&(t=0),t},P.dividedBy=P.div=function(e,r){return u(this,new Z(e,r),z,w)},P.dividedToIntegerBy=P.idiv=function(e,r){return u(this,new Z(e,r),0,1)},P.exponentiatedBy=P.pow=function(e,r){var u,t,i,s,c,l,g,m=this;if((e=new Z(e)).c&&!e.isInteger())throw Error(d+"Exponent not an integer: "+e);if(null!=r&&(r=new Z(r)),s=e.e>14,!m.c||!m.c[0]||1==m.c[0]&&!m.e&&1==m.c.length||!e.c||!e.c[0])return g=new Z(Math.pow(+m.valueOf(),s?2-N(e):+e)),r?g.mod(r):g;if(c=e.s<0,r){if(r.c?!r.c[0]:!r.s)return new Z(NaN);(t=!c&&m.isInteger()&&r.isInteger())&&(m=m.mod(r))}else{if(e.e>9&&(m.e>0||m.e<-1||(0==m.e?m.c[0]>1||s&&m.c[1]>=24e7:m.c[0]<8e13||s&&m.c[0]<=9999975e7)))return i=m.s<0&&N(e)?-0:0,m.e>-1&&(i=1/i),new Z(c?1/i:i);H&&(i=n(H/o+2))}for(s?(u=new Z(.5),l=N(e)):l=e%2,c&&(e.s=1),g=new Z(M);;){if(l){if(!(g=g.times(m)).c)break;i?g.c.length>i&&(g.c.length=i):t&&(g=g.mod(r))}if(s){if(J(e=e.times(u),e.e+1,1),!e.c[0])break;s=e.e>14,l=N(e)}else{if(!(e=a(e/2)))break;l=e%2}m=m.times(m),i?m.c&&m.c.length>i&&(m.c.length=i):t&&(m=m.mod(r))}return t?g:(c&&(g=M.div(g)),r?g.mod(r):i?J(g,H,w,void 0):g)},P.integerValue=function(e){var r=new Z(this);return null==e?e=w:b(e,0,8),J(r,r.e+1,e)},P.isEqualTo=P.eq=function(e,r){return 0===p(this,new Z(e,r))},P.isFinite=function(){return!!this.c},P.isGreaterThan=P.gt=function(e,r){return p(this,new Z(e,r))>0},P.isGreaterThanOrEqualTo=P.gte=function(e,r){return 1===(r=p(this,new Z(e,r)))||0===r},P.isInteger=function(){return!!this.c&&f(this.e/o)>this.c.length-2},P.isLessThan=P.lt=function(e,r){return p(this,new Z(e,r))<0},P.isLessThanOrEqualTo=P.lte=function(e,r){return-1===(r=p(this,new Z(e,r)))||0===r},P.isNaN=function(){return!this.s},P.isNegative=function(){return this.s<0},P.isPositive=function(){return this.s>0},P.isZero=function(){return!!this.c&&0==this.c[0]},P.minus=function(e,r){var u,t,n,a,d=this,i=d.s;if(r=(e=new Z(e,r)).s,!i||!r)return new Z(NaN);if(i!=r)return e.s=-r,d.plus(e);var c=d.e/o,l=e.e/o,g=d.c,m=e.c;if(!c||!l){if(!g||!m)return g?(e.s=-r,e):new Z(m?d:NaN);if(!g[0]||!m[0])return m[0]?(e.s=-r,e):new Z(g[0]?d:3==w?-0:0)}if(c=f(c),l=f(l),g=g.slice(),i=c-l){for((a=i<0)?(i=-i,n=g):(l=c,n=m),n.reverse(),r=i;r--;n.push(0));n.reverse()}else for(t=(a=(i=g.length)<(r=m.length))?i:r,i=r=0;r<t;r++)if(g[r]!=m[r]){a=g[r]<m[r];break}if(a&&(n=g,g=m,m=n,e.s=-e.s),(r=(t=m.length)-(u=g.length))>0)for(;r--;g[u++]=0);for(r=s-1;t>i;){if(g[--t]<m[t]){for(u=t;u&&!g[--u];g[u]=r);--g[u],g[t]+=s}g[t]-=m[t]}for(;0==g[0];g.splice(0,1),--l);return g[0]?q(e,g,l):(e.s=3==w?-1:1,e.c=[e.e=0],e)},P.modulo=P.mod=function(e,r){var t,n,a=this;return e=new Z(e,r),!a.c||!e.s||e.c&&!e.c[0]?new Z(NaN):!e.c||a.c&&!a.c[0]?new Z(a):(9==k?(n=e.s,e.s=1,t=u(a,e,0,3),e.s=n,t.s*=n):t=u(a,e,0,k),(e=a.minus(t.times(e))).c[0]||1!=k||(e.s=a.s),e)},P.multipliedBy=P.times=function(e,r){var u,t,n,a,d,i,c,l,m,x,p,b,h,N,R,E=this,T=E.c,S=(e=new Z(e,r)).c;if(!(T&&S&&T[0]&&S[0]))return!E.s||!e.s||T&&!T[0]&&!S||S&&!S[0]&&!T?e.c=e.e=e.s=null:(e.s*=E.s,T&&S?(e.c=[0],e.e=0):e.c=e.e=null),e;for(t=f(E.e/o)+f(e.e/o),e.s*=E.s,(c=T.length)<(x=S.length)&&(h=T,T=S,S=h,n=c,c=x,x=n),n=c+x,h=[];n--;h.push(0));for(N=s,R=g,n=x;--n>=0;){for(u=0,p=S[n]%R,b=S[n]/R|0,a=n+(d=c);a>n;)u=((l=p*(l=T[--d]%R)+(i=b*l+(m=T[d]/R|0)*p)%R*R+h[a]+u)/N|0)+(i/R|0)+b*m,h[a--]=l%N;h[a]=u}return u?++t:h.splice(0,1),q(e,h,t)},P.negated=function(){var e=new Z(this);return e.s=-e.s||null,e},P.plus=function(e,r){var u,t=this,n=t.s;if(r=(e=new Z(e,r)).s,!n||!r)return new Z(NaN);if(n!=r)return e.s=-r,t.minus(e);var a=t.e/o,d=e.e/o,i=t.c,c=e.c;if(!a||!d){if(!i||!c)return new Z(n/0);if(!i[0]||!c[0])return c[0]?e:new Z(i[0]?t:0*n)}if(a=f(a),d=f(d),i=i.slice(),n=a-d){for(n>0?(d=a,u=c):(n=-n,u=i),u.reverse();n--;u.push(0));u.reverse()}for((n=i.length)-(r=c.length)<0&&(u=c,c=i,i=u,r=n),n=0;r;)n=(i[--r]=i[r]+c[r]+n)/s|0,i[r]=s===i[r]?0:i[r]%s;return n&&(i=[n].concat(i),++d),q(e,i,d)},P.precision=P.sd=function(e,r){var u,t,n,a=this;if(null!=e&&e!==!!e)return b(e,1,m),null==r?r=w:b(r,0,8),J(new Z(a),e,r);if(!(u=a.c))return null;if(t=(n=u.length-1)*o+1,n=u[n]){for(;n%10==0;n/=10,t--);for(n=u[0];n>=10;n/=10,t++);}return e&&a.e+1>t&&(t=a.e+1),t},P.shiftedBy=function(e){return b(e,-c,c),this.times("1e"+e)},P.squareRoot=P.sqrt=function(){var e,r,t,n,a,d=this,i=d.c,s=d.s,o=d.e,c=z+4,l=new Z("0.5");if(1!==s||!i||!i[0])return new Z(!s||s<0&&(!i||i[0])?NaN:i?d:1/0);if(0==(s=Math.sqrt(+d))||s==1/0?(((r=x(i)).length+o)%2==0&&(r+="0"),s=Math.sqrt(r),o=f((o+1)/2)-(o<0||o%2),t=new Z(r=s==1/0?"1e"+o:(r=s.toExponential()).slice(0,r.indexOf("e")+1)+o)):t=new Z(s+""),t.c[0])for((s=(o=t.e)+c)<3&&(s=0);;)if(a=t,t=l.times(a.plus(u(d,a,c,1))),x(a.c).slice(0,s)===(r=x(t.c)).slice(0,s)){if(t.e<o&&--s,"9999"!=(r=r.slice(s-3,s+1))&&(n||"4999"!=r)){+r&&(+r.slice(1)||"5"!=r.charAt(0))||(J(t,t.e+z+2,1),e=!t.times(t).eq(d));break}if(!n&&(J(a,a.e+z+2,0),a.times(a).eq(d))){t=a;break}c+=4,s+=4,n=1}return J(t,t.e+z+1,w,e)},P.toExponential=function(e,r){return null!=e&&(b(e,0,m),e++),B(this,e,r,1)},P.toFixed=function(e,r){return null!=e&&(b(e,0,m),e=e+this.e+1),B(this,e,r)},P.toFormat=function(e,r){var u=this.toFixed(e,r);if(this.c){var t,n=u.split("."),a=+L.groupSize,d=+L.secondaryGroupSize,i=L.groupSeparator,s=n[0],o=n[1],c=this.s<0,l=c?s.slice(1):s,g=l.length;if(d&&(t=a,a=d,d=t,g-=t),a>0&&g>0){for(t=g%a||a,s=l.substr(0,t);t<g;t+=a)s+=i+l.substr(t,a);d>0&&(s+=i+l.slice(t)),c&&(s="-"+s)}u=o?s+L.decimalSeparator+((d=+L.fractionGroupSize)?o.replace(new RegExp("\\d{"+d+"}\\B","g"),"$&"+L.fractionGroupSeparator):o):s}return u},P.toFraction=function(e){var r,t,n,a,i,s,c,g,m,f,p,b,h=this,N=h.c;if(null!=e&&(!(g=new Z(e)).isInteger()&&(g.c||1!==g.s)||g.lt(M)))throw Error(d+"Argument "+(g.isInteger()?"out of range: ":"not an integer: ")+e);if(!N)return h.toString();for(t=new Z(M),f=n=new Z(M),a=m=new Z(M),b=x(N),s=t.e=b.length-h.e-1,t.c[0]=l[(c=s%o)<0?o+c:c],e=!e||g.comparedTo(t)>0?s>0?t:f:g,c=D,D=1/0,g=new Z(b),m.c[0]=0;p=u(g,t,0,1),1!=(i=n.plus(p.times(a))).comparedTo(e);)n=a,a=i,f=m.plus(p.times(i=f)),m=i,t=g.minus(p.times(i=t)),g=i;return i=u(e.minus(n),a,0,1),m=m.plus(i.times(f)),n=n.plus(i.times(a)),m.s=f.s=h.s,r=u(f,a,s*=2,w).minus(h).abs().comparedTo(u(m,n,s,w).minus(h).abs())<1?[f.toString(),a.toString()]:[m.toString(),n.toString()],D=c,r},P.toNumber=function(){return+this},P.toPrecision=function(e,r){return null!=e&&b(e,1,m),B(this,e,r,2)},P.toString=function(e){var r,u=this,t=u.s,n=u.e;return null===n?t?(r="Infinity",t<0&&(r="-"+r)):r="NaN":(r=x(u.c),null==e?r=n<=F||n>=O?R(r,n):E(r,n,"0"):(b(e,2,j.length,"Base"),r=T(E(r,n,"0"),10,e,t,!0)),t<0&&u.c[0]&&(r="-"+r)),r},P.valueOf=P.toJSON=function(){var e,r=this,u=r.e;return null===u?r.toString():(e=x(r.c),e=u<=F||u>=O?R(e,u):E(e,u,"0"),r.s<0?"-"+e:e)},P._isBigNumber=!0,null!=r&&Z.set(r),Z}()).default=u.BigNumber=u,e.exports?e.exports=u:(r||(r="undefined"!=typeof self&&self?self:window),r.BigNumber=u)}(commonjsGlobal)}),constants=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});class u{}u.SYS_NUM_CARDINAL="builtin.num.cardinal",u.SYS_NUM_DOUBLE="builtin.num.double",u.SYS_NUM_FRACTION="builtin.num.fraction",u.SYS_NUM_INTEGER="builtin.num.integer",u.SYS_NUM="builtin.num",u.SYS_NUM_ORDINAL="builtin.num.ordinal",u.SYS_NUM_PERCENTAGE="builtin.num.percentage",u.NO_BREAK_SPACE=" ",r.Constants=u});unwrapExports(constants);var models$2=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),function(e){e[e.Default=0]="Default",e[e.Currency=1]="Currency",e[e.PureNumber=2]="PureNumber"}(r.NumberMode||(r.NumberMode={}));class u{constructor(e,r){this.thousandsMark=e,this.decimalsMark=r}}u.integerNumComma=new u(",","\0"),u.integerNumDot=new u(".","\0"),u.integerNumBlank=new u(" ","\0"),u.integerNumNoBreakSpace=new u(constants.Constants.NO_BREAK_SPACE,"\0"),u.integerNumQuote=new u("'","\0"),u.doubleNumCommaDot=new u(",","."),u.doubleNumCommaCdot=new u(",","·"),u.doubleNumBlankComma=new u(" ",","),u.doubleNumNoBreakSpaceComma=new u(constants.Constants.NO_BREAK_SPACE,","),u.doubleNumBlankDot=new u(" ","."),u.doubleNumNoBreakSpaceDot=new u(constants.Constants.NO_BREAK_SPACE,"."),u.doubleNumDotComma=new u(".",","),u.doubleNumQuoteComma=new u("'",","),r.LongFormatType=u;class t{constructor(e,r){this.extractor=r,this.parser=e}parse(e){return this.extractor.extract(e).map(e=>this.parser.parse(e)).map(e=>e).map(e=>({start:e.start,end:e.start+e.length-1,resolution:{value:e.resolutionStr},text:e.text,typeName:this.modelTypeName}))}}r.AbstractNumberModel=t;r.NumberModel=class extends t{constructor(){super(...arguments),this.modelTypeName="number"}};r.OrdinalModel=class extends t{constructor(){super(...arguments),this.modelTypeName="ordinal"}};r.PercentModel=class extends t{constructor(){super(...arguments),this.modelTypeName="percentage"}}});unwrapExports(models$2);var culture$2=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});class u extends recognizersText.Culture{constructor(e,r,u){super(e,r),this.longFormat=u}}u.supportedCultures=[new u("English",u.English,new models$2.LongFormatType(",",".")),new u("Chinese",u.Chinese,null),new u("Spanish",u.Spanish,new models$2.LongFormatType(".",",")),new u("Portuguese",u.Portuguese,new models$2.LongFormatType(".",",")),new u("French",u.French,new models$2.LongFormatType(".",",")),new u("Japanese",u.Japanese,new models$2.LongFormatType(",","."))],r.Culture=u;r.CultureInfo=class extends recognizersText.CultureInfo{format(e){let r,t=new bignumber.BigNumber(e);if((r=t.decimalPlaces()?t.precision(15,bignumber.BigNumber.ROUND_HALF_UP).toString():t.toString().toUpperCase()).indexOf(".")>-1&&(r=lodash_trimend(r,"0")),r.indexOf("e-")>-1){let e=r.split("e-");e[1]=1===e[1].length?"0"+e[1]:e[1],r=e.join("E-")}let n=u.supportedCultures.find(e=>e.cultureCode===this.code);return n&&n.longFormat?r.split(",").map(e=>e.split(".").join(n.longFormat.decimalsMark)).join(n.longFormat.thousandsMark):r}}});unwrapExports(culture$2);var lodash_sortby=createCommonjsModule(function(e,r){var u=200,t="Expected a function",n="__lodash_hash_undefined__",a=1,d=2,i=1/0,s=9007199254740991,o="[object Arguments]",c="[object Array]",l="[object Boolean]",g="[object Date]",m="[object Error]",f="[object Function]",x="[object GeneratorFunction]",p="[object Map]",b="[object Number]",h="[object Object]",N="[object RegExp]",R="[object Set]",E="[object String]",T="[object Symbol]",S="[object ArrayBuffer]",v="[object DataView]",$=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,y=/^\w*$/,_=/^\./,I=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,C=/\\(\\)?/g,P=/^\[object .+?Constructor\]$/,M=/^(?:0|[1-9]\d*)$/,z={};z["[object Float32Array]"]=z["[object Float64Array]"]=z["[object Int8Array]"]=z["[object Int16Array]"]=z["[object Int32Array]"]=z["[object Uint8Array]"]=z["[object Uint8ClampedArray]"]=z["[object Uint16Array]"]=z["[object Uint32Array]"]=!0,z[o]=z[c]=z[S]=z[l]=z[v]=z[g]=z[m]=z[f]=z[p]=z[b]=z[h]=z[N]=z[R]=z[E]=z["[object WeakMap]"]=!1;var w="object"==typeof commonjsGlobal&&commonjsGlobal&&commonjsGlobal.Object===Object&&commonjsGlobal,F="object"==typeof self&&self&&self.Object===Object&&self,O=w||F||Function("return this")(),A=r&&!r.nodeType&&r,D=A&&e&&!e.nodeType&&e,U=D&&D.exports===A&&w.process,k=function(){try{return U&&U.binding("util")}catch(e){}}(),H=k&&k.isTypedArray;function L(e,r){for(var u=-1,t=e?e.length:0,n=Array(t);++u<t;)n[u]=r(e[u],u,e);return n}function j(e,r){for(var u=-1,t=r.length,n=e.length;++u<t;)e[n+u]=r[u];return e}function Z(e,r){for(var u=-1,t=e?e.length:0;++u<t;)if(r(e[u],u,e))return!0;return!1}function B(e){return function(r){return e(r)}}function W(e){var r=!1;if(null!=e&&"function"!=typeof e.toString)try{r=!!(e+"")}catch(e){}return r}function q(e){var r=-1,u=Array(e.size);return e.forEach(function(e,t){u[++r]=[t,e]}),u}function J(e){var r=-1,u=Array(e.size);return e.forEach(function(e){u[++r]=e}),u}var G,K,Y,V=Array.prototype,X=Function.prototype,Q=Object.prototype,ee=O["__core-js_shared__"],re=(G=/[^.]+$/.exec(ee&&ee.keys&&ee.keys.IE_PROTO||""))?"Symbol(src)_1."+G:"",ue=X.toString,te=Q.hasOwnProperty,ne=Q.toString,ae=RegExp("^"+ue.call(te).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),de=O.Symbol,ie=O.Uint8Array,se=Q.propertyIsEnumerable,oe=V.splice,ce=de?de.isConcatSpreadable:void 0,le=(K=Object.keys,Y=Object,function(e){return K(Y(e))}),ge=Math.max,me=Ke(O,"DataView"),fe=Ke(O,"Map"),xe=Ke(O,"Promise"),pe=Ke(O,"Set"),be=Ke(O,"WeakMap"),he=Ke(Object,"create"),Ne=ar(me),Re=ar(fe),Ee=ar(xe),Te=ar(pe),Se=ar(be),ve=de?de.prototype:void 0,$e=ve?ve.valueOf:void 0,ye=ve?ve.toString:void 0;function _e(e){var r=-1,u=e?e.length:0;for(this.clear();++r<u;){var t=e[r];this.set(t[0],t[1])}}function Ie(e){var r=-1,u=e?e.length:0;for(this.clear();++r<u;){var t=e[r];this.set(t[0],t[1])}}function Ce(e){var r=-1,u=e?e.length:0;for(this.clear();++r<u;){var t=e[r];this.set(t[0],t[1])}}function Pe(e){var r=-1,u=e?e.length:0;for(this.__data__=new Ce;++r<u;)this.add(e[r])}function Me(e){this.__data__=new Ie(e)}function ze(e,r){var u=cr(e)||or(e)?function(e,r){for(var u=-1,t=Array(e);++u<e;)t[u]=r(u);return t}(e.length,String):[],t=u.length,n=!!t;for(var a in e)!r&&!te.call(e,a)||n&&("length"==a||Xe(a,t))||u.push(a);return u}function we(e,r){for(var u=e.length;u--;)if(sr(e[u][0],r))return u;return-1}_e.prototype.clear=function(){this.__data__=he?he(null):{}},_e.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},_e.prototype.get=function(e){var r=this.__data__;if(he){var u=r[e];return u===n?void 0:u}return te.call(r,e)?r[e]:void 0},_e.prototype.has=function(e){var r=this.__data__;return he?void 0!==r[e]:te.call(r,e)},_e.prototype.set=function(e,r){return this.__data__[e]=he&&void 0===r?n:r,this},Ie.prototype.clear=function(){this.__data__=[]},Ie.prototype.delete=function(e){var r=this.__data__,u=we(r,e);return!(u<0||(u==r.length-1?r.pop():oe.call(r,u,1),0))},Ie.prototype.get=function(e){var r=this.__data__,u=we(r,e);return u<0?void 0:r[u][1]},Ie.prototype.has=function(e){return we(this.__data__,e)>-1},Ie.prototype.set=function(e,r){var u=this.__data__,t=we(u,e);return t<0?u.push([e,r]):u[t][1]=r,this},Ce.prototype.clear=function(){this.__data__={hash:new _e,map:new(fe||Ie),string:new _e}},Ce.prototype.delete=function(e){return Ge(this,e).delete(e)},Ce.prototype.get=function(e){return Ge(this,e).get(e)},Ce.prototype.has=function(e){return Ge(this,e).has(e)},Ce.prototype.set=function(e,r){return Ge(this,e).set(e,r),this},Pe.prototype.add=Pe.prototype.push=function(e){return this.__data__.set(e,n),this},Pe.prototype.has=function(e){return this.__data__.has(e)},Me.prototype.clear=function(){this.__data__=new Ie},Me.prototype.delete=function(e){return this.__data__.delete(e)},Me.prototype.get=function(e){return this.__data__.get(e)},Me.prototype.has=function(e){return this.__data__.has(e)},Me.prototype.set=function(e,r){var t=this.__data__;if(t instanceof Ie){var n=t.__data__;if(!fe||n.length<u-1)return n.push([e,r]),this;t=this.__data__=new Ce(n)}return t.set(e,r),this};var Fe,Oe,Ae=(Fe=function(e,r){return e&&De(e,r,hr)},function(e,r){if(null==e)return e;if(!lr(e))return Fe(e,r);for(var u=e.length,t=Oe?u:-1,n=Object(e);(Oe?t--:++t<u)&&!1!==r(n[t],t,n););return e});var De=function(e){return function(r,u,t){for(var n=-1,a=Object(r),d=t(r),i=d.length;i--;){var s=d[e?i:++n];if(!1===u(a[s],s,a))break}return r}}();function Ue(e,r){for(var u=0,t=(r=er(r,e)?[r]:We(r)).length;null!=e&&u<t;)e=e[nr(r[u++])];return u&&u==t?e:void 0}function ke(e,r){return null!=e&&r in Object(e)}function He(e,r,u,t,n){return e===r||(null==e||null==r||!fr(e)&&!xr(r)?e!=e&&r!=r:function(e,r,u,t,n,i){var s=cr(e),f=cr(r),x=c,$=c;s||(x=(x=Ye(e))==o?h:x);f||($=($=Ye(r))==o?h:$);var y=x==h&&!W(e),_=$==h&&!W(r),I=x==$;if(I&&!y)return i||(i=new Me),s||br(e)?Je(e,r,u,t,n,i):function(e,r,u,t,n,i,s){switch(u){case v:if(e.byteLength!=r.byteLength||e.byteOffset!=r.byteOffset)return!1;e=e.buffer,r=r.buffer;case S:return!(e.byteLength!=r.byteLength||!t(new ie(e),new ie(r)));case l:case g:case b:return sr(+e,+r);case m:return e.name==r.name&&e.message==r.message;case N:case E:return e==r+"";case p:var o=q;case R:var c=i&d;if(o||(o=J),e.size!=r.size&&!c)return!1;var f=s.get(e);if(f)return f==r;i|=a,s.set(e,r);var x=Je(o(e),o(r),t,n,i,s);return s.delete(e),x;case T:if($e)return $e.call(e)==$e.call(r)}return!1}(e,r,x,u,t,n,i);if(!(n&d)){var C=y&&te.call(e,"__wrapped__"),P=_&&te.call(r,"__wrapped__");if(C||P){var M=C?e.value():e,z=P?r.value():r;return i||(i=new Me),u(M,z,t,n,i)}}if(!I)return!1;return i||(i=new Me),function(e,r,u,t,n,a){var i=n&d,s=hr(e),o=s.length,c=hr(r).length;if(o!=c&&!i)return!1;for(var l=o;l--;){var g=s[l];if(!(i?g in r:te.call(r,g)))return!1}var m=a.get(e);if(m&&a.get(r))return m==r;var f=!0;a.set(e,r),a.set(r,e);for(var x=i;++l<o;){g=s[l];var p=e[g],b=r[g];if(t)var h=i?t(b,p,g,r,e,a):t(p,b,g,e,r,a);if(!(void 0===h?p===b||u(p,b,t,n,a):h)){f=!1;break}x||(x="constructor"==g)}if(f&&!x){var N=e.constructor,R=r.constructor;N!=R&&"constructor"in e&&"constructor"in r&&!("function"==typeof N&&N instanceof N&&"function"==typeof R&&R instanceof R)&&(f=!1)}return a.delete(e),a.delete(r),f}(e,r,u,t,n,i)}(e,r,He,u,t,n))}function Le(e){return!(!fr(e)||(r=e,re&&re in r))&&(gr(e)||W(e)?ae:P).test(ar(e));var r}function je(e){return"function"==typeof e?e:null==e?Nr:"object"==typeof e?cr(e)?function(e,r){if(er(e)&&rr(r))return ur(nr(e),r);return function(u){var t=function(e,r,u){var t=null==e?void 0:Ue(e,r);return void 0===t?u:t}(u,e);return void 0===t&&t===r?function(e,r){return null!=e&&function(e,r,u){r=er(r,e)?[r]:We(r);var t,n=-1,a=r.length;for(;++n<a;){var d=nr(r[n]);if(!(t=null!=e&&u(e,d)))break;e=e[d]}if(t)return t;return!!(a=e?e.length:0)&&mr(a)&&Xe(d,a)&&(cr(e)||or(e))}(e,r,ke)}(u,e):He(r,t,void 0,a|d)}}(e[0],e[1]):function(e){var r=function(e){var r=hr(e),u=r.length;for(;u--;){var t=r[u],n=e[t];r[u]=[t,n,rr(n)]}return r}(e);if(1==r.length&&r[0][2])return ur(r[0][0],r[0][1]);return function(u){return u===e||function(e,r,u,t){var n=u.length,i=n,s=!t;if(null==e)return!i;for(e=Object(e);n--;){var o=u[n];if(s&&o[2]?o[1]!==e[o[0]]:!(o[0]in e))return!1}for(;++n<i;){var c=(o=u[n])[0],l=e[c],g=o[1];if(s&&o[2]){if(void 0===l&&!(c in e))return!1}else{var m=new Me;if(t)var f=t(l,g,c,e,r,m);if(!(void 0===f?He(g,l,t,a|d,m):f))return!1}}return!0}(u,e,r)}}(e):er(r=e)?(u=nr(r),function(e){return null==e?void 0:e[u]}):function(e){return function(r){return Ue(r,e)}}(r);var r,u}function Ze(e){if(u=(r=e)&&r.constructor,t="function"==typeof u&&u.prototype||Q,r!==t)return le(e);var r,u,t,n=[];for(var a in Object(e))te.call(e,a)&&"constructor"!=a&&n.push(a);return n}function Be(e,r,u){var t=-1;return r=L(r.length?r:[Nr],B(je)),function(e,r){var u=e.length;for(e.sort(r);u--;)e[u]=e[u].value;return e}(function(e,r){var u=-1,t=lr(e)?Array(e.length):[];return Ae(e,function(e,n,a){t[++u]=r(e,n,a)}),t}(e,function(e,u,n){return{criteria:L(r,function(r){return r(e)}),index:++t,value:e}}),function(e,r){return function(e,r,u){var t=-1,n=e.criteria,a=r.criteria,d=n.length,i=u.length;for(;++t<d;){var s=qe(n[t],a[t]);if(s){if(t>=i)return s;var o=u[t];return s*("desc"==o?-1:1)}}return e.index-r.index}(e,r,u)})}function We(e){return cr(e)?e:tr(e)}function qe(e,r){if(e!==r){var u=void 0!==e,t=null===e,n=e==e,a=pr(e),d=void 0!==r,i=null===r,s=r==r,o=pr(r);if(!i&&!o&&!a&&e>r||a&&d&&s&&!i&&!o||t&&d&&s||!u&&s||!n)return 1;if(!t&&!a&&!o&&e<r||o&&u&&n&&!t&&!a||i&&u&&n||!d&&n||!s)return-1}return 0}function Je(e,r,u,t,n,i){var s=n&d,o=e.length,c=r.length;if(o!=c&&!(s&&c>o))return!1;var l=i.get(e);if(l&&i.get(r))return l==r;var g=-1,m=!0,f=n&a?new Pe:void 0;for(i.set(e,r),i.set(r,e);++g<o;){var x=e[g],p=r[g];if(t)var b=s?t(p,x,g,r,e,i):t(x,p,g,e,r,i);if(void 0!==b){if(b)continue;m=!1;break}if(f){if(!Z(r,function(e,r){if(!f.has(r)&&(x===e||u(x,e,t,n,i)))return f.add(r)})){m=!1;break}}else if(x!==p&&!u(x,p,t,n,i)){m=!1;break}}return i.delete(e),i.delete(r),m}function Ge(e,r){var u,t,n=e.__data__;return("string"==(t=typeof(u=r))||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==u:null===u)?n["string"==typeof r?"string":"hash"]:n.map}function Ke(e,r){var u=function(e,r){return null==e?void 0:e[r]}(e,r);return Le(u)?u:void 0}var Ye=function(e){return ne.call(e)};function Ve(e){return cr(e)||or(e)||!!(ce&&e&&e[ce])}function Xe(e,r){return!!(r=null==r?s:r)&&("number"==typeof e||M.test(e))&&e>-1&&e%1==0&&e<r}function Qe(e,r,u){if(!fr(u))return!1;var t=typeof r;return!!("number"==t?lr(u)&&Xe(r,u.length):"string"==t&&r in u)&&sr(u[r],e)}function er(e,r){if(cr(e))return!1;var u=typeof e;return!("number"!=u&&"symbol"!=u&&"boolean"!=u&&null!=e&&!pr(e))||(y.test(e)||!$.test(e)||null!=r&&e in Object(r))}function rr(e){return e==e&&!fr(e)}function ur(e,r){return function(u){return null!=u&&(u[e]===r&&(void 0!==r||e in Object(u)))}}(me&&Ye(new me(new ArrayBuffer(1)))!=v||fe&&Ye(new fe)!=p||xe&&"[object Promise]"!=Ye(xe.resolve())||pe&&Ye(new pe)!=R||be&&"[object WeakMap]"!=Ye(new be))&&(Ye=function(e){var r=ne.call(e),u=r==h?e.constructor:void 0,t=u?ar(u):void 0;if(t)switch(t){case Ne:return v;case Re:return p;case Ee:return"[object Promise]";case Te:return R;case Se:return"[object WeakMap]"}return r});var tr=ir(function(e){var r;e=null==(r=e)?"":function(e){if("string"==typeof e)return e;if(pr(e))return ye?ye.call(e):"";var r=e+"";return"0"==r&&1/e==-i?"-0":r}(r);var u=[];return _.test(e)&&u.push(""),e.replace(I,function(e,r,t,n){u.push(t?n.replace(C,"$1"):r||e)}),u});function nr(e){if("string"==typeof e||pr(e))return e;var r=e+"";return"0"==r&&1/e==-i?"-0":r}function ar(e){if(null!=e){try{return ue.call(e)}catch(e){}try{return e+""}catch(e){}}return""}var dr=function(e,r){return r=ge(void 0===r?e.length-1:r,0),function(){for(var u=arguments,t=-1,n=ge(u.length-r,0),a=Array(n);++t<n;)a[t]=u[r+t];t=-1;for(var d=Array(r+1);++t<r;)d[t]=u[t];return d[r]=a,function(e,r,u){switch(u.length){case 0:return e.call(r);case 1:return e.call(r,u[0]);case 2:return e.call(r,u[0],u[1]);case 3:return e.call(r,u[0],u[1],u[2])}return e.apply(r,u)}(e,this,d)}}(function(e,r){if(null==e)return[];var u=r.length;return u>1&&Qe(e,r[0],r[1])?r=[]:u>2&&Qe(r[0],r[1],r[2])&&(r=[r[0]]),Be(e,function e(r,u,t,n,a){var d=-1,i=r.length;for(t||(t=Ve),a||(a=[]);++d<i;){var s=r[d];u>0&&t(s)?u>1?e(s,u-1,t,n,a):j(a,s):n||(a[a.length]=s)}return a}(r,1),[])});function ir(e,r){if("function"!=typeof e||r&&"function"!=typeof r)throw new TypeError(t);var u=function(){var t=arguments,n=r?r.apply(this,t):t[0],a=u.cache;if(a.has(n))return a.get(n);var d=e.apply(this,t);return u.cache=a.set(n,d),d};return u.cache=new(ir.Cache||Ce),u}function sr(e,r){return e===r||e!=e&&r!=r}function or(e){return function(e){return xr(e)&&lr(e)}(e)&&te.call(e,"callee")&&(!se.call(e,"callee")||ne.call(e)==o)}ir.Cache=Ce;var cr=Array.isArray;function lr(e){return null!=e&&mr(e.length)&&!gr(e)}function gr(e){var r=fr(e)?ne.call(e):"";return r==f||r==x}function mr(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=s}function fr(e){var r=typeof e;return!!e&&("object"==r||"function"==r)}function xr(e){return!!e&&"object"==typeof e}function pr(e){return"symbol"==typeof e||xr(e)&&ne.call(e)==T}var br=H?B(H):function(e){return xr(e)&&mr(e.length)&&!!z[ne.call(e)]};function hr(e){return lr(e)?ze(e):Ze(e)}function Nr(e){return e}e.exports=dr}),parsers$2=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),bignumber.BigNumber.config({EXPONENTIAL_AT:[-5,15]});class u{constructor(e){this.config=e;let r=`${this.config.wordSeparatorToken}| -|${this.getKeyRegex(this.config.cardinalNumberMap)}|${this.getKeyRegex(this.config.ordinalNumberMap)}`;this.textNumberRegex=recognizersText.RegExpUtility.getSafeRegExp(String.raw`(?=\b)(${r})(?=\b)`,"gis"),this.arabicNumberRegex=recognizersText.RegExpUtility.getSafeRegExp(String.raw`\d+`,"is"),this.roundNumberSet=new Set,this.config.roundNumberMap.forEach((e,r)=>this.roundNumberSet.add(r))}parse(e){if(this.supportedTypes&&!this.supportedTypes.find(r=>r===e.type))return null;let r=null,u=e.data;u||(u=this.arabicNumberRegex.test(e.text)?"Num":this.config.langMarker);let t=!1,n=e.text.match(this.config.negativeNumberSignRegex);return n&&(t=!0,e.text=e.text.substr(n[1].length)),u.includes("Num")?r=this.digitNumberParse(e):u.includes(`Frac${this.config.langMarker}`)?r=this.fracLikeNumberParse(e):u.includes(this.config.langMarker)?r=this.textNumberParse(e):u.includes("Pow")&&(r=this.powerNumberParse(e)),r&&null!==r.value&&(t&&(r.text=n[1]+e.text,"number"==typeof r.value?r.value=-r.value:r.value.s=-1),r.resolutionStr=this.config.cultureInfo?this.config.cultureInfo.format(r.value):r.value.toString()),r}getKeyRegex(e){let r=new Array;return e.forEach((e,u)=>r.push(u)),lodash_sortby(r,e=>e.length).reverse().join("|")}digitNumberParse(e){let r={start:e.start,length:e.length,text:e.text,type:e.type},u=1,t=-1,n=0,a=e.text.toLowerCase(),d=recognizersText.RegExpUtility.getMatches(this.config.digitalNumberRegex,a);return d&&d.forEach(e=>{e.value=e.value.replace(/\d/g,""),e.length=e.value.length;let r=this.config.roundNumberMap.get(e.value);for(u*=r;(t=a.indexOf(e.value,n))>=0;){let r=lodash_trimend(a.substring(0,t));n=r.length,a=r+a.substring(t+e.length)}}),r.value=this.getDigitalValue(a,u),r}isDigit(e){return e>="0"&&e<="9"}fracLikeNumberParse(e){let r={start:e.start,length:e.length,text:e.text,type:e.type},u=e.text.toLowerCase();if(u.includes(this.config.fractionMarkerToken)){let e=u.indexOf(this.config.fractionMarkerToken),t=u.substring(0,e).trim(),n=u.substring(e+this.config.fractionMarkerToken.length,u.length).trim(),a=this.isDigit(t[0])?this.getDigitalValue(t,1):this.getIntValue(this.getMatches(t)),d=this.isDigit(n[0])?this.getDigitalValue(n,1):this.getIntValue(this.getMatches(n));r.value=a/d}else{let e=u.split(" ").filter(e=>e&&e.length),t=Array.from(this.config.normalizeTokenSet(e,r)),n=t.length-1,a=this.config.resolveCompositeNumber(t[n]),d=1;for(n=t.length-2;n>=0;n--){if(this.config.writtenFractionSeparatorTexts.indexOf(t[n])>-1||this.config.writtenIntegerSeparatorTexts.indexOf(t[n])>-1)continue;let e=a;a=this.config.resolveCompositeNumber(t[n]);let r=100;if(!(e>=r&&e>a||e<r&&this.isComposable(a,e))){n++;break}if(e<r&&a>=d)d=a;else if(e<r&&a<d){n++;break}if(0===n){for(n=1;n<=t.length-2;){if(this.config.resolveCompositeNumber(t[n])>=r&&!(this.config.writtenFractionSeparatorTexts.indexOf(t[n+1])>-1)&&this.config.resolveCompositeNumber(t[n+1])<r){n++;break}n++}break}}let i=new Array;for(let e=n;e<t.length;e++)if(t[e].indexOf("-")>-1){let r=t[e].split("-");i.push(r[0]),i.push("-"),i.push(r[1])}else i.push(t[e]);t.splice(n,t.length-n);let s=this.getIntValue(i),o=0,c=0,l=t.length;for(let e=t.length-1;e>=0;e--)if(e<t.length-1&&this.config.writtenFractionSeparatorTexts.indexOf(t[e])>-1){let r=t.slice(e+1,t.length).join(" ");o=this.getIntValue(this.getMatches(r)),l=e+1;break}let g=t.slice(0,l).join(" ");c=this.getIntValue(this.getMatches(g)),l!==t.length&&o<s?r.value=new bignumber.BigNumber(c).plus(new bignumber.BigNumber(o).dividedBy(s)):r.value=new bignumber.BigNumber(c+o).dividedBy(s)}return r}textNumberParse(e){let r={start:e.start,length:e.length,text:e.text,type:e.type},u=e.text.toLowerCase();u=u.replace(this.config.halfADozenRegex,this.config.halfADozenText);let t=this.splitMulti(u,Array.from(this.config.writtenDecimalSeparatorTexts)).filter(e=>e&&e.length>0),n=t[0],a=n?n.match(this.textNumberRegex).map(e=>e.toLowerCase()):new Array,d=this.getIntValue(a),i=0;if(2===t.length){let e=t[1].match(this.textNumberRegex).map(e=>e.toLowerCase());i+=this.getPointValue(e)}return r.value=d+i,r}powerNumberParse(e){let r={start:e.start,length:e.length,text:e.text,type:e.type},u=e.text.toUpperCase(),t=!e.text.includes("^"),n=new Array,a=new bignumber.BigNumber(10),d=!1,i=!1,s=new bignumber.BigNumber(0);for(let e=0;e<u.length;e++){let r=u[e];if("^"===r||"E"===r)i?n.push(s.negated()):n.push(s),s=new bignumber.BigNumber(0),a=new bignumber.BigNumber(10),d=!1,i=!1;else if(r.charCodeAt(0)-48>=0&&r.charCodeAt(0)-48<=9)d?(s=s.plus(a.times(r.charCodeAt(0)-48)),a=a.times(.1)):s=s.times(a).plus(r.charCodeAt(0)-48);else if(r===this.config.decimalSeparatorChar)d=!0,a=new bignumber.BigNumber(.1);else if("-"===r)i=!i;else if("+"===r)continue;e===u.length-1&&(i?n.push(s.negated()):n.push(s))}let o=0;return o=t?n.shift().times(Math.pow(10,n.shift().toNumber())).toNumber():Math.pow(n.shift().toNumber(),n.shift().toNumber()),r.value=o,r.resolutionStr=o.toString(),r}splitMulti(e,r){let u=r[0];for(let t=0;t<r.length;t++)e=e.split(r[t]).join(u);return e.split(u)}getMatches(e){return(e.match(this.textNumberRegex)||[]).map(e=>e.toLowerCase())}isComposable(e,r){let u=r>10?100:10;return e%u==0&&e/u>=1}getIntValue(e){let r=new Array(e.length);for(let e=0;e<r.length;e++)r[e]=!1;let u=0,t=1;for(let u=e.length-1;u>=0;u--)if(this.roundNumberSet.has(e[u])){if(t>this.config.roundNumberMap.get(e[u]))continue;r[u]=!0,t=this.config.roundNumberMap.get(e[u])}if(1===t){let r=new Array,t="";e.forEach(e=>{let u=this.config.cardinalNumberMap.has(e),n=this.config.ordinalNumberMap.has(e);if(u||n){let a=u?this.config.cardinalNumberMap.get(e):this.config.ordinalNumberMap.get(e);if(n){let u=this.config.ordinalNumberMap.get(e);if(r.length>0){let e=r.pop();if(e>=u)r.push(e+u);else{for(;r.length>0;)e+=r.pop();r.push(e*u)}}else r.push(u)}else if(this.config.cardinalNumberMap.has(e))if("-"===t){let e=r.pop()+a;r.push(e)}else if(t===this.config.writtenIntegerSeparatorTexts[0]||r.length<2)r.push(a);else if(r.length>=2){let e=r.pop()+a;e=r.pop()+e,r.push(e)}}else{let u=this.config.resolveCompositeNumber(e);0!==u&&r.push(u)}t=e}),r.forEach(e=>{u+=e})}else{let t=0,n=1,a=1;for(let d=0;d<r.length;d++)r[d]&&(n=this.config.roundNumberMap.get(e[d]),a=1,0!==d&&(a=this.getIntValue(e.slice(t,d))),u+=n*a,t=d+1);n=1,t!==r.length&&(a=this.getIntValue(e.slice(t,r.length)),u+=n*a)}return u}getPointValue(e){let r=0,u=e[0];if(this.config.cardinalNumberMap.has(u)&&this.config.cardinalNumberMap.get(u)>=10){let u="0.",t=this.getIntValue(e);r=parseFloat(u+t)}else{let u=new bignumber.BigNumber(.1);for(let t=0;t<e.length;t++)r+=u.times(this.config.cardinalNumberMap.get(e[t])).toNumber(),u=u.times(.1)}return r}skipNonDecimalSeparator(e,r,u){var t=recognizersText.RegExpUtility.getSafeRegExp(String.raw`^(en|es|fr)(-)?\b`,"is");return e==this.config.nonDecimalSeparatorChar&&!(r<=3&&null!==t.exec(u.code))}getDigitalValue(e,r){let u=new bignumber.BigNumber(0),t=new bignumber.BigNumber(10),n=!1;var a=e.length;let d=!1,i=e.includes("/"),s=new Array;for(let r=0;r<e.length;r++){let c=e[r];var o=this.skipNonDecimalSeparator(c,a-r,this.config.cultureInfo);(i||" "!==c&&!o)&&(" "===c||"/"===c?(s.push(u),u=new bignumber.BigNumber(0)):c>="0"&&c<="9"?n?(u=u.plus(t.times(c.charCodeAt(0)-48)),t=t.times(.1)):u=u.times(t).plus(c.charCodeAt(0)-48):c===this.config.decimalSeparatorChar||!o&&c==this.config.nonDecimalSeparatorChar?(n=!0,t=new bignumber.BigNumber(.1)):"-"===c&&(d=!0))}s.push(u);let c=new bignumber.BigNumber(0);if(i){let e=s.pop(),r=s.pop();c=c.plus(r.dividedBy(e))}for(;s.length>0;)c=c.plus(s.pop());return c=c.times(r),d?c.negated().toNumber():c.toNumber()}}r.BaseNumberParser=u;r.BasePercentageParser=class extends u{parse(e){let r=e.text;e.data&&e.data instanceof Array&&(e.text=e.data[0],e.data=e.data[1].data);let u=super.parse(e);return u.resolutionStr&&u.resolutionStr.length>0&&(u.resolutionStr.trim().endsWith("%")||(u.resolutionStr=u.resolutionStr.trim()+"%")),u.data=e.text,u.text=r,u}}});unwrapExports(parsers$2);var cjkParsers=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});const u=recognizersText;r.BaseCJKNumberParser=class extends parsers$2.BaseNumberParser{constructor(e){super(e),this.config=e}toString(e){return this.config.cultureInfo?this.config.cultureInfo.format(e):e.toString()}parse(e){let r,u="";u=e.data;let t={start:e.start,length:e.length,data:e.data,text:this.replaceTraditionalWithSimplified(e.text),type:e.type};return u?(u.includes("Per")?r=this.perParseCJK(t):u.includes("Num")?(t.text=this.replaceFullWithHalf(t.text),r=this.digitNumberParse(t),this.config.negativeNumberSignRegex.test(t.text)&&r.value>0&&(r.value=-r.value),r.resolutionStr=this.toString(r.value)):u.includes("Pow")?(t.text=this.replaceFullWithHalf(t.text),(r=this.powerNumberParse(t)).resolutionStr=this.toString(r.value)):u.includes("Frac")?r=this.fracParseCJK(t):u.includes("Dou")?r=this.douParseCJK(t):u.includes("Integer")?r=this.intParseCJK(t):u.includes("Ordinal")&&(r=this.ordParseCJK(t)),r&&(r.text=e.text),r):r}replaceTraditionalWithSimplified(e){if(u.StringUtility.isNullOrWhitespace(e))return e;if(null==this.config.tratoSimMap)return e;let r="";for(let u=0;u<e.length;u++)r=r.concat(this.config.tratoSimMap.get(e.charAt(u))||e.charAt(u));return r}replaceFullWithHalf(e){if(u.StringUtility.isNullOrWhitespace(e))return e;let r="";for(let u=0;u<e.length;u++)r=r.concat(this.config.fullToHalfMap.get(e.charAt(u))||e.charAt(u));return r}replaceUnit(e){if(u.StringUtility.isNullOrEmpty(e))return e;let r=e;return this.config.unitMap.forEach((e,u)=>{r=r.replace(new RegExp(u,"g"),e)}),r}perParseCJK(e){let r=new recognizersText.ParseResult(e),t=e.text,n=1;if(e.data.includes("Spe"))if(t=this.replaceFullWithHalf(t),"半額"===(t=this.replaceUnit(t))||"半折"===t||"半折"===t)r.value=50;else if("10成"===t||"10割"===t||"十割"===t)r.value=100;else{let e,n=u.RegExpUtility.getMatches(this.config.speGetNumberRegex,t);if(2===n.length){let u=n[0].value.charAt(0);e="対"===u||"对"===u?5:"十"===u||"拾"===u?10:this.config.zeroToNineMap.get(u);let t,a=n[1].value.charAt(0);t="半"===a?.5:.1*this.config.zeroToNineMap.get(a),r.value=10*(e+t)}else if(5===n.length){let u=n[0].value.charAt(0),t=n[1].value.charAt(0),a=n[3].value.charAt(0),d=.1*this.config.zeroToNineMap.get(t),i=.01*this.config.zeroToNineMap.get(a);e=this.config.zeroToNineMap.get(u),r.value=10*(e+d+i)}else{let u=n[0].value.charAt(0);e="対"===u||"对"===u?5:"十"===u||"拾"===u?10:this.config.zeroToNineMap.get(u),r.value=10*e}}else if(e.data.includes("Num")){let e=u.RegExpUtility.getMatches(this.config.percentageRegex,t).pop().value;(e.includes("k")||e.includes("K")||e.includes("ｋ")||e.includes("Ｋ"))&&(n=1e3),(e.includes("M")||e.includes("Ｍ"))&&(n=1e6),(e.includes("G")||e.includes("Ｇ"))&&(n=1e9),(e.includes("T")||e.includes("Ｔ"))&&(n=1e12),r.value=this.getDigitValueCJK(t,n)}else{let e=u.RegExpUtility.getMatches(this.config.percentageRegex,t).pop(),n=this.replaceUnit(e.value),a=u.RegExpUtility.split(this.config.pointRegex,n);""===a[0]&&(a[0]="零");let d=this.getIntValueCJK(a[0]);2===a.length&&(u.RegExpUtility.isMatch(this.config.negativeNumberSignRegex,a[0])?d-=this.getPointValueCJK(a[1]):d+=this.getPointValueCJK(a[1])),r.value=d}return r.resolutionStr=this.toString(r.value)+"%",r}fracParseCJK(e){let r=new recognizersText.ParseResult(e),t=e.text,n=u.RegExpUtility.split(this.config.fracSplitRegex,t),a="",d="",i="";3===n.length?(a=n[0]||"",d=n[1]||"",i=n[2]||""):(a="零",d=n[0]||"",i=n[1]||"");let s=this.isDigitCJK(a)?this.getDigitValueCJK(a,1):this.getIntValueCJK(a),o=this.isDigitCJK(i)?this.getDigitValueCJK(i,1):this.getIntValueCJK(i),c=this.isDigitCJK(d)?this.getDigitValueCJK(d,1):this.getIntValueCJK(d);return u.RegExpUtility.isMatch(this.config.negativeNumberSignRegex,a)?r.value=s-o/c:r.value=s+o/c,r.resolutionStr=this.toString(r.value),r}douParseCJK(e){let r=new recognizersText.ParseResult(e),t=e.text;if(u.RegExpUtility.isMatch(this.config.doubleAndRoundRegex,t)){t=this.replaceUnit(t);let e=this.config.roundNumberMapChar.get(t.charAt(t.length-1));r.value=this.getDigitValueCJK(t.substr(0,t.length-1),e)}else{t=this.replaceUnit(t);let e=u.RegExpUtility.split(this.config.pointRegex,t);""===e[0]&&(e[0]="零"),u.RegExpUtility.isMatch(this.config.negativeNumberSignRegex,e[0])?r.value=this.getIntValueCJK(e[0])-this.getPointValueCJK(e[1]):r.value=this.getIntValueCJK(e[0])+this.getPointValueCJK(e[1])}return r.resolutionStr=this.toString(r.value),r}intParseCJK(e){let r=new recognizersText.ParseResult(e);return r.value=this.getIntValueCJK(e.text),r.resolutionStr=this.toString(r.value),r}ordParseCJK(e){let r=new recognizersText.ParseResult(e),t=e.text.substr(1);return u.RegExpUtility.isMatch(this.config.digitNumRegex,t)&&!u.RegExpUtility.isMatch(this.config.roundNumberIntegerRegex,t)?r.value=this.getDigitValueCJK(t,1):r.value=this.getIntValueCJK(t),r.resolutionStr=this.toString(r.value),r}getDigitValueCJK(e,r){let t=!1,n=e;u.RegExpUtility.isMatch(this.config.negativeNumberSignRegex,n)&&(t=!0,n=n.substr(1)),n=this.replaceFullWithHalf(n);let a=this.getDigitalValue(n,r);return t&&(a=-a),a}getIntValueCJK(e){let r=e,t=!1,n=!1;u.RegExpUtility.isMatch(this.config.dozenRegex,r)?(t=!0,this.config.cultureInfo.code.toLowerCase()===culture$2.Culture.Chinese?r=r.substr(0,r.length-1):this.config.cultureInfo.code.toLowerCase()===culture$2.Culture.Japanese&&(r=r.substr(0,r.length-3))):u.RegExpUtility.isMatch(this.config.pairRegex,r)&&(n=!0,r=r.substr(0,r.length-1)),r=this.replaceUnit(r);let a=0,d=0,i=0,s=!1,o=-1,c=1,l=!1,g=!1;u.RegExpUtility.isMatch(this.config.negativeNumberSignRegex,r)&&(l=!0,r=r.substr(1));for(let e=0;e<r.length;e++){let u=r.charAt(e);if(this.config.roundNumberMapChar.has(u)){let t=this.config.roundNumberMapChar.get(u);g||(i=1),-1!==o&&t>o?(s?(a+=d*t,s=!1):a+=(d+=i*c)*t,o=-1,d=0):(s=!0,d+=i*t,o=t,(e===r.length-1||this.config.roundDirectList.some(e=>e===u))&&(a+=d,d=0)),g=!1,i=0,c=t/10}else this.config.zeroToNineMap.has(u)&&(g=!0,e!==r.length-1?"零"!==u||this.config.roundNumberMapChar.has(r.charAt(e+1))?(i=10*i+this.config.zeroToNineMap.get(u),s=!1):c=1:(e===r.length-1&&this.config.cultureInfo.code.toLowerCase()===culture$2.Culture.Japanese&&(c=1),d+=10*i,a+=d+=this.config.zeroToNineMap.get(u)*c,d=0))}return l&&(a=-a),t&&(a*=12),n&&(a*=2),a}getPointValueCJK(e){let r=0,u=.1;for(let t=0;t<e.length;t++)r+=u*this.config.zeroToNineMap.get(e.charAt(t)),u*=.1;return r}isDigitCJK(e){return!u.StringUtility.isNullOrEmpty(e)&&u.RegExpUtility.isMatch(this.config.digitNumRegex,e)}}});unwrapExports(cjkParsers);var agnosticNumberParser=createCommonjsModule(function(e,r){"use strict";var u;Object.defineProperty(r,"__esModule",{value:!0}),function(e){e[e.Cardinal=0]="Cardinal",e[e.Double=1]="Double",e[e.Fraction=2]="Fraction",e[e.Integer=3]="Integer",e[e.Number=4]="Number",e[e.Ordinal=5]="Ordinal",e[e.Percentage=6]="Percentage"}(u=r.AgnosticNumberParserType||(r.AgnosticNumberParserType={}));r.AgnosticNumberParserFactory=class{static getParser(e,r){let t,n=r.cultureInfo.code.toLowerCase()===culture$2.Culture.Chinese,a=r.cultureInfo.code.toLowerCase()===culture$2.Culture.Japanese;switch(t=n?new cjkParsers.BaseCJKNumberParser(r):a?new cjkParsers.BaseCJKNumberParser(r):new parsers$2.BaseNumberParser(r),e){case u.Cardinal:t.supportedTypes=[constants.Constants.SYS_NUM_CARDINAL,constants.Constants.SYS_NUM_INTEGER,constants.Constants.SYS_NUM_DOUBLE];break;case u.Double:t.supportedTypes=[constants.Constants.SYS_NUM_DOUBLE];break;case u.Fraction:t.supportedTypes=[constants.Constants.SYS_NUM_FRACTION];break;case u.Integer:t.supportedTypes=[constants.Constants.SYS_NUM_INTEGER];break;case u.Ordinal:t.supportedTypes=[constants.Constants.SYS_NUM_ORDINAL];break;case u.Percentage:n||a||(t=new parsers$2.BasePercentageParser(r))}return t}}});unwrapExports(agnosticNumberParser);var baseNumbers=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),function(e){e.NumberReplaceToken="@builtin.num",e.FractionNumberReplaceToken="@builtin.num.fraction",e.IntegerRegexDefinition=((e,r)=>`(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!(\\d+\\.|\\d+,))))\\d{1,3}(${r}\\d{3})+(?=${e})`),e.DoubleRegexDefinition=((e,r,u)=>`(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+\\.|\\d+,)))\\d{1,3}(${r}\\d{3})+${u}\\d+(?=${e})`),e.PlaceHolderDefault="\\D|\\b"}(r.BaseNumbers||(r.BaseNumbers={}))});unwrapExports(baseNumbers);var englishNumeric=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),function(e){e.LangMarker="Eng",e.RoundNumberIntegerRegex="(hundred|thousand|million|billion|trillion)",e.ZeroToNineIntegerRegex="(three|seven|eight|four|five|zero|nine|one|two|six)",e.NegativeNumberTermsRegex="((minus|negative)\\s+)",e.NegativeNumberSignRegex=`^${e.NegativeNumberTermsRegex}.*`,e.AnIntRegex="(an|a)(?=\\s)",e.TenToNineteenIntegerRegex="(seventeen|thirteen|fourteen|eighteen|nineteen|fifteen|sixteen|eleven|twelve|ten)",e.TensNumberIntegerRegex="(seventy|twenty|thirty|eighty|ninety|forty|fifty|sixty)",e.SeparaIntRegex=`(((${e.TenToNineteenIntegerRegex}|(${e.TensNumberIntegerRegex}(\\s+(and\\s+)?|\\s*-\\s*)${e.ZeroToNineIntegerRegex})|${e.TensNumberIntegerRegex}|${e.ZeroToNineIntegerRegex})(\\s+${e.RoundNumberIntegerRegex})*))|((${e.AnIntRegex}(\\s+${e.RoundNumberIntegerRegex})+))`,e.AllIntRegex=`((((${e.TenToNineteenIntegerRegex}|(${e.TensNumberIntegerRegex}(\\s+(and\\s+)?|\\s*-\\s*)${e.ZeroToNineIntegerRegex})|${e.TensNumberIntegerRegex}|${e.ZeroToNineIntegerRegex}|${e.AnIntRegex})(\\s+${e.RoundNumberIntegerRegex})+)\\s+(and\\s+)?)*${e.SeparaIntRegex})`,e.PlaceHolderPureNumber="\\b",e.PlaceHolderDefault="\\D|\\b",e.NumbersWithPlaceHolder=(e=>`(((?<!\\d+\\s*)-\\s*)|(?<=\\b))\\d+(?!([\\.,]\\d+[a-zA-Z]))(?=${e})`),e.NumbersWithSuffix="(((?<!\\d+\\s*)-\\s*)|(?<=\\b))\\d+\\s*(K|k|M|T|G)(?=\\b)",e.RoundNumberIntegerRegexWithLocks=`(?<=\\b)\\d+\\s+${e.RoundNumberIntegerRegex}(?=\\b)`,e.NumbersWithDozenSuffix="(((?<!\\d+\\s*)-\\s*)|(?<=\\b))\\d+\\s+dozen(s)?(?=\\b)",e.AllIntRegexWithLocks=`((?<=\\b)${e.AllIntRegex}(?=\\b))`,e.AllIntRegexWithDozenSuffixLocks=`(?<=\\b)(((half\\s+)?a\\s+dozen)|(${e.AllIntRegex}\\s+dozen(s)?))(?=\\b)`,e.RoundNumberOrdinalRegex="(hundredth|thousandth|millionth|billionth|trillionth)",e.BasicOrdinalRegex="(first|second|third|fourth|fifth|sixth|seventh|eighth|ninth|tenth|eleventh|twelfth|thirteenth|fourteenth|fifteenth|sixteenth|seventeenth|eighteenth|nineteenth|twentieth|thirtieth|fortieth|fiftieth|sixtieth|seventieth|eightieth|ninetieth)",e.SuffixBasicOrdinalRegex=`(((((${e.TensNumberIntegerRegex}(\\s+(and\\s+)?|\\s*-\\s*)${e.ZeroToNineIntegerRegex})|${e.TensNumberIntegerRegex}|${e.ZeroToNineIntegerRegex}|${e.AnIntRegex})(\\s+${e.RoundNumberIntegerRegex})+)\\s+(and\\s+)?)*(${e.TensNumberIntegerRegex}(\\s+|\\s*-\\s*))?${e.BasicOrdinalRegex})`,e.SuffixRoundNumberOrdinalRegex=`((${e.AllIntRegex}\\s+)${e.RoundNumberOrdinalRegex})`,e.AllOrdinalRegex=`(${e.SuffixBasicOrdinalRegex}|${e.SuffixRoundNumberOrdinalRegex})`,e.OrdinalSuffixRegex="(?<=\\b)((\\d*(1st|2nd|3rd|4th|5th|6th|7th|8th|9th|0th))|(11th|12th))(?=\\b)",e.OrdinalNumericRegex="(?<=\\b)(\\d{1,3}(\\s*,\\s*\\d{3})*\\s*th)(?=\\b)",e.OrdinalRoundNumberRegex=`(?<!(a|an)\\s+)${e.RoundNumberOrdinalRegex}`,e.OrdinalEnglishRegex=`(?<=\\b)${e.AllOrdinalRegex}(?=\\b)`,e.FractionNotationWithSpacesRegex="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s+\\d+[/]\\d+(?=(\\b[^/]|$))",e.FractionNotationRegex="(((?<=\\W|^)-\\s*)|(?<![/-])(?<=\\b))\\d+[/]\\d+(?=(\\b[^/]|$))",e.FractionNounRegex=`(?<=\\b)(${e.AllIntRegex}\\s+(and\\s+)?)?(${e.AllIntRegex})(\\s+|\\s*-\\s*)(((${e.AllOrdinalRegex})|(${e.RoundNumberOrdinalRegex}))s|halves|quarters)(?=\\b)`,e.FractionNounWithArticleRegex=`(?<=\\b)(${e.AllIntRegex}\\s+(and\\s+)?)?(a|an|one)(\\s+|\\s*-\\s*)(?!\\bfirst\\b|\\bsecond\\b)((${e.AllOrdinalRegex})|(${e.RoundNumberOrdinalRegex})|half|quarter)(?=\\b)`,e.FractionPrepositionRegex=`(?<=\\b)(?<numerator>(${e.AllIntRegex})|((?<![\\.,])\\d+))\\s+(over|in|out\\s+of)\\s+(?<denominator>(${e.AllIntRegex})|(\\d+)(?![\\.,]))(?=\\b)`,e.FractionPrepositionWithinPercentModeRegex=`(?<=\\b)(?<numerator>(${e.AllIntRegex})|((?<![\\.,])\\d+))\\s+over\\s+(?<denominator>(${e.AllIntRegex})|(\\d+)(?![\\.,]))(?=\\b)`,e.AllPointRegex=`((\\s+${e.ZeroToNineIntegerRegex})+|(\\s+${e.SeparaIntRegex}))`,e.AllFloatRegex=`${e.AllIntRegex}(\\s+point)${e.AllPointRegex}`,e.DoubleWithMultiplierRegex="(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+[\\.,])))\\d+[\\.,]\\d+\\s*(K|k|M|G|T|B|b)(?=\\b)",e.DoubleExponentialNotationRegex="(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+[\\.,])))(\\d+([\\.,]\\d+)?)e([+-]*[1-9]\\d*)(?=\\b)",e.DoubleCaretExponentialNotationRegex="(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+[\\.,])))(\\d+([\\.,]\\d+)?)\\^([+-]*[1-9]\\d*)(?=\\b)",e.DoubleDecimalPointRegex=(e=>`(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+[\\.,])))\\d+[\\.,]\\d+(?!([\\.,]\\d+))(?=${e})`),e.DoubleWithoutIntegralRegex=(e=>`(?<=\\s|^)(?<!(\\d+))[\\.,]\\d+(?!([\\.,]\\d+))(?=${e})`),e.DoubleWithRoundNumber=`(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+[\\.,])))\\d+[\\.,]\\d+\\s+${e.RoundNumberIntegerRegex}(?=\\b)`,e.DoubleAllFloatRegex=`((?<=\\b)${e.AllFloatRegex}(?=\\b))`,e.CurrencyRegex="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s*(B|b|m|t|g)(?=\\b)",e.ConnectorRegex="(?<spacer>and)",e.NumberWithSuffixPercentage=`(?<!%)(${baseNumbers.BaseNumbers.NumberReplaceToken})(\\s*)(%(?!${baseNumbers.BaseNumbers.NumberReplaceToken})|(per cents|per cent|cents|cent|percentage|percents|percent)\\b)`,e.FractionNumberWithSuffixPercentage=`((${baseNumbers.BaseNumbers.FractionNumberReplaceToken})\\s+of)`,e.NumberWithPrefixPercentage=`(per cent of|percent of|percents of)(\\s*)(${baseNumbers.BaseNumbers.NumberReplaceToken})`,e.NumberWithPrepositionPercentage=`(${baseNumbers.BaseNumbers.NumberReplaceToken})\\s*(in|out\\s+of)\\s*(${baseNumbers.BaseNumbers.NumberReplaceToken})`,e.TillRegex="(to|through|--|-|—|——|~|–)",e.MoreRegex="((bigger|greater|more|higher|larger)(\\s+than)?|above|over|(?<!<|=)>)",e.LessRegex="((less|lower|smaller|fewer)(\\s+than)?|below|under|(?<!>|=)<)",e.EqualRegex="(equal(s|ing)?(\\s+(to|than))?|(?<!<|>)=)",e.MoreOrEqualPrefix=`((no\\s+${e.LessRegex})|(at\\s+least))`,e.MoreOrEqual=`((${e.MoreRegex}\\s+(or)?\\s+${e.EqualRegex})|(${e.EqualRegex}\\s+(or)?\\s+${e.MoreRegex})|${e.MoreOrEqualPrefix}(\\s+(or)?\\s+${e.EqualRegex})?|(${e.EqualRegex}\\s+(or)?\\s+)?${e.MoreOrEqualPrefix}|>\\s*=)`,e.MoreOrEqualSuffix="((and|or)\\s+(more|greater|higher|larger|bigger)((?!\\s+than)|(\\s+than(?!(\\s*\\d+)))))",e.LessOrEqualPrefix=`((no\\s+${e.MoreRegex})|(at\\s+most))`,e.LessOrEqual=`((${e.LessRegex}\\s+(or)?\\s+${e.EqualRegex})|(${e.EqualRegex}\\s+(or)?\\s+${e.LessRegex})|${e.LessOrEqualPrefix}(\\s+(or)?\\s+${e.EqualRegex})?|(${e.EqualRegex}\\s+(or)?\\s+)?${e.LessOrEqualPrefix}|<\\s*=)`,e.LessOrEqualSuffix="((and|or)\\s+(less|lower|smaller|fewer)((?!\\s+than)|(\\s+than(?!(\\s*\\d+)))))",e.NumberSplitMark="(?![,.](?!\\d+))",e.MoreRegexNoNumberSucceed="((bigger|greater|more|higher|larger)((?!\\s+than)|\\s+(than(?!(\\s*\\d+))))|(above|over)(?!(\\s*\\d+)))",e.LessRegexNoNumberSucceed="((less|lower|smaller|fewer)((?!\\s+than)|\\s+(than(?!(\\s*\\d+))))|(below|under)(?!(\\s*\\d+)))",e.EqualRegexNoNumberSucceed="(equal(s|ing)?((?!\\s+(to|than))|(\\s+(to|than)(?!(\\s*\\d+)))))",e.OneNumberRangeMoreRegex1=`(${e.MoreOrEqual}|${e.MoreRegex})\\s*(the\\s+)?(?<number1>(${e.NumberSplitMark}.)+)`,e.OneNumberRangeMoreRegex2=`(?<number1>(${e.NumberSplitMark}.)+)\\s*${e.MoreOrEqualSuffix}`,e.OneNumberRangeMoreSeparateRegex=`(${e.EqualRegex}\\s+(?<number1>(${e.NumberSplitMark}.)+)(\\s+or\\s+)${e.MoreRegexNoNumberSucceed})|(${e.MoreRegex}\\s+(?<number1>(${e.NumberSplitMark}.)+)(\\s+or\\s+)${e.EqualRegexNoNumberSucceed})`,e.OneNumberRangeLessRegex1=`(${e.LessOrEqual}|${e.LessRegex})\\s*(the\\s+)?(?<number2>(${e.NumberSplitMark}.)+)`,e.OneNumberRangeLessRegex2=`(?<number2>(${e.NumberSplitMark}.)+)\\s*${e.LessOrEqualSuffix}`,e.OneNumberRangeLessSeparateRegex=`(${e.EqualRegex}\\s+(?<number1>(${e.NumberSplitMark}.)+)(\\s+or\\s+)${e.LessRegexNoNumberSucceed})|(${e.LessRegex}\\s+(?<number1>(${e.NumberSplitMark}.)+)(\\s+or\\s+)${e.EqualRegexNoNumberSucceed})`,e.OneNumberRangeEqualRegex=`${e.EqualRegex}\\s*(the\\s+)?(?<number1>(${e.NumberSplitMark}.)+)`,e.TwoNumberRangeRegex1=`between\\s*(the\\s+)?(?<number1>(${e.NumberSplitMark}.)+)\\s*and\\s*(the\\s+)?(?<number2>(${e.NumberSplitMark}.)+)`,e.TwoNumberRangeRegex2=`(${e.OneNumberRangeMoreRegex1}|${e.OneNumberRangeMoreRegex2})\\s*(and|but|,)\\s*(${e.OneNumberRangeLessRegex1}|${e.OneNumberRangeLessRegex2})`,e.TwoNumberRangeRegex3=`(${e.OneNumberRangeLessRegex1}|${e.OneNumberRangeLessRegex2})\\s*(and|but|,)\\s*(${e.OneNumberRangeMoreRegex1}|${e.OneNumberRangeMoreRegex2})`,e.TwoNumberRangeRegex4=`(from\\s+)?(?<number1>(${e.NumberSplitMark}(?!\\bfrom\\b).)+)\\s*${e.TillRegex}\\s*(the\\s+)?(?<number2>(${e.NumberSplitMark}.)+)`,e.AmbiguousFractionConnectorsRegex="(\\bin\\b)",e.DecimalSeparatorChar=".",e.FractionMarkerToken="over",e.NonDecimalSeparatorChar=",",e.HalfADozenText="six",e.WordSeparatorToken="and",e.WrittenDecimalSeparatorTexts=["point"],e.WrittenGroupSeparatorTexts=["punto"],e.WrittenIntegerSeparatorTexts=["and"],e.WrittenFractionSeparatorTexts=["and"],e.HalfADozenRegex="half\\s+a\\s+dozen",e.DigitalNumberRegex="((?<=\\b)(hundred|thousand|million|billion|trillion|dozen(s)?)(?=\\b))|((?<=(\\d|\\b))(k|t|m|g|b)(?=\\b))",e.CardinalNumberMap=new Map([["a",1],["zero",0],["an",1],["one",1],["two",2],["three",3],["four",4],["five",5],["six",6],["seven",7],["eight",8],["nine",9],["ten",10],["eleven",11],["twelve",12],["dozen",12],["dozens",12],["thirteen",13],["fourteen",14],["fifteen",15],["sixteen",16],["seventeen",17],["eighteen",18],["nineteen",19],["twenty",20],["thirty",30],["forty",40],["fifty",50],["sixty",60],["seventy",70],["eighty",80],["ninety",90],["hundred",100],["thousand",1e3],["million",1e6],["billion",1e9],["trillion",1e12]]),e.OrdinalNumberMap=new Map([["first",1],["second",2],["secondary",2],["half",2],["third",3],["fourth",4],["quarter",4],["fifth",5],["sixth",6],["seventh",7],["eighth",8],["ninth",9],["tenth",10],["eleventh",11],["twelfth",12],["thirteenth",13],["fourteenth",14],["fifteenth",15],["sixteenth",16],["seventeenth",17],["eighteenth",18],["nineteenth",19],["twentieth",20],["thirtieth",30],["fortieth",40],["fiftieth",50],["sixtieth",60],["seventieth",70],["eightieth",80],["ninetieth",90],["hundredth",100],["thousandth",1e3],["millionth",1e6],["billionth",1e9],["trillionth",1e12],["firsts",1],["halves",2],["thirds",3],["fourths",4],["quarters",4],["fifths",5],["sixths",6],["sevenths",7],["eighths",8],["ninths",9],["tenths",10],["elevenths",11],["twelfths",12],["thirteenths",13],["fourteenths",14],["fifteenths",15],["sixteenths",16],["seventeenths",17],["eighteenths",18],["nineteenths",19],["twentieths",20],["thirtieths",30],["fortieths",40],["fiftieths",50],["sixtieths",60],["seventieths",70],["eightieths",80],["ninetieths",90],["hundredths",100],["thousandths",1e3],["millionths",1e6],["billionths",1e9],["trillionths",1e12]]),e.RoundNumberMap=new Map([["hundred",100],["thousand",1e3],["million",1e6],["billion",1e9],["trillion",1e12],["hundredth",100],["thousandth",1e3],["millionth",1e6],["billionth",1e9],["trillionth",1e12],["hundredths",100],["thousandths",1e3],["millionths",1e6],["billionths",1e9],["trillionths",1e12],["dozen",12],["dozens",12],["k",1e3],["m",1e6],["g",1e9],["b",1e9],["t",1e12]]),e.AmbiguityFiltersDict=new Map([["\\bone\\b","\\b(the|this|that|which)\\s+(one)\\b"]])}(r.EnglishNumeric||(r.EnglishNumeric={}))});unwrapExports(englishNumeric);var parserConfiguration=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.EnglishNumberParserConfiguration=class{constructor(e){e||(e=new culture$2.CultureInfo(culture$2.Culture.English)),this.cultureInfo=e,this.langMarker=englishNumeric.EnglishNumeric.LangMarker,this.decimalSeparatorChar=englishNumeric.EnglishNumeric.DecimalSeparatorChar,this.fractionMarkerToken=englishNumeric.EnglishNumeric.FractionMarkerToken,this.nonDecimalSeparatorChar=englishNumeric.EnglishNumeric.NonDecimalSeparatorChar,this.halfADozenText=englishNumeric.EnglishNumeric.HalfADozenText,this.wordSeparatorToken=englishNumeric.EnglishNumeric.WordSeparatorToken,this.writtenDecimalSeparatorTexts=englishNumeric.EnglishNumeric.WrittenDecimalSeparatorTexts,this.writtenGroupSeparatorTexts=englishNumeric.EnglishNumeric.WrittenGroupSeparatorTexts,this.writtenIntegerSeparatorTexts=englishNumeric.EnglishNumeric.WrittenIntegerSeparatorTexts,this.writtenFractionSeparatorTexts=englishNumeric.EnglishNumeric.WrittenFractionSeparatorTexts,this.cardinalNumberMap=englishNumeric.EnglishNumeric.CardinalNumberMap,this.ordinalNumberMap=englishNumeric.EnglishNumeric.OrdinalNumberMap,this.roundNumberMap=englishNumeric.EnglishNumeric.RoundNumberMap,this.negativeNumberSignRegex=recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.NegativeNumberSignRegex,"is"),this.halfADozenRegex=recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.HalfADozenRegex,"gis"),this.digitalNumberRegex=recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.DigitalNumberRegex,"gis")}normalizeTokenSet(e,r){let u=new Array,t=Array.from(e),n=t.length;for(let e=0;e<n;e++)if(t[e].includes("-")){let r=t[e].split("-");2===r.length&&this.ordinalNumberMap.has(r[1])?(u.push(r[0]),u.push(r[1])):u.push(t[e])}else e<n-2&&"-"===t[e+1]?(this.ordinalNumberMap.has(t[e+2])?(u.push(t[e]),u.push(t[e+2])):u.push(t[e]+t[e+1]+t[e+2]),e+=2):u.push(t[e]);return u}resolveCompositeNumber(e){if(e.includes("-")){let r=e.split("-"),u=0;return r.forEach(e=>{this.ordinalNumberMap.has(e)?u+=this.ordinalNumberMap.get(e):this.cardinalNumberMap.has(e)&&(u+=this.cardinalNumberMap.get(e))}),u}return this.ordinalNumberMap.has(e)?this.ordinalNumberMap.get(e):this.cardinalNumberMap.has(e)?this.cardinalNumberMap.get(e):0}}});unwrapExports(parserConfiguration);var spanishNumeric=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),function(e){e.LangMarker="Spa",e.HundredsNumberIntegerRegex="(cuatrocient[ao]s|trescient[ao]s|seiscient[ao]s|setecient[ao]s|ochocient[ao]s|novecient[ao]s|doscient[ao]s|quinient[ao]s|(?<!por\\s+)(cien(to)?))",e.RoundNumberIntegerRegex="(mil millones|mil|millones|mill[oó]n|billones|bill[oó]n|trillones|trill[oó]n|cuatrillones|cuatrill[oó]n|quintillones|quintill[oó]n|sextillones|sextill[oó]n|septillones|septill[oó]n)",e.ZeroToNineIntegerRegex="(cuatro|cinco|siete|nueve|cero|tres|seis|ocho|dos|un[ao]?)",e.TenToNineteenIntegerRegex="(diecisiete|diecinueve|diecis[eé]is|dieciocho|catorce|quince|trece|diez|once|doce)",e.TwentiesIntegerRegex="(veinticuatro|veinticinco|veintisiete|veintinueve|veintitr[eé]s|veintis[eé]is|veintiocho|veintid[oó]s|ventiun[ao]|veinti[uú]n[oa]?|veinte)",e.TensNumberIntegerRegex="(cincuenta|cuarenta|treinta|sesenta|setenta|ochenta|noventa)",e.NegativeNumberTermsRegex="^[.]",e.NegativeNumberSignRegex=`^(${e.NegativeNumberTermsRegex}\\s+).*`,e.DigitsNumberRegex="\\d|\\d{1,3}(\\.\\d{3})",e.BelowHundredsRegex=`((${e.TenToNineteenIntegerRegex}|${e.TwentiesIntegerRegex}|(${e.TensNumberIntegerRegex}(\\s+y\\s+${e.ZeroToNineIntegerRegex})?))|${e.ZeroToNineIntegerRegex})`,e.BelowThousandsRegex=`(${e.HundredsNumberIntegerRegex}(\\s+${e.BelowHundredsRegex})?|${e.BelowHundredsRegex})`,e.SupportThousandsRegex=`((${e.BelowThousandsRegex}|${e.BelowHundredsRegex})\\s+${e.RoundNumberIntegerRegex}(\\s+${e.RoundNumberIntegerRegex})?)`,e.SeparaIntRegex=`(${e.SupportThousandsRegex}(\\s+${e.SupportThousandsRegex})*(\\s+${e.BelowThousandsRegex})?|${e.BelowThousandsRegex})`,e.AllIntRegex=`(${e.SeparaIntRegex}|mil(\\s+${e.BelowThousandsRegex})?)`,e.PlaceHolderPureNumber="\\b",e.PlaceHolderDefault="\\D|\\b",e.NumbersWithPlaceHolder=(e=>`(((?<!\\d+\\s*)-\\s*)|(?<=\\b))\\d+(?!([\\.,]\\d+[a-zA-Z]))(?=${e})`),e.NumbersWithSuffix="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s*(k|M|T|G)(?=\\b)",e.RoundNumberIntegerRegexWithLocks=`(?<=\\b)(${e.DigitsNumberRegex})+\\s+${e.RoundNumberIntegerRegex}(?=\\b)`,e.NumbersWithDozenSuffix="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s+docenas?(?=\\b)",e.AllIntRegexWithLocks=`((?<=\\b)${e.AllIntRegex}(?=\\b))`,e.AllIntRegexWithDozenSuffixLocks=`(?<=\\b)(((media\\s+)?\\s+docena)|(${e.AllIntRegex}\\s+(y|con)\\s+)?(${e.AllIntRegex}\\s+docenas?))(?=\\b)`,e.SimpleRoundOrdinalRegex="(mil[eé]simo|millon[eé]sim[oa]|billon[eé]sim[oa]|trillon[eé]sim[oa]|cuatrillon[eé]sim[oa]|quintillon[eé]sim[oa]|sextillon[eé]sim[oa]|septillon[eé]sim[oa])",e.OneToNineOrdinalRegex="(primer[oa]|segund[oa]|tercer[oa]|cuart[oa]|quint[oa]|sext[oa]|s[eé]ptim[oa]|octav[oa]|noven[oa])",e.TensOrdinalRegex="(nonag[eé]sim[oa]|octog[eé]sim[oa]|septuag[eé]sim[oa]|sexag[eé]sim[oa]|quincuag[eé]sim[oa]|cuadrag[eé]sim[oa]|trig[eé]sim[oa]|vig[eé]sim[oa]|d[eé]cim[oa])",e.HundredOrdinalRegex="(cent[eé]sim[oa]|ducent[eé]sim[oa]|tricent[eé]sim[oa]|cuadringent[eé]sim[oa]|quingent[eé]sim[oa]|sexcent[eé]sim[oa]|septingent[eé]sim[oa]|octingent[eé]sim[oa]|noningent[eé]sim[oa])",e.SpecialUnderHundredOrdinalRegex="(und[eé]cim[oa]|duod[eé]cimo|decimoctav[oa])",e.UnderHundredOrdinalRegex=`(((${e.TensOrdinalRegex}(\\s)?)?${e.OneToNineOrdinalRegex})|${e.TensOrdinalRegex}|${e.SpecialUnderHundredOrdinalRegex})`,e.UnderThousandOrdinalRegex=`(((${e.HundredOrdinalRegex}(\\s)?)?${e.UnderHundredOrdinalRegex})|${e.HundredOrdinalRegex})`,e.OverThousandOrdinalRegex=`((${e.AllIntRegex})([eé]sim[oa]))`,e.ComplexOrdinalRegex=`((${e.OverThousandOrdinalRegex}(\\s)?)?${e.UnderThousandOrdinalRegex}|${e.OverThousandOrdinalRegex})`,e.SufixRoundOrdinalRegex=`((${e.AllIntRegex})(${e.SimpleRoundOrdinalRegex}))`,e.ComplexRoundOrdinalRegex=`(((${e.SufixRoundOrdinalRegex}(\\s)?)?${e.ComplexOrdinalRegex})|${e.SufixRoundOrdinalRegex})`,e.AllOrdinalRegex=`${e.ComplexOrdinalRegex}|${e.SimpleRoundOrdinalRegex}|${e.ComplexRoundOrdinalRegex}`,e.OrdinalSuffixRegex="(?<=\\b)(\\d*(1r[oa]|2d[oa]|3r[oa]|4t[oa]|5t[oa]|6t[oa]|7m[oa]|8v[oa]|9n[oa]|0m[oa]|11[vm][oa]|12[vm][oa]))(?=\\b)",e.OrdinalNounRegex=`(?<=\\b)${e.AllOrdinalRegex}(?=\\b)`,e.SpecialFractionInteger=`(((${e.AllIntRegex})i?(${e.ZeroToNineIntegerRegex})|(${e.AllIntRegex}))a?v[oa]s?)`,e.FractionNotationRegex="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+[/]\\d+(?=(\\b[^/]|$))",e.FractionNotationWithSpacesRegex="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s+\\d+[/]\\d+(?=(\\b[^/]|$))",e.FractionNounRegex=`(?<=\\b)(${e.AllIntRegex}\\s+((y|con)\\s+)?)?(${e.AllIntRegex})(\\s+((y|con)\\s)?)(((${e.AllOrdinalRegex})s?|(${e.SpecialFractionInteger})|(${e.SufixRoundOrdinalRegex})s?)|medi[oa]s?|tercios?)(?=\\b)`,e.FractionNounWithArticleRegex=`(?<=\\b)(${e.AllIntRegex}\\s+(y\\s+)?)?(un|un[oa])(\\s+)((${e.AllOrdinalRegex})|(${e.SufixRoundOrdinalRegex})|(y\\s+)?medi[oa]s?)(?=\\b)`,e.FractionPrepositionRegex=`(?<=\\b)(?<numerator>(${e.AllIntRegex})|((?<!\\.)\\d+))\\s+sobre\\s+(?<denominator>(${e.AllIntRegex})|((\\d+)(?!\\.)))(?=\\b)`,e.AllPointRegex=`((\\s+${e.ZeroToNineIntegerRegex})+|(\\s+${e.AllIntRegex}))`,e.AllFloatRegex=`${e.AllIntRegex}(\\s+(coma|con))${e.AllPointRegex}`,e.DoubleDecimalPointRegex=(e=>`(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+[\\.,])))\\d+[\\.,]\\d+(?!([\\.,]\\d+))(?=${e})`),e.DoubleWithoutIntegralRegex=(e=>`(?<=\\s|^)(?<!(\\d+))[\\.,]\\d+(?!([\\.,]\\d+))(?=${e})`),e.DoubleWithMultiplierRegex="(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+\\[\\.,])))\\d+[\\.,]\\d+\\s*(K|k|M|G|T)(?=\\b)",e.DoubleWithRoundNumber=`(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+\\[\\.,])))\\d+[\\.,]\\d+\\s+${e.RoundNumberIntegerRegex}(?=\\b)`,e.DoubleAllFloatRegex=`((?<=\\b)${e.AllFloatRegex}(?=\\b))`,e.DoubleExponentialNotationRegex="(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+[\\.,])))(\\d+([\\.,]\\d+)?)e([+-]*[1-9]\\d*)(?=\\b)",e.DoubleCaretExponentialNotationRegex="(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+[\\.,])))(\\d+([\\.,]\\d+)?)\\^([+-]*[1-9]\\d*)(?=\\b)",e.NumberWithPrefixPercentage=`(?<!%)(${baseNumbers.BaseNumbers.NumberReplaceToken})(\\s*)(%(?!${baseNumbers.BaseNumbers.NumberReplaceToken})|(por ciento|por cien)\\b)`,e.CurrencyRegex="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s*(B|b|m|t|g)(?=\\b)",e.DecimalSeparatorChar=",",e.FractionMarkerToken="sobre",e.NonDecimalSeparatorChar=".",e.HalfADozenText="seis",e.WordSeparatorToken="y",e.WrittenDecimalSeparatorTexts=["coma","con"],e.WrittenGroupSeparatorTexts=["punto"],e.WrittenIntegerSeparatorTexts=["y"],e.WrittenFractionSeparatorTexts=["con"],e.HalfADozenRegex="media\\s+docena",e.DigitalNumberRegex="((?<=\\b)(mil|millones|mill[oó]n|billones|bill[oó]n|trillones|trill[oó]n|docenas?)(?=\\b))|((?<=(\\d|\\b))(k|t|m|g)(?=\\b))",e.CardinalNumberMap=new Map([["cero",0],["un",1],["una",1],["uno",1],["dos",2],["tres",3],["cuatro",4],["cinco",5],["seis",6],["siete",7],["ocho",8],["nueve",9],["diez",10],["once",11],["doce",12],["docena",12],["docenas",12],["trece",13],["catorce",14],["quince",15],["dieciseis",16],["dieciséis",16],["diecisiete",17],["dieciocho",18],["diecinueve",19],["veinte",20],["ventiuna",21],["ventiuno",21],["veintiun",21],["veintiún",21],["veintiuno",21],["veintiuna",21],["veintidos",22],["veintidós",22],["veintitres",23],["veintitrés",23],["veinticuatro",24],["veinticinco",25],["veintiseis",26],["veintiséis",26],["veintisiete",27],["veintiocho",28],["veintinueve",29],["treinta",30],["cuarenta",40],["cincuenta",50],["sesenta",60],["setenta",70],["ochenta",80],["noventa",90],["cien",100],["ciento",100],["doscientas",200],["doscientos",200],["trescientas",300],["trescientos",300],["cuatrocientas",400],["cuatrocientos",400],["quinientas",500],["quinientos",500],["seiscientas",600],["seiscientos",600],["setecientas",700],["setecientos",700],["ochocientas",800],["ochocientos",800],["novecientas",900],["novecientos",900],["mil",1e3],["millon",1e6],["millón",1e6],["millones",1e6],["billon",1e12],["billón",1e12],["billones",1e12],["trillon",1e18],["trillón",1e18],["trillones",1e18]]),e.OrdinalNumberMap=new Map([["primero",1],["primera",1],["primer",1],["segundo",2],["segunda",2],["medio",2],["media",2],["tercero",3],["tercera",3],["tercer",3],["tercio",3],["cuarto",4],["cuarta",4],["quinto",5],["quinta",5],["sexto",6],["sexta",6],["septimo",7],["septima",7],["octavo",8],["octava",8],["noveno",9],["novena",9],["decimo",10],["decima",10],["undecimo",11],["undecima",11],["duodecimo",12],["duodecima",12],["decimotercero",13],["decimotercera",13],["decimocuarto",14],["decimocuarta",14],["decimoquinto",15],["decimoquinta",15],["decimosexto",16],["decimosexta",16],["decimoseptimo",17],["decimoseptima",17],["decimoctavo",18],["decimoctava",18],["decimonoveno",19],["decimonovena",19],["vigesimo",20],["vigesima",20],["trigesimo",30],["trigesima",30],["cuadragesimo",40],["cuadragesima",40],["quincuagesimo",50],["quincuagesima",50],["sexagesimo",60],["sexagesima",60],["septuagesimo",70],["septuagesima",70],["octogesimo",80],["octogesima",80],["nonagesimo",90],["nonagesima",90],["centesimo",100],["centesima",100],["ducentesimo",200],["ducentesima",200],["tricentesimo",300],["tricentesima",300],["cuadringentesimo",400],["cuadringentesima",400],["quingentesimo",500],["quingentesima",500],["sexcentesimo",600],["sexcentesima",600],["septingentesimo",700],["septingentesima",700],["octingentesimo",800],["octingentesima",800],["noningentesimo",900],["noningentesima",900],["milesimo",1e3],["milesima",1e3],["millonesimo",1e6],["millonesima",1e6],["billonesimo",1e12],["billonesima",1e12]]),e.PrefixCardinalMap=new Map([["dos",2],["tres",3],["cuatro",4],["cinco",5],["seis",6],["siete",7],["ocho",8],["nueve",9],["diez",10],["once",11],["doce",12],["trece",13],["catorce",14],["quince",15],["dieciseis",16],["dieciséis",16],["diecisiete",17],["dieciocho",18],["diecinueve",19],["veinte",20],["ventiuna",21],["veintiun",21],["veintiún",21],["veintidos",22],["veintitres",23],["veinticuatro",24],["veinticinco",25],["veintiseis",26],["veintisiete",27],["veintiocho",28],["veintinueve",29],["treinta",30],["cuarenta",40],["cincuenta",50],["sesenta",60],["setenta",70],["ochenta",80],["noventa",90],["cien",100],["doscientos",200],["trescientos",300],["cuatrocientos",400],["quinientos",500],["seiscientos",600],["setecientos",700],["ochocientos",800],["novecientos",900]]),e.SuffixOrdinalMap=new Map([["milesimo",1e3],["millonesimo",1e6],["billonesimo",1e12]]),e.RoundNumberMap=new Map([["mil",1e3],["milesimo",1e3],["millon",1e6],["millón",1e6],["millones",1e6],["millonesimo",1e6],["billon",1e12],["billón",1e12],["billones",1e12],["billonesimo",1e12],["trillon",1e18],["trillón",1e18],["trillones",1e18],["trillonesimo",1e18],["docena",12],["docenas",12],["k",1e3],["m",1e6],["g",1e9],["t",1e12]]),e.AmbiguousFractionConnectorsRegex="^[.]"}(r.SpanishNumeric||(r.SpanishNumeric={}))});unwrapExports(spanishNumeric);var parserConfiguration$2=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.SpanishNumberParserConfiguration=class{constructor(e){e||(e=new culture$2.CultureInfo(culture$2.Culture.Spanish)),this.cultureInfo=e,this.langMarker=spanishNumeric.SpanishNumeric.LangMarker,this.decimalSeparatorChar=spanishNumeric.SpanishNumeric.DecimalSeparatorChar,this.fractionMarkerToken=spanishNumeric.SpanishNumeric.FractionMarkerToken,this.nonDecimalSeparatorChar=spanishNumeric.SpanishNumeric.NonDecimalSeparatorChar,this.halfADozenText=spanishNumeric.SpanishNumeric.HalfADozenText,this.wordSeparatorToken=spanishNumeric.SpanishNumeric.WordSeparatorToken,this.writtenDecimalSeparatorTexts=spanishNumeric.SpanishNumeric.WrittenDecimalSeparatorTexts,this.writtenGroupSeparatorTexts=spanishNumeric.SpanishNumeric.WrittenGroupSeparatorTexts,this.writtenIntegerSeparatorTexts=spanishNumeric.SpanishNumeric.WrittenIntegerSeparatorTexts,this.writtenFractionSeparatorTexts=spanishNumeric.SpanishNumeric.WrittenFractionSeparatorTexts;let r=new Map(spanishNumeric.SpanishNumeric.OrdinalNumberMap);spanishNumeric.SpanishNumeric.PrefixCardinalMap.forEach((e,u)=>{spanishNumeric.SpanishNumeric.SuffixOrdinalMap.forEach((t,n)=>{r.has(u+n)||r.set(u+n,e*t)})}),this.cardinalNumberMap=spanishNumeric.SpanishNumeric.CardinalNumberMap,this.ordinalNumberMap=r,this.roundNumberMap=spanishNumeric.SpanishNumeric.RoundNumberMap,this.negativeNumberSignRegex=recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.NegativeNumberSignRegex,"is"),this.halfADozenRegex=recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.HalfADozenRegex),this.digitalNumberRegex=recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.DigitalNumberRegex)}normalizeTokenSet(e,r){let u=new Array;return e.forEach(e=>{let r=e.replace(/^s+/,"").replace(/s+$/,"");if(this.ordinalNumberMap.has(r))u.push(r);else{if(r.endsWith("avo")||r.endsWith("ava")){let e=r,t=e.length;if(r=e.substring(0,t-3),this.cardinalNumberMap.has(r))return void u.push(r);if(r=e.substring(0,t-2),this.cardinalNumberMap.has(r))return void u.push(r)}u.push(e)}}),u}resolveCompositeNumber(e){if(this.ordinalNumberMap.has(e))return this.ordinalNumberMap.get(e);if(this.cardinalNumberMap.has(e))return this.cardinalNumberMap.get(e);let r=0,u=0,t="",n=0;for(let a=0;a<e.length;a++)t=t.concat(e[a]),this.cardinalNumberMap.has(t)&&this.cardinalNumberMap.get(t)>r&&(n=a,r=this.cardinalNumberMap.get(t)),a+1===e.length&&(u+=r,t="",a=n++,r=0);return u}}});unwrapExports(parserConfiguration$2);var portugueseNumeric=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),function(e){e.LangMarker="Por",e.HundredsNumberIntegerRegex="(quatrocent[ao]s|trezent[ao]s|seiscent[ao]s|setecent[ao]s|oitocent[ao]s|novecent[ao]s|duzent[ao]s|quinhent[ao]s|cem|(?<!por\\s+)(cento))",e.RoundNumberIntegerRegex="(mil|milh[ãa]o|milh[õo]es|bilh[ãa]o|bilh[õo]es|trilh[ãa]o|trilh[õo]es|qua[td]rilh[ãa]o|qua[td]rilh[õo]es|quintilh[ãa]o|quintilh[õo]es)",e.ZeroToNineIntegerRegex="(quatro|cinco|sete|nove|zero|tr[êe]s|seis|oito|dois|duas|um|uma)",e.TenToNineteenIntegerRegex="(dez[ea]sseis|dez[ea]ssete|dez[ea]nove|dezoito|quatorze|catorze|quinze|treze|d[ée]z|onze|doze)",e.TensNumberIntegerRegex="(cinquenta|quarenta|trinta|sessenta|setenta|oitenta|noventa|vinte)",e.DigitsNumberRegex="\\d|\\d{1,3}(\\.\\d{3})",e.BelowHundredsRegex=`((${e.TenToNineteenIntegerRegex}|(${e.TensNumberIntegerRegex}(\\s+e\\s+${e.ZeroToNineIntegerRegex})?))|${e.ZeroToNineIntegerRegex})`,e.BelowThousandsRegex=`(${e.HundredsNumberIntegerRegex}(\\s+e\\s+${e.BelowHundredsRegex})?|${e.BelowHundredsRegex})`,e.SupportThousandsRegex=`((${e.BelowThousandsRegex}|${e.BelowHundredsRegex})\\s+${e.RoundNumberIntegerRegex}(\\s+${e.RoundNumberIntegerRegex})?)`,e.NegativeNumberTermsRegex="^[.]",e.NegativeNumberSignRegex=`^(${e.NegativeNumberTermsRegex}\\s+).*`,e.SeparaIntRegex=`(${e.SupportThousandsRegex}(\\s+${e.SupportThousandsRegex})*(\\s+${e.BelowThousandsRegex})?|${e.BelowThousandsRegex})`,e.AllIntRegex=`(${e.SeparaIntRegex}|mil(\\s+${e.BelowThousandsRegex})?)`,e.AllPointRegex=`((\\s+${e.ZeroToNineIntegerRegex})+|(\\s+${e.AllIntRegex}))`,e.SpecialFractionInteger=`(((${e.AllIntRegex})i?(${e.ZeroToNineIntegerRegex})|(${e.AllIntRegex}))\\s+a?v[oa]s?)`,e.PlaceHolderDefault="\\D|\\b",e.PlaceHolderPureNumber="\\b",e.AllIntRegexWithLocks=`((?<=\\b)${e.AllIntRegex}(?=\\b))`,e.AllIntRegexWithDozenSuffixLocks=`(?<=\\b)(((meia)?\\s+(d[úu]zia))|(${e.AllIntRegex}\\s+(e|com)\\s+)?(${e.AllIntRegex}\\s+(d[úu]zia(s)?|dezena(s)?)))(?=\\b)`,e.NumbersWithPlaceHolder=(e=>`(((?<!\\d+\\s*)-\\s*)|(?<=\\b))\\d+(?!(,\\d+[a-zA-Z]))(?=${e})`),e.NumbersWithSuffix="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s*(k|M|T|G)(?=\\b)",e.RoundNumberIntegerRegexWithLocks=`(?<=\\b)(${e.DigitsNumberRegex})+\\s+${e.RoundNumberIntegerRegex}(?=\\b)`,e.NumbersWithDozenSuffix="(((?<!\\d+\\s*)-\\s*)|(?<=\\b))\\d+\\s+dezena(s)?(?=\\b)",e.NumbersWithDozen2Suffix="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s+d[úu]zia(s)(?=\\b)",e.SimpleRoundOrdinalRegex="(mil[eé]sim[oa]|milion[eé]sim[oa]|bilion[eé]sim[oa]|trilion[eé]sim[oa]|quatrilion[eé]sim[oa]|quintilion[eé]sim[oa])",e.OneToNineOrdinalRegex="(primeir[oa]|segund[oa]|terceir[oa]|quart[oa]|quint[oa]|sext[oa]|s[eé]tim[oa]|oitav[oa]|non[oa])",e.TensOrdinalRegex="(nonag[eé]sim[oa]|octog[eé]sim[oa]|setuag[eé]sim[oa]|septuag[eé]sim[oa]|sexag[eé]sim[oa]|quinquag[eé]sim[oa]|quadrag[eé]sim[oa]|trig[eé]sim[oa]|vig[eé]sim[oa]|d[eé]cim[oa])",e.HundredOrdinalRegex="(cent[eé]sim[oa]|ducent[eé]sim[oa]|tricent[eé]sim[oa]|cuadringent[eé]sim[oa]|quingent[eé]sim[oa]|sexcent[eé]sim[oa]|septingent[eé]sim[oa]|octingent[eé]sim[oa]|noningent[eé]sim[oa])",e.SpecialUnderHundredOrdinalRegex="(und[eé]cim[oa]|duod[eé]cimo)",e.UnderHundredOrdinalRegex=`(((${e.TensOrdinalRegex}(\\s)?)?${e.OneToNineOrdinalRegex})|${e.TensOrdinalRegex}|${e.SpecialUnderHundredOrdinalRegex})`,e.UnderThousandOrdinalRegex=`(((${e.HundredOrdinalRegex}(\\s)?)?${e.UnderHundredOrdinalRegex})|${e.HundredOrdinalRegex})`,e.OverThousandOrdinalRegex=`((${e.AllIntRegex})([eé]sim[oa]))`,e.ComplexOrdinalRegex=`((${e.OverThousandOrdinalRegex}(\\s)?)?${e.UnderThousandOrdinalRegex}|${e.OverThousandOrdinalRegex})`,e.SuffixRoundOrdinalRegex=`((${e.AllIntRegex})(${e.SimpleRoundOrdinalRegex}))`,e.ComplexRoundOrdinalRegex=`(((${e.SuffixRoundOrdinalRegex}(\\s)?)?${e.ComplexOrdinalRegex})|${e.SuffixRoundOrdinalRegex})`,e.AllOrdinalRegex=`${e.ComplexOrdinalRegex}|${e.SimpleRoundOrdinalRegex}|${e.ComplexRoundOrdinalRegex}`,e.OrdinalSuffixRegex="(?<=\\b)(\\d*(1[oaº]|2[oaº]|3[oaº]|4[oaº]|5[oaº]|6[oaº]|7[oaº]|8[oaº]|9[oaº]|0[oaº]|1.º|2.º|3.º|4.º|5.º|6.º|7.º|8.º|9.º))(?=\\b)",e.OrdinalEnglishRegex=`(?<=\\b)${e.AllOrdinalRegex}(?=\\b)`,e.FractionNotationRegex="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+[/]\\d+(?=(\\b[^/]|$))",e.FractionNotationWithSpacesRegex="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s+\\d+[/]\\d+(?=(\\b[^/]|$))",e.FractionNounRegex=`(?<=\\b)(${e.AllIntRegex}\\s+((e|com)\\s+)?)?(${e.AllIntRegex})(\\s+((e|com)\\s)?)(((${e.AllOrdinalRegex})s?|(${e.SpecialFractionInteger})|(${e.SuffixRoundOrdinalRegex})s?)|mei[oa]?|ter[çc]o?)(?=\\b)`,e.FractionNounWithArticleRegex=`(?<=\\b)(${e.AllIntRegex}\\s+(e\\s+)?)?(um|um[as])(\\s+)((${e.AllOrdinalRegex})|(${e.SuffixRoundOrdinalRegex})|(e\\s+)?mei[oa]?)(?=\\b)`,e.FractionPrepositionRegex=`(?<=\\b)(?<numerator>(${e.AllIntRegex})|((?<!\\.)\\d+))\\s+sobre\\s+(?<denominator>(${e.AllIntRegex})|((\\d+)(?!\\.)))(?=\\b)`,e.AllFloatRegex=`${e.AllIntRegex}(\\s+(vírgula|virgula|e|ponto))${e.AllPointRegex}`,e.DoubleWithMultiplierRegex="(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+\\,)))\\d+,\\d+\\s*(K|k|M|G|T)(?=\\b)",e.DoubleExponentialNotationRegex="(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+,)))(\\d+(,\\d+)?)e([+-]*[1-9]\\d*)(?=\\b)",e.DoubleCaretExponentialNotationRegex="(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+,)))(\\d+(,\\d+)?)\\^([+-]*[1-9]\\d*)(?=\\b)",e.DoubleDecimalPointRegex=(e=>`(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+,)))\\d+,\\d+(?!(,\\d+))(?=${e})`),e.DoubleWithoutIntegralRegex=(e=>`(?<=\\s|^)(?<!(\\d+)),\\d+(?!(,\\d+))(?=${e})`),e.DoubleWithRoundNumber=`(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+\\,)))\\d+,\\d+\\s+${e.RoundNumberIntegerRegex}(?=\\b)`,e.DoubleAllFloatRegex=`((?<=\\b)${e.AllFloatRegex}(?=\\b))`,e.CurrencyRegex="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s*(B|b|m|t|g)(?=\\b)",e.NumberWithSuffixPercentage=`(?<!%)(${baseNumbers.BaseNumbers.NumberReplaceToken})(\\s*)(%(?!${baseNumbers.BaseNumbers.NumberReplaceToken})|(por cento|pontos percentuais)\\b)`,e.AmbiguousFractionConnectorsRegex="^[.]",e.DecimalSeparatorChar=",",e.FractionMarkerToken="sobre",e.NonDecimalSeparatorChar=".",e.HalfADozenText="seis",e.WordSeparatorToken="e",e.WrittenDecimalSeparatorTexts=["virgula","vírgula"],e.WrittenGroupSeparatorTexts=["ponto"],e.WrittenIntegerSeparatorTexts=["e"],e.WrittenFractionSeparatorTexts=["com"],e.WrittenFractionSuffix=["avo","ava"],e.PluralSuffix="s",e.HalfADozenRegex="meia\\s+d[uú]zia",e.DigitalNumberRegex="((?<=\\b)(mil|cem|milh[oõ]es|milh[aã]o|bilh[oõ]es|bilh[aã]o|trilh[oõ]es|trilh[aã]o|milhares|centena|centenas|dezena|dezenas?)(?=\\b))|((?<=(\\d|\\b))(k|t|m|g)(?=\\b))",e.CardinalNumberMap=new Map([["zero",0],["hum",1],["um",1],["uma",1],["dois",2],["duas",2],["meia",2],["meio",2],["tres",3],["três",3],["quatro",4],["cinco",5],["seis",6],["sete",7],["oito",8],["nove",9],["dez",10],["dezena",10],["déz",10],["onze",11],["doze",12],["dúzia",12],["duzia",12],["dúzias",12],["duzias",12],["treze",13],["catorze",14],["quatorze",14],["quinze",15],["dezesseis",16],["dezasseis",16],["dezessete",17],["dezassete",17],["dezoito",18],["dezenove",19],["dezanove",19],["vinte",20],["trinta",30],["quarenta",40],["cinquenta",50],["cincoenta",50],["sessenta",60],["setenta",70],["oitenta",80],["noventa",90],["cem",100],["cento",100],["duzentos",200],["duzentas",200],["trezentos",300],["trezentas",300],["quatrocentos",400],["quatrocentas",400],["quinhentos",500],["quinhentas",500],["seiscentos",600],["seiscentas",600],["setecentos",700],["setecentas",700],["oitocentos",800],["oitocentas",800],["novecentos",900],["novecentas",900],["mil",1e3],["milhão",1e6],["milhao",1e6],["milhões",1e6],["milhoes",1e6],["bilhão",1e9],["bilhao",1e9],["bilhões",1e9],["bilhoes",1e9],["trilhão",1e12],["trilhao",1e12],["trilhões",1e12],["trilhoes",1e12]]),e.OrdinalNumberMap=new Map([["primeiro",1],["primeira",1],["segundo",2],["segunda",2],["terceiro",3],["terceira",3],["quarto",4],["quarta",4],["quinto",5],["quinta",5],["sexto",6],["sexta",6],["sétimo",7],["setimo",7],["sétima",7],["setima",7],["oitavo",8],["oitava",8],["nono",9],["nona",9],["décimo",10],["decimo",10],["décima",10],["decima",10],["undécimo",11],["undecimo",11],["undécima",11],["undecima",11],["duodécimo",11],["duodecimo",11],["duodécima",11],["duodecima",11],["vigésimo",20],["vigesimo",20],["vigésima",20],["vigesima",20],["trigésimo",30],["trigesimo",30],["trigésima",30],["trigesima",30],["quadragésimo",40],["quadragesimo",40],["quadragésima",40],["quadragesima",40],["quinquagésimo",50],["quinquagesimo",50],["quinquagésima",50],["quinquagesima",50],["sexagésimo",60],["sexagesimo",60],["sexagésima",60],["sexagesima",60],["septuagésimo",70],["septuagesimo",70],["septuagésima",70],["septuagesima",70],["setuagésimo",70],["setuagesimo",70],["setuagésima",70],["setuagesima",70],["octogésimo",80],["octogesimo",80],["octogésima",80],["octogesima",80],["nonagésimo",90],["nonagesimo",90],["nonagésima",90],["nonagesima",90],["centesimo",100],["centésimo",100],["centesima",100],["centésima",100],["ducentésimo",200],["ducentesimo",200],["ducentésima",200],["ducentesima",200],["tricentésimo",300],["tricentesimo",300],["tricentésima",300],["tricentesima",300],["trecentésimo",300],["trecentesimo",300],["trecentésima",300],["trecentesima",300],["quadringentésimo",400],["quadringentesimo",400],["quadringentésima",400],["quadringentesima",400],["quingentésimo",500],["quingentesimo",500],["quingentésima",500],["quingentesima",500],["sexcentésimo",600],["sexcentesimo",600],["sexcentésima",600],["sexcentesima",600],["seiscentésimo",600],["seiscentesimo",600],["seiscentésima",600],["seiscentesima",600],["septingentésimo",700],["septingentesimo",700],["septingentésima",700],["septingentesima",700],["setingentésimo",700],["setingentesimo",700],["setingentésima",700],["setingentesima",700],["octingentésimo",800],["octingentesimo",800],["octingentésima",800],["octingentesima",800],["noningentésimo",900],["noningentesimo",900],["noningentésima",900],["noningentesima",900],["nongentésimo",900],["nongentesimo",900],["nongentésima",900],["nongentesima",900],["milésimo",1e3],["milesimo",1e3],["milésima",1e3],["milesima",1e3],["milionésimo",1e6],["milionesimo",1e6],["milionésima",1e6],["milionesima",1e6],["bilionésimo",1e9],["bilionesimo",1e9],["bilionésima",1e9],["bilionesima",1e9]]),e.PrefixCardinalMap=new Map([["hum",1],["dois",2],["tres",3],["três",3],["quatro",4],["cinco",5],["seis",6],["sete",7],["oito",8],["nove",9],["dez",10],["onze",11],["doze",12],["treze",13],["catorze",14],["quatorze",14],["quinze",15],["dezesseis",16],["dezasseis",16],["dezessete",17],["dezassete",17],["dezoito",18],["dezenove",19],["dezanove",19],["vinte",20],["trinta",30],["quarenta",40],["cinquenta",50],["cincoenta",50],["sessenta",60],["setenta",70],["oitenta",80],["noventa",90],["cem",100],["duzentos",200],["trezentos",300],["quatrocentos",400],["quinhentos",500],["seiscentos",600],["setecentos",700],["oitocentos",800],["novecentos",900]]),e.SuffixOrdinalMap=new Map([["milesimo",1e3],["milionesimo",1e6],["bilionesimo",1e9],["trilionesimo",1e12]]),e.RoundNumberMap=new Map([["mil",1e3],["milesimo",1e3],["milhão",1e6],["milhao",1e6],["milhões",1e6],["milhoes",1e6],["milionésimo",1e6],["milionesimo",1e6],["bilhão",1e9],["bilhao",1e9],["bilhões",1e9],["bilhoes",1e9],["bilionésimo",1e9],["bilionesimo",1e9],["trilhão",1e12],["trilhao",1e12],["trilhões",1e12],["trilhoes",1e12],["trilionésimo",1e12],["trilionesimo",1e12],["dezena",10],["dezenas",10],["dúzia",12],["duzia",12],["dúzias",12],["duzias",12],["k",1e3],["m",1e6],["g",1e9],["t",1e12]])}(r.PortugueseNumeric||(r.PortugueseNumeric={}))});unwrapExports(portugueseNumeric);var parserConfiguration$4=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.PortugueseNumberParserConfiguration=class{constructor(e){e||(e=new culture$2.CultureInfo(culture$2.Culture.Portuguese)),this.cultureInfo=e,this.langMarker=portugueseNumeric.PortugueseNumeric.LangMarker,this.decimalSeparatorChar=portugueseNumeric.PortugueseNumeric.DecimalSeparatorChar,this.fractionMarkerToken=portugueseNumeric.PortugueseNumeric.FractionMarkerToken,this.nonDecimalSeparatorChar=portugueseNumeric.PortugueseNumeric.NonDecimalSeparatorChar,this.halfADozenText=portugueseNumeric.PortugueseNumeric.HalfADozenText,this.wordSeparatorToken=portugueseNumeric.PortugueseNumeric.WordSeparatorToken,this.writtenDecimalSeparatorTexts=portugueseNumeric.PortugueseNumeric.WrittenDecimalSeparatorTexts,this.writtenGroupSeparatorTexts=portugueseNumeric.PortugueseNumeric.WrittenGroupSeparatorTexts,this.writtenIntegerSeparatorTexts=portugueseNumeric.PortugueseNumeric.WrittenIntegerSeparatorTexts,this.writtenFractionSeparatorTexts=portugueseNumeric.PortugueseNumeric.WrittenFractionSeparatorTexts;let r=new Map(portugueseNumeric.PortugueseNumeric.OrdinalNumberMap);portugueseNumeric.PortugueseNumeric.PrefixCardinalMap.forEach((e,u)=>{portugueseNumeric.PortugueseNumeric.SuffixOrdinalMap.forEach((t,n)=>{r.has(u+n)||r.set(u+n,e*t)})}),this.cardinalNumberMap=portugueseNumeric.PortugueseNumeric.CardinalNumberMap,this.ordinalNumberMap=r,this.roundNumberMap=portugueseNumeric.PortugueseNumeric.RoundNumberMap,this.negativeNumberSignRegex=recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.NegativeNumberSignRegex,"is"),this.halfADozenRegex=recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.HalfADozenRegex),this.digitalNumberRegex=recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.DigitalNumberRegex)}normalizeTokenSet(e,r){let u=new Array;return e.forEach(e=>{let r=e.replace(/^s+/,"").replace(/s+$/,"");if(this.ordinalNumberMap.has(r))u.push(r);else{if(portugueseNumeric.PortugueseNumeric.WrittenFractionSuffix.some(e=>r.endsWith(e))){let e=r,t=e.length;if(!(r=e.substring(0,t-3)))return;if(this.cardinalNumberMap.has(r))return void u.push(r);if(r=e.substring(0,t-2),this.cardinalNumberMap.has(r))return void u.push(r)}u.push(e)}}),u}resolveCompositeNumber(e){if(this.ordinalNumberMap.has(e))return this.ordinalNumberMap.get(e);if(this.cardinalNumberMap.has(e))return this.cardinalNumberMap.get(e);let r=0,u=0,t="",n=0;for(let a=0;a<e.length;a++)t=t.concat(e[a]),this.cardinalNumberMap.has(t)&&this.cardinalNumberMap.get(t)>r&&(n=a,r=this.cardinalNumberMap.get(t)),a+1===e.length&&(u+=r,t="",a=n++,r=0);return u}}});unwrapExports(parserConfiguration$4);var frenchNumeric=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),function(e){e.LangMarker="Fr",e.RoundNumberIntegerRegex="(cent|mille|millions|million|milliard|milliards|billion|billions)",e.ZeroToNineIntegerRegex="(et un|un|une|deux|trois|quatre|cinq|six|sept|huit|neuf)",e.TenToNineteenIntegerRegex="((seize|quinze|quatorze|treize|douze|onze)|dix(\\Wneuf|\\Whuit|\\Wsept)?)",e.TensNumberIntegerRegex="(quatre\\Wvingt(s|\\Wdix)?|soixante\\Wdix|vingt|trente|quarante|cinquante|soixante|septante|octante|huitante|nonante)",e.DigitsNumberRegex="\\d|\\d{1,3}(\\.\\d{3})",e.NegativeNumberTermsRegex="^[.]",e.NegativeNumberSignRegex=`^(${e.NegativeNumberTermsRegex}\\s+).*`,e.HundredsNumberIntegerRegex=`((${e.ZeroToNineIntegerRegex}(\\s+cent))|cent|((\\s+cent\\s)+${e.TensNumberIntegerRegex}))`,e.BelowHundredsRegex=`((${e.TenToNineteenIntegerRegex}|(${e.TensNumberIntegerRegex}([-\\s]+(${e.TenToNineteenIntegerRegex}|${e.ZeroToNineIntegerRegex}))?))|${e.ZeroToNineIntegerRegex})`,e.BelowThousandsRegex=`((${e.HundredsNumberIntegerRegex}(\\s+${e.BelowHundredsRegex})?|${e.BelowHundredsRegex}|${e.TenToNineteenIntegerRegex})|cent\\s+${e.TenToNineteenIntegerRegex})`,e.SupportThousandsRegex=`((${e.BelowThousandsRegex}|${e.BelowHundredsRegex})\\s+${e.RoundNumberIntegerRegex}(\\s+${e.RoundNumberIntegerRegex})?)`,e.SeparaIntRegex=`(${e.SupportThousandsRegex}(\\s+${e.SupportThousandsRegex})*(\\s+${e.BelowThousandsRegex})?|${e.BelowThousandsRegex})`,e.AllIntRegex=`(${e.SeparaIntRegex}|mille(\\s+${e.BelowThousandsRegex})?)`,e.NumbersWithPlaceHolder=(e=>`(((?<!\\d+\\s*)-\\s*)|(?<=\\b))\\d+(?!([,\\.]\\d+[a-zA-Z]))(?=${e})`),e.NumbersWithSuffix="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s*(k|M|T|G)(?=\\b)",e.RoundNumberIntegerRegexWithLocks=`(?<=\\b)(${e.DigitsNumberRegex})+\\s+${e.RoundNumberIntegerRegex}(?=\\b)`,e.NumbersWithDozenSuffix="(((?<!\\d+\\s*)-\\s*)|(?<=\\b))\\d+\\s+douzaine(s)?(?=\\b)",e.AllIntRegexWithLocks=`((?<=\\b)${e.AllIntRegex}(?=\\b))`,e.AllIntRegexWithDozenSuffixLocks=`(?<=\\b)(((demi\\s+)?\\s+douzaine)|(${e.AllIntRegex}\\s+douzaines?))(?=\\b)`,e.SimpleRoundOrdinalRegex="(centi[eè]me|milli[eè]me|millioni[eè]me|milliardi[eè]me|billioni[eè]me)",e.OneToNineOrdinalRegex="(premier|premi[eè]re|deuxi[eè]me|second[e]|troisi[eè]me|tiers|tierce|quatri[eè]me|cinqui[eè]me|sixi[eè]me|septi[eè]me|huiti[eè]me|neuvi[eè]me)",e.SpecialUnderHundredOrdinalRegex="(onzi[eè]me|douzi[eè]me)",e.TensOrdinalRegex="(quatre-vingt-dixi[eè]me|quatre-vingti[eè]me|huitanti[eè]me|octanti[eè]me|soixante-dixi[eè]me|septanti[eè]me|soixanti[eè]me|cinquanti[eè]me|quaranti[eè]me|trenti[eè]me|vingti[eè]me)",e.HundredOrdinalRegex=`(${e.AllIntRegex}(\\s+(centi[eè]me\\s)))`,e.UnderHundredOrdinalRegex=`(((${e.AllIntRegex}(\\W)?)?${e.OneToNineOrdinalRegex})|(${e.TensNumberIntegerRegex}(\\W)?)?${e.OneToNineOrdinalRegex}|${e.TensOrdinalRegex}|${e.SpecialUnderHundredOrdinalRegex})`,e.UnderThousandOrdinalRegex=`(((${e.HundredOrdinalRegex}(\\s)?)?${e.UnderHundredOrdinalRegex})|((${e.AllIntRegex}(\\W)?)?${e.SimpleRoundOrdinalRegex})|${e.HundredOrdinalRegex})`,e.OverThousandOrdinalRegex=`((${e.AllIntRegex})(i[eè]me))`,e.ComplexOrdinalRegex=`((${e.OverThousandOrdinalRegex}(\\s)?)?${e.UnderThousandOrdinalRegex}|${e.OverThousandOrdinalRegex}|${e.UnderHundredOrdinalRegex})`,e.SuffixOrdinalRegex=`((${e.AllIntRegex})(${e.SimpleRoundOrdinalRegex}))`,e.ComplexRoundOrdinalRegex=`(((${e.SuffixOrdinalRegex}(\\s)?)?${e.ComplexOrdinalRegex})|${e.SuffixOrdinalRegex})`,e.AllOrdinalRegex=`(${e.ComplexOrdinalRegex}|${e.SimpleRoundOrdinalRegex}|${e.ComplexRoundOrdinalRegex})`,e.PlaceHolderPureNumber="\\b",e.PlaceHolderDefault="\\D|\\b",e.OrdinalSuffixRegex="(?<=\\b)((\\d*(1er|2e|2eme|3e|3eme|4e|4eme|5e|5eme|6e|6eme|7e|7eme|8e|8eme|9e|9eme|0e|0eme))|(11e|11eme|12e|12eme))(?=\\b)",e.OrdinalFrenchRegex=`(?<=\\b)${e.AllOrdinalRegex}(?=\\b)`,e.FractionNotationWithSpacesRegex="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s+\\d+[/]\\d+(?=(\\b[^/]|$))",e.FractionNotationRegex="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+[/]\\d+(?=(\\b[^/]|$))",e.FractionNounRegex=`(?<=\\b)(${e.AllIntRegex}\\s+((et)\\s+)?)?(${e.AllIntRegex})(\\s+((et)\\s)?)(((${e.AllOrdinalRegex})s?|(${e.SuffixOrdinalRegex})s?)|demis?|tiers?|quarts?)(?=\\b)`,e.FractionNounWithArticleRegex=`(?<=\\b)(${e.AllIntRegex}\\s+(et\\s+)?)?(un|une)(\\s+)((${e.AllOrdinalRegex})|(${e.SuffixOrdinalRegex})|(et\\s+)?demis?)(?=\\b)`,e.FractionPrepositionRegex=`(?<=\\b)(?<numerator>(${e.AllIntRegex})|((?<!\\.)\\d+))\\s+sur\\s+(?<denominator>(${e.AllIntRegex})|((\\d+)(?!\\.)))(?=\\b)`,e.AllPointRegex=`((\\s+${e.ZeroToNineIntegerRegex})+|(\\s+${e.SeparaIntRegex}))`,e.AllFloatRegex=`(${e.AllIntRegex}(\\s+(virgule|point))${e.AllPointRegex})`,e.DoubleDecimalPointRegex=(e=>`(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+[,\\.])))\\d+[,\\.]\\d+(?!([,\\.]\\d+))(?=${e})`),e.DoubleWithoutIntegralRegex=(e=>`(?<=\\s|^)(?<!(\\d+))[,\\.]\\d+(?!([,\\.]\\d+))(?=${e})`),e.DoubleWithMultiplierRegex="(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+\\[,\\.])))\\d+[,\\.]\\d+\\s*(K|k|M|G|T)(?=\\b)",e.DoubleWithRoundNumber=`(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+\\[,\\.])))\\d+[,\\.]\\d+\\s+${e.RoundNumberIntegerRegex}(?=\\b)`,e.DoubleAllFloatRegex=`((?<=\\b)${e.AllFloatRegex}(?=\\b))`,e.DoubleExponentialNotationRegex="(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+[,\\.])))(\\d+([,\\.]\\d+)?)e([+-]*[1-9]\\d*)(?=\\b)",e.DoubleCaretExponentialNotationRegex="(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+[,\\.])))(\\d+([,\\.]\\d+)?)\\^([+-]*[1-9]\\d*)(?=\\b)",e.CurrencyRegex="(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s*(B|b|m|t|g)(?=\\b)",e.NumberWithSuffixPercentage=`(?<!%)(${baseNumbers.BaseNumbers.NumberReplaceToken})(\\s*)(%(?!${baseNumbers.BaseNumbers.NumberReplaceToken})|(pourcentages|pourcents|pourcentage|pourcent)\\b)`,e.NumberWithPrefixPercentage=`((?<!${baseNumbers.BaseNumbers.NumberReplaceToken})%|pourcent|pourcent des|pourcentage de)(\\s*)(${baseNumbers.BaseNumbers.NumberReplaceToken})(?=\\s|$)`,e.DecimalSeparatorChar=",",e.FractionMarkerToken="sur",e.NonDecimalSeparatorChar=".",e.HalfADozenText="six",e.WordSeparatorToken="et",e.WrittenDecimalSeparatorTexts=["virgule"],e.WrittenGroupSeparatorTexts=["point","points"],e.WrittenIntegerSeparatorTexts=["et","-"],e.WrittenFractionSeparatorTexts=["et","sur"],e.HalfADozenRegex="(?<=\\b)+demi\\s+douzaine",e.DigitalNumberRegex="((?<=\\b)(cent|mille|million|millions|milliard|milliards|billions|billion|douzaine(s)?)(?=\\b))|((?<=(\\d|\\b))(k|t|m|g|b)(?=\\b))",e.AmbiguousFractionConnectorsRegex="^[.]",e.CardinalNumberMap=new Map([["zéro",0],["zero",0],["un",1],["une",1],["deux",2],["trois",3],["quatre",4],["cinq",5],["six",6],["sept",7],["huit",8],["neuf",9],["dix",10],["onze",11],["douze",12],["treize",13],["quatorze",14],["quinze",15],["seize",16],["dix-sept",17],["dix-huit",18],["dix-neuf",19],["vingt",20],["trente",30],["quarante",40],["cinquante",50],["soixante",60],["soixante-dix",70],["septante",70],["quatre-vingts",80],["quatre-vingt",80],["quatre vingts",80],["quatre vingt",80],["quatre-vingt-dix",90],["quatre-vingt dix",90],["quatre vingt dix",90],["quatre-vingts-dix",90],["quatre-vingts-onze",91],["quatre-vingt-onze",91],["quatre-vingts-douze",92],["quatre-vingt-douze",92],["quatre-vingts-treize",93],["quatre-vingt-treize",93],["quatre-vingts-quatorze",94],["quatre-vingt-quatorze",94],["quatre-vingts-quinze",95],["quatre-vingt-quinze",95],["quatre-vingts-seize",96],["quatre-vingt-seize",96],["huitante",80],["octante",80],["nonante",90],["cent",100],["mille",1e3],["un million",1e6],["million",1e6],["millions",1e6],["un milliard",1e9],["milliard",1e9],["milliards",1e9],["un mille milliards",1e12],["un billion",1e12]]),e.OrdinalNumberMap=new Map([["premier",1],["première",1],["premiere",1],["deuxième",2],["deuxieme",2],["second",2],["seconde",2],["troisième",3],["demi",2],["tiers",3],["tierce",3],["quart",4],["quarts",4],["troisieme",3],["quatrième",4],["quatrieme",4],["cinquième",5],["cinquieme",5],["sixième",6],["sixieme",6],["septième",7],["septieme",7],["huitième",8],["huitieme",8],["neuvième",9],["neuvieme",9],["dixième",10],["dixieme",10],["onzième",11],["onzieme",11],["douzième",12],["douzieme",12],["treizième",13],["treizieme",13],["quatorzième",14],["quatorizieme",14],["quinzième",15],["quinzieme",15],["seizième",16],["seizieme",16],["dix-septième",17],["dix-septieme",17],["dix-huitième",18],["dix-huitieme",18],["dix-neuvième",19],["dix-neuvieme",19],["vingtième",20],["vingtieme",20],["trentième",30],["trentieme",30],["quarantième",40],["quarantieme",40],["cinquantième",50],["cinquantieme",50],["soixantième",60],["soixantieme",60],["soixante-dixième",70],["soixante-dixieme",70],["septantième",70],["septantieme",70],["quatre-vingtième",80],["quatre-vingtieme",80],["huitantième",80],["huitantieme",80],["octantième",80],["octantieme",80],["quatre-vingt-dixième",90],["quatre-vingt-dixieme",90],["nonantième",90],["nonantieme",90],["centième",100],["centieme",100],["millième",1e3],["millieme",1e3],["millionième",1e6],["millionieme",1e6],["milliardième",1e9],["milliardieme",1e9],["billionieme",1e12],["billionième",1e12],["trillionième",1e18],["trillionieme",1e18]]),e.PrefixCardinalMap=new Map([["deux",2],["trois",3],["quatre",4],["cinq",5],["six",6],["sept",7],["huit",8],["neuf",9],["dix",10],["onze",11],["douze",12],["treize",13],["quatorze",14],["quinze",15],["seize",16],["dix sept",17],["dix-sept",17],["dix-huit",18],["dix huit",18],["dix-neuf",19],["dix neuf",19],["vingt",20],["vingt-et-un",21],["vingt et un",21],["vingt-deux",21],["vingt deux",22],["vingt-trois",23],["vingt trois",23],["vingt-quatre",24],["vingt quatre",24],["vingt-cinq",25],["vingt cinq",25],["vingt-six",26],["vingt six",26],["vingt-sept",27],["vingt sept",27],["vingt-huit",28],["vingt huit",28],["vingt-neuf",29],["vingt neuf",29],["trente",30],["quarante",40],["cinquante",50],["soixante",60],["soixante-dix",70],["soixante dix",70],["septante",70],["quatre-vingt",80],["quatre vingt",80],["huitante",80],["octante",80],["nonante",90],["quatre vingt dix",90],["quatre-vingt-dix",90],["cent",100],["deux cent",200],["trois cents",300],["quatre cents",400],["cinq cent",500],["six cent",600],["sept cent",700],["huit cent",800],["neuf cent",900]]),e.SuffixOrdinalMap=new Map([["millième",1e3],["million",1e6],["milliardième",1e12]]),e.RoundNumberMap=new Map([["cent",100],["mille",1e3],["million",1e6],["millions",1e6],["milliard",1e9],["milliards",1e9],["billion",1e12],["billions",1e12],["centieme",100],["centième",100],["millieme",1e3],["millième",1e3],["millionième",1e6],["millionieme",1e6],["milliardième",1e9],["milliardieme",1e9],["billionième",1e12],["billionieme",1e12],["centiemes",100],["centièmes",100],["millièmes",1e3],["milliemes",1e3],["millionièmes",1e6],["millioniemes",1e6],["milliardièmes",1e9],["milliardiemes",1e9],["billionièmes",1e12],["billioniemes",1e12],["douzaine",12],["douzaines",12],["k",1e3],["m",1e6],["g",1e9],["b",1e9],["t",1e12]])}(r.FrenchNumeric||(r.FrenchNumeric={}))});unwrapExports(frenchNumeric);var parserConfiguration$6=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.FrenchNumberParserConfiguration=class{constructor(e){e||(e=new culture$2.CultureInfo(culture$2.Culture.French)),this.cultureInfo=e,this.langMarker=frenchNumeric.FrenchNumeric.LangMarker,this.decimalSeparatorChar=frenchNumeric.FrenchNumeric.DecimalSeparatorChar,this.fractionMarkerToken=frenchNumeric.FrenchNumeric.FractionMarkerToken,this.nonDecimalSeparatorChar=frenchNumeric.FrenchNumeric.NonDecimalSeparatorChar,this.halfADozenText=frenchNumeric.FrenchNumeric.HalfADozenText,this.wordSeparatorToken=frenchNumeric.FrenchNumeric.WordSeparatorToken,this.writtenDecimalSeparatorTexts=frenchNumeric.FrenchNumeric.WrittenDecimalSeparatorTexts,this.writtenGroupSeparatorTexts=frenchNumeric.FrenchNumeric.WrittenGroupSeparatorTexts,this.writtenIntegerSeparatorTexts=frenchNumeric.FrenchNumeric.WrittenIntegerSeparatorTexts,this.writtenFractionSeparatorTexts=frenchNumeric.FrenchNumeric.WrittenFractionSeparatorTexts,this.cardinalNumberMap=frenchNumeric.FrenchNumeric.CardinalNumberMap,this.ordinalNumberMap=frenchNumeric.FrenchNumeric.OrdinalNumberMap,this.roundNumberMap=frenchNumeric.FrenchNumeric.RoundNumberMap,this.negativeNumberSignRegex=recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.NegativeNumberSignRegex,"is"),this.halfADozenRegex=recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.HalfADozenRegex),this.digitalNumberRegex=recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.DigitalNumberRegex)}normalizeTokenSet(e,r){return e}resolveCompositeNumber(e){if(this.ordinalNumberMap.has(e))return this.ordinalNumberMap.get(e);if(this.cardinalNumberMap.has(e))return this.cardinalNumberMap.get(e);let r=0,u=0,t="",n=0;for(let a=0;a<e.length;a++)t=t.concat(e[a]),this.cardinalNumberMap.has(t)&&this.cardinalNumberMap.get(t)>r&&(n=a,r=this.cardinalNumberMap.get(t)),a+1===e.length&&(u+=r,t="",a=n++,r=0);return u}}});unwrapExports(parserConfiguration$6);var chineseNumeric=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),function(e){e.LangMarker="",e.DecimalSeparatorChar=".",e.FractionMarkerToken="",e.NonDecimalSeparatorChar=" ",e.HalfADozenText="",e.WordSeparatorToken="",e.RoundNumberMap=new Map([["k",1e3],["m",1e6],["g",1e9],["t",1e12]]),e.RoundNumberMapChar=new Map([["十",10],["百",100],["千",1e3],["万",1e4],["亿",1e8],["兆",1e12],["拾",10],["佰",100],["仟",1e3],["萬",1e4],["億",1e8]]),e.ZeroToNineMap=new Map([["0",0],["1",1],["2",2],["3",3],["4",4],["5",5],["6",6],["7",7],["8",8],["9",9],["零",0],["一",1],["二",2],["三",3],["四",4],["五",5],["六",6],["七",7],["八",8],["九",9],["〇",0],["壹",1],["贰",2],["貳",2],["叁",3],["肆",4],["伍",5],["陆",6],["陸",6],["柒",7],["捌",8],["玖",9],["０",0],["１",1],["２",2],["３",3],["４",4],["５",5],["６",6],["７",7],["８",8],["９",9],["半",.5],["两",2],["兩",2],["俩",2],["倆",2],["仨",3]]),e.FullToHalfMap=new Map([["０","0"],["１","1"],["２","2"],["３","3"],["４","4"],["５","5"],["６","6"],["７","7"],["８","8"],["９","9"],["／","/"],["－","-"],["，","'"],["Ｇ","G"],["Ｍ","M"],["Ｔ","T"],["Ｋ","K"],["ｋ","k"],["．","."]]),e.TratoSimMap=new Map([["佰","百"],["點","点"],["個","个"],["幾","几"],["對","对"],["雙","双"]]),e.UnitMap=new Map([["萬萬","億"],["億萬","兆"],["萬億","兆"],["万万","亿"],["万亿","兆"],["亿万","兆"],[" ",""],["多",""],["余",""],["几",""]]),e.RoundDirectList=["万","萬","亿","兆","億"],e.DigitalNumberRegex="((?<=(\\d|\\b))(k|t|m|g)(?=\\b))",e.ZeroToNineFullHalfRegex="[\\d１２３４５６７８９０]",e.DigitNumRegex=`${e.ZeroToNineFullHalfRegex}+`,e.DozenRegex=".*打$",e.PercentageRegex="(?<=百\\s*分\\s*之).+|.+(?=个\\s*百\\s*分\\s*点)|.*(?=[％%])",e.DoubleAndRoundRegex=`${e.ZeroToNineFullHalfRegex}+(\\.${e.ZeroToNineFullHalfRegex}+)?\\s*[多几余]?[万亿萬億]{1,2}`,e.FracSplitRegex="又|分\\s*之",e.ZeroToNineIntegerRegex="[一二三四五六七八九零壹贰貳叁肆伍陆陸柒捌玖〇两兩俩倆仨]",e.NegativeNumberTermsRegex="[负負]",e.NegativeNumberTermsRegexNum="((?<!(\\d+\\s*)|[-－])[-－])",e.NegativeNumberSignRegex=`^${e.NegativeNumberTermsRegex}.*|^${e.NegativeNumberTermsRegexNum}.*`,e.SpeGetNumberRegex=`${e.ZeroToNineFullHalfRegex}|${e.ZeroToNineIntegerRegex}|[十拾半对對]`,e.PairRegex=".*[双对雙對]$",e.RoundNumberIntegerRegex="(((?<![十百千拾佰仟])[十百千拾佰仟])|([万亿兆萬億]))",e.WhiteListRegex="(。|，|、|（|）|“|”|[到以至]|[国國]|周|夜|[点點]|[个個]|倍|票|[项項]|[亩畝]|分|元|角|天|加|[减減]|乘|除|是|[對对]|打|公[里裏]|公[顷頃]|公分|平方|方|米|厘|毫|[条條]|船|[车車]|[辆輛]|群|[页頁]|杯|人|[张張]|次|位|份|批|[届屆]|[级級]|[种種]|套|[笔筆]|根|[块塊]|件|座|步|[颗顆]|棵|[节節]|支|只|名|年|月|日|[号號]|朵|克|[吨噸]|磅|[码碼]|英尺|英寸|升|加[仑侖]|立方|[台臺]|套|[罗羅]|令|卷|[头頭]|箱|包|桶|袋|[块塊]|家|行|期|[层層]|度|面|所|架|把|片|[阵陣]|[间間]|等|[叠疊]|碟|下|起|手|季|部|人|小[时時]|[时時]|秒|[样樣]|章|段|星|州|款|代|维|重|[户戸]|楼|路|篇|句|键|本|生|者|字|郎|道|边|场|口|线|世|岸|金|类|番|组|卦|眼|系|声|更|带|色|战|成|轮|食|首|幡|站|股|井|流|开|刻|洲|回|宮|集|练|週|和|环|甲|处|省|里|海|遍|品|体|王|尾|新|隻|版|阶|板|侧|波|身|则|扫|房|彩|木|军|居|晚|岛|课|式|通|相|区|文|端|味|田|心|胎|班|出|连|单|事|丝|副|岁|旁|幕|些|枚|招|卡|幅|言|街|指|辈|室|堆|作|封|厢|声|城|族|圈|脸|目|排|模|夕|网|市|向|极|驱|科|提|核|村|审|刀|册|例|关|粒|局|山|寸|碗|瞬|联|游|脚|宅|线|格|入|趟|貫|界|社|肢|技|滴|问|笑|院|堂|尺|寨|档|举|盘|门|客|餐|艘|毛|丈|剑|曲|任|叶|团|派|嘴|桥|抹|枝|贯|伏|拳|列|机|盒|队|进制|栋|席|斤|词|击|题|型|宗|柱|钱|拍|剧|旬|命|扇|匹|湖|壶|觉|叉|校|泉|具|串|射|证|大批|球|横|竖|尊|轴|观|审|石|束|弹|株|领|委|栏|炮|鼎|町|帆|斗|缕|桌|针|帧|转|落|足|梯|县|投|试|帮|掌|箭|盏|锅|计|大片|学期|截|顶|屋|介|剑|桂|旗|巷|挥|晃|员|翼|池|围|勺|宿|库|棒|冠|树|缸|伙|签|揽|坨|匙|桩|顿|纸|隅|诺|案|刊|厂|杆|袭|仓|床|担|帖|屏|盏|腔|贴|窍|洞|円|坪|泡|园|馆|湾|拨|枪|职|亭|背|維|[護护戸]|樓|鍵|邊|場|線|類|組|聲|帶|戰|輪|開|練|環|處|裏|體|隻|階|側|則|掃|軍|居|島|課|式|區|連|單|絲|歲|廂|聲|臉|網|極|驅|審|冊|關|聯|遊|腳|線|貫|問|檔|舉|盤|門|劍|曲|任|葉|團|派|嘴|橋|抹|枝|貫|伏|拳|列|機|盒|隊|進制|棟|詞|擊|題|錢|壺|覺|證|大批|球|橫|豎|尊|軸|觀|審|彈|領|委|欄|釘|鬥|縷|針|幀|轉|縣|試|幫|盞|鍋|計|學期|截|頂|介|劍|桂|旗|巷|揮|晃|員|圍|勺|宿|庫|棒|冠|樹|缸|夥|簽|攬|樁|頓|紙|隅|諾|廠|桿|襲|倉|擔|盞|貼|竅|洞|坪|泡|員|館|灣|撥|槍|職|\\s|$)",e.NotSingleRegex=`((${e.ZeroToNineIntegerRegex}|${e.ZeroToNineFullHalfRegex}|[十拾])\\s*(\\s*[多几幾余]?\\s*${e.RoundNumberIntegerRegex}){1,2}|[十拾]|${e.RoundNumberIntegerRegex}\\s*(${e.ZeroToNineIntegerRegex}|${e.ZeroToNineFullHalfRegex}|零))\\s*(((${e.ZeroToNineIntegerRegex}|${e.ZeroToNineFullHalfRegex})\\s*(\\s*[多几幾余]?\\s*${e.RoundNumberIntegerRegex}){1,2}|零)\\s*)*${e.ZeroToNineIntegerRegex}?`,e.SingleRegex=`(?<!${e.ZeroToNineIntegerRegex})${e.ZeroToNineIntegerRegex}(?=${e.WhiteListRegex})`,e.AllIntRegex=`(((${e.ZeroToNineIntegerRegex}|${e.ZeroToNineFullHalfRegex}|[十拾])\\s*(\\s*[多几幾余]?\\s*${e.RoundNumberIntegerRegex}){1,2}|[十拾]|${e.RoundNumberIntegerRegex}\\s*(${e.ZeroToNineIntegerRegex}|${e.ZeroToNineFullHalfRegex}|零))\\s*(((${e.ZeroToNineIntegerRegex}|${e.ZeroToNineFullHalfRegex})\\s*(\\s*[多几幾余]?\\s*${e.RoundNumberIntegerRegex}){1,2}|零)\\s*)*${e.ZeroToNineIntegerRegex}?|${e.ZeroToNineIntegerRegex})`,e.NumbersSpecialsChars=`((${e.NegativeNumberTermsRegexNum}|${e.NegativeNumberTermsRegex})\\s*)?${e.ZeroToNineFullHalfRegex}+`,e.NumbersSpecialsCharsWithSuffix=`${e.NegativeNumberTermsRegexNum}?${e.ZeroToNineFullHalfRegex}+\\s*(K|k|M|G|T|Ｍ|Ｋ|ｋ|Ｇ|Ｔ)`,e.DottedNumbersSpecialsChar=`${e.NegativeNumberTermsRegexNum}?${e.ZeroToNineFullHalfRegex}{1,3}([,，]${e.ZeroToNineFullHalfRegex}{3})+`,e.NumbersWithHalfDozen=`半(${e.RoundNumberIntegerRegex}|打)`,e.NumbersWithDozen=`${e.AllIntRegex}[双雙对對打](?!${e.AllIntRegex})`,e.PointRegexStr="[点點\\.．]",e.AllFloatRegex=`${e.NegativeNumberTermsRegex}?${e.AllIntRegex}\\s*${e.PointRegexStr}\\s*[一二三四五六七八九零壹贰貳叁肆伍陆陸柒捌玖〇](\\s*${e.ZeroToNineIntegerRegex})*`,e.NumbersWithAllowListRegex=`(?<![百佰]\\s*分\\s*之\\s*(${e.AllIntRegex}[点點]*|${e.AllFloatRegex})*)${e.NegativeNumberTermsRegex}?(${e.NotSingleRegex}|${e.SingleRegex})(?!(${e.AllIntRegex}*([点點]${e.ZeroToNineIntegerRegex}+)*|${e.AllFloatRegex})*\\s*[个個]\\s*[百佰]\\s*分\\s*[点點])`,e.NumbersAggressiveRegex=`(?<![百佰]\\s*分\\s*之\\s*(${e.AllIntRegex}[点點]*|${e.AllFloatRegex})*)${e.NegativeNumberTermsRegex}?${e.AllIntRegex}(?!(${e.AllIntRegex}*([点點]${e.ZeroToNineIntegerRegex}+)*|${e.AllFloatRegex})*\\s*[个個]\\s*[百佰]\\s*分\\s*[点點])`,e.PointRegex=`${e.PointRegexStr}`,e.DoubleSpecialsChars=`(?<!(${e.ZeroToNineFullHalfRegex}+[\\.．]${e.ZeroToNineFullHalfRegex}*))(${e.NegativeNumberTermsRegexNum}\\s*)?${e.ZeroToNineFullHalfRegex}+[\\.．]${e.ZeroToNineFullHalfRegex}+(?!${e.ZeroToNineFullHalfRegex}*[\\.．]${e.ZeroToNineFullHalfRegex}+)`,e.DoubleSpecialsCharsWithNegatives=`(?<!(${e.ZeroToNineFullHalfRegex}+|\\.\\.|．．))(${e.NegativeNumberTermsRegexNum}\\s*)?[\\.．]${e.ZeroToNineFullHalfRegex}+(?!${e.ZeroToNineFullHalfRegex}*([\\.．]${e.ZeroToNineFullHalfRegex}+))`,e.SimpleDoubleSpecialsChars=`(${e.NegativeNumberTermsRegexNum}\\s*)?${e.ZeroToNineFullHalfRegex}{1,3}([,，]${e.ZeroToNineFullHalfRegex}{3})+[\\.．]${e.ZeroToNineFullHalfRegex}+`,e.DoubleWithMultiplierRegex=`(${e.NegativeNumberTermsRegexNum}\\s*)?${e.ZeroToNineFullHalfRegex}+[\\.．]${e.ZeroToNineFullHalfRegex}+\\s*(K|k|M|G|T|Ｍ|Ｋ|ｋ|Ｇ|Ｔ)`,e.DoubleWithThousandsRegex=`${e.NegativeNumberTermsRegex}?${e.ZeroToNineFullHalfRegex}+([\\.．]${e.ZeroToNineFullHalfRegex}+)?\\s*[多几幾余]?[万亿萬億]{1,2}`,e.DoubleAllFloatRegex=`(?<![百佰]\\s*分\\s*之\\s*((${e.AllIntRegex}[点點]*)|${e.AllFloatRegex})*)${e.AllFloatRegex}(?!${e.ZeroToNineIntegerRegex}*\\s*[个個]\\s*[百佰]\\s*分\\s*[点點])`,e.DoubleExponentialNotationRegex=`(?<!${e.ZeroToNineFullHalfRegex}+[\\.．])(${e.NegativeNumberTermsRegexNum}\\s*)?${e.ZeroToNineFullHalfRegex}+([\\.．]${e.ZeroToNineFullHalfRegex}+)?e(([-－+＋]*[1-9１２３４５６７８９]${e.ZeroToNineFullHalfRegex}*)|[0０](?!${e.ZeroToNineFullHalfRegex}+))`,e.DoubleScientificNotationRegex=`(?<!${e.ZeroToNineFullHalfRegex}+[\\.．])(${e.NegativeNumberTermsRegexNum}\\s*)?(${e.ZeroToNineFullHalfRegex}+([\\.．]${e.ZeroToNineFullHalfRegex}+)?)\\^([-－+＋]*[1-9１２３４５６７８９]${e.ZeroToNineFullHalfRegex}*)`,e.OrdinalRegex=`第${e.AllIntRegex}`,e.OrdinalNumbersRegex=`第${e.ZeroToNineFullHalfRegex}+`,e.AllFractionNumber=`${e.NegativeNumberTermsRegex}?((${e.ZeroToNineFullHalfRegex}+|${e.AllIntRegex})\\s*又\\s*)?${e.NegativeNumberTermsRegex}?(${e.ZeroToNineFullHalfRegex}+|${e.AllIntRegex})\\s*分\\s*之\\s*${e.NegativeNumberTermsRegex}?(${e.ZeroToNineFullHalfRegex}+|${e.AllIntRegex})`,e.FractionNotationSpecialsCharsRegex=`(${e.NegativeNumberTermsRegexNum}\\s*)?${e.ZeroToNineFullHalfRegex}+\\s+${e.ZeroToNineFullHalfRegex}+[/／]${e.ZeroToNineFullHalfRegex}+`,e.FractionNotationRegex=`(${e.NegativeNumberTermsRegexNum}\\s*)?${e.ZeroToNineFullHalfRegex}+[/／]${e.ZeroToNineFullHalfRegex}+`,e.PercentagePointRegex=`(?<!${e.AllIntRegex})(${e.AllFloatRegex}|${e.AllIntRegex})\\s*[个個]\\s*[百佰]\\s*分\\s*[点點]`,e.SimplePercentageRegex=`(?<!${e.ZeroToNineIntegerRegex})[百佰]\\s*分\\s*之\\s*(${e.AllFloatRegex}|${e.AllIntRegex}|[百佰])(?!${e.AllIntRegex})`,e.NumbersPercentagePointRegex=`(?<!${e.ZeroToNineIntegerRegex})[百佰]\\s*分\\s*之\\s*${e.ZeroToNineFullHalfRegex}+[\\.．]${e.ZeroToNineFullHalfRegex}+(?!([\\.．]${e.ZeroToNineFullHalfRegex}+))`,e.NumbersPercentageWithSeparatorRegex=`(?<!${e.ZeroToNineIntegerRegex})[百佰]\\s*分\\s*之\\s*${e.ZeroToNineFullHalfRegex}{1,3}([,，]${e.ZeroToNineFullHalfRegex}{3})+[\\.．]${e.ZeroToNineFullHalfRegex}+`,e.NumbersPercentageWithMultiplierRegex=`(?<!${e.ZeroToNineIntegerRegex})[百佰]\\s*分\\s*之\\s*${e.ZeroToNineFullHalfRegex}+[\\.．]${e.ZeroToNineFullHalfRegex}+\\s*(K|k|M|G|T|Ｍ|Ｋ|ｋ|Ｇ|Ｔ)`,e.FractionPercentagePointRegex=`(?<!(${e.ZeroToNineFullHalfRegex}+[\\.．]))${e.ZeroToNineFullHalfRegex}+[\\.．]${e.ZeroToNineFullHalfRegex}+(?!([\\.．]${e.ZeroToNineFullHalfRegex}+))\\s*[个個]\\s*[百佰]\\s*分\\s*[点點]`,e.FractionPercentageWithSeparatorRegex=`${e.ZeroToNineFullHalfRegex}{1,3}([,，]${e.ZeroToNineFullHalfRegex}{3})+[\\.．]${e.ZeroToNineFullHalfRegex}+\\s*[个個]\\s*[百佰]\\s*分\\s*[点點]`,e.FractionPercentageWithMultiplierRegex=`${e.ZeroToNineFullHalfRegex}+[\\.．]${e.ZeroToNineFullHalfRegex}+\\s*(K|k|M|G|T|Ｍ|Ｋ|ｋ|Ｇ|Ｔ)\\s*[个個]\\s*[百佰]\\s*分\\s*[点點]`,e.SimpleNumbersPercentageRegex=`(?<!${e.ZeroToNineIntegerRegex})[百佰]\\s*分\\s*之\\s*${e.ZeroToNineFullHalfRegex}+(?!([\\.．]${e.ZeroToNineFullHalfRegex}+))`,e.SimpleNumbersPercentageWithMultiplierRegex=`(?<!${e.ZeroToNineIntegerRegex})[百佰]\\s*分\\s*之\\s*${e.ZeroToNineFullHalfRegex}+\\s*(K|k|M|G|T|Ｍ|Ｋ|ｋ|Ｇ|Ｔ)`,e.SimpleNumbersPercentagePointRegex=`(?!${e.ZeroToNineIntegerRegex})[百佰]\\s*分\\s*之\\s*${e.ZeroToNineFullHalfRegex}{1,3}([,，]${e.ZeroToNineFullHalfRegex}{3})+`,e.IntegerPercentageRegex=`${e.ZeroToNineFullHalfRegex}+\\s*[个個]\\s*[百佰]\\s*分\\s*[点點]`,e.IntegerPercentageWithMultiplierRegex=`${e.ZeroToNineFullHalfRegex}+\\s*(K|k|M|G|T|Ｍ|Ｋ|ｋ|Ｇ|Ｔ)\\s*[个個]\\s*[百佰]\\s*分\\s*[点點]`,e.NumbersFractionPercentageRegex=`${e.ZeroToNineFullHalfRegex}{1,3}([,，]${e.ZeroToNineFullHalfRegex}{3})+\\s*[个個]\\s*[百佰]\\s*分\\s*[点點]`,e.SimpleIntegerPercentageRegex=`(?<!%|\\d)${e.NegativeNumberTermsRegexNum}?${e.ZeroToNineFullHalfRegex}+([\\.．]${e.ZeroToNineFullHalfRegex}+)?(\\s*)[％%](?!\\d)`,e.NumbersFoldsPercentageRegex=`${e.ZeroToNineFullHalfRegex}(([\\.．]?|\\s*)${e.ZeroToNineFullHalfRegex})?\\s*折`,e.FoldsPercentageRegex=`${e.ZeroToNineIntegerRegex}(\\s*[点點]?\\s*${e.ZeroToNineIntegerRegex})?\\s*折`,e.SimpleFoldsPercentageRegex=`${e.ZeroToNineFullHalfRegex}\\s*成(\\s*(半|${e.ZeroToNineFullHalfRegex}))?`,e.SpecialsPercentageRegex=`(${e.ZeroToNineIntegerRegex}|[十拾])\\s*成(\\s*(半|${e.ZeroToNineIntegerRegex}))?`,e.NumbersSpecialsPercentageRegex=`(${e.ZeroToNineFullHalfRegex}[\\.．]${e.ZeroToNineFullHalfRegex}|[1１][0０])\\s*成`,e.SimpleSpecialsPercentageRegex=`${e.ZeroToNineIntegerRegex}\\s*[点點]\\s*${e.ZeroToNineIntegerRegex}\\s*成`,e.SpecialsFoldsPercentageRegex="半\\s*成|(?<=打)[对對]\\s*折|半\\s*折",e.TillRegex="(到|至|--|-|—|——|~|–)",e.MoreRegex="(大于|多于|高于|超过|大於|多於|高於|超過|>)",e.LessRegex="(小于|少于|低于|小於|少於|低於|不到|不足|<)",e.EqualRegex="(等于|等於|=)",e.MoreOrEqual=`((${e.MoreRegex}\\s*(或|或者)?\\s*${e.EqualRegex})|至少|最少|不${e.LessRegex})`,e.MoreOrEqualSuffix="(或|或者)\\s*(以上|之上|更[大多高])",e.LessOrEqual=`((${e.LessRegex}\\s*(或|或者)?\\s*${e.EqualRegex})|至多|最多|不${e.MoreRegex})`,e.LessOrEqualSuffix="(或|或者)\\s*(以下|之下|更[小少低])",e.OneNumberRangeMoreRegex1=`(${e.MoreOrEqual}|${e.MoreRegex})\\s*(?<number1>((?!([并且而並的同時时]|(，(?!\\d+))|(,(?!\\d+))|。)).)+)`,e.OneNumberRangeMoreRegex2="比\\s*(?<number1>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)\\s*更?[大多高]",e.OneNumberRangeMoreRegex3="(?<number1>((?!((，(?!\\d+))|(,(?!\\d+))|。|[或者])).)+)\\s*(或|或者)?\\s*([多几余幾餘]|以上|之上|更[大多高])(?![万亿萬億]{1,2})",e.OneNumberRangeLessRegex1=`(${e.LessOrEqual}|${e.LessRegex})\\s*(?<number2>((?!([并且而並的同時时]|(，(?!\\d+))|(,(?!\\d+))|。)).)+)`,e.OneNumberRangeLessRegex2="比\\s*(?<number2>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)\\s*更?[小少低]",e.OneNumberRangeLessRegex3="(?<number2>((?!((，(?!\\d+))|(,(?!\\d+))|。|[或者])).)+)\\s*(或|或者)?\\s*(以下|之下|更[小少低])",e.OneNumberRangeMoreSeparateRegex="^[.]",e.OneNumberRangeLessSeparateRegex="^[.]",e.OneNumberRangeEqualRegex=`${e.EqualRegex}\\s*(?<number1>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)`,e.TwoNumberRangeRegex1=`((位于|在|位於)|(?=(\\d|\\+|\\-)))\\s*(?<number1>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)\\s*(和|与|與|${e.TillRegex})\\s*(?<number2>((?!((，(?!\\d+))|(,(?!\\d+))|。))[^之])+)\\s*(之)?(间|間)`,e.TwoNumberRangeRegex2=`(${e.OneNumberRangeMoreRegex1}|${e.OneNumberRangeMoreRegex2}|${e.OneNumberRangeMoreRegex3})\\s*(且|并且|而且|並且|((的)?同時)|((的)?同时)|，)?\\s*(${e.OneNumberRangeLessRegex1}|${e.OneNumberRangeLessRegex2}|${e.OneNumberRangeLessRegex3})`,e.TwoNumberRangeRegex3=`(${e.OneNumberRangeLessRegex1}|${e.OneNumberRangeLessRegex2}|${e.OneNumberRangeLessRegex3})\\s*(且|并且|而且|並且|((的)?同時)|((的)?同时)|，)?\\s*(${e.OneNumberRangeMoreRegex1}|${e.OneNumberRangeMoreRegex2}|${e.OneNumberRangeMoreRegex3})`,e.TwoNumberRangeRegex4=`(?<number1>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)\\s*${e.TillRegex}\\s*(?<number2>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)`,e.AmbiguousFractionConnectorsRegex="^[.]"}(r.ChineseNumeric||(r.ChineseNumeric={}))});unwrapExports(chineseNumeric);var parserConfiguration$8=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.ChineseNumberParserConfiguration=class{constructor(e){e||(e=new culture$2.CultureInfo(culture$2.Culture.Chinese)),this.cultureInfo=e,this.langMarker=chineseNumeric.ChineseNumeric.LangMarker,this.decimalSeparatorChar=chineseNumeric.ChineseNumeric.DecimalSeparatorChar,this.fractionMarkerToken=chineseNumeric.ChineseNumeric.FractionMarkerToken,this.nonDecimalSeparatorChar=chineseNumeric.ChineseNumeric.NonDecimalSeparatorChar,this.halfADozenText=chineseNumeric.ChineseNumeric.HalfADozenText,this.wordSeparatorToken=chineseNumeric.ChineseNumeric.WordSeparatorToken,this.writtenDecimalSeparatorTexts=[],this.writtenGroupSeparatorTexts=[],this.writtenIntegerSeparatorTexts=[],this.writtenFractionSeparatorTexts=[],this.cardinalNumberMap=new Map,this.ordinalNumberMap=new Map,this.roundNumberMap=chineseNumeric.ChineseNumeric.RoundNumberMap,this.halfADozenRegex=null,this.digitalNumberRegex=recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.DigitalNumberRegex,"gis"),this.zeroToNineMap=chineseNumeric.ChineseNumeric.ZeroToNineMap,this.roundNumberMapChar=chineseNumeric.ChineseNumeric.RoundNumberMapChar,this.fullToHalfMap=chineseNumeric.ChineseNumeric.FullToHalfMap,this.tratoSimMap=chineseNumeric.ChineseNumeric.TratoSimMap,this.unitMap=chineseNumeric.ChineseNumeric.UnitMap,this.roundDirectList=chineseNumeric.ChineseNumeric.RoundDirectList,this.digitNumRegex=recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.DigitNumRegex,"gis"),this.dozenRegex=recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.DozenRegex,"gis"),this.percentageRegex=recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.PercentageRegex,"gis"),this.doubleAndRoundRegex=recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.DoubleAndRoundRegex,"gis"),this.fracSplitRegex=recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.FracSplitRegex,"gis"),this.negativeNumberSignRegex=recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.NegativeNumberSignRegex,"gis"),this.pointRegex=recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.PointRegex,"gis"),this.speGetNumberRegex=recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.SpeGetNumberRegex,"gis"),this.pairRegex=recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.PairRegex,"gis"),this.roundNumberIntegerRegex=recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.RoundNumberIntegerRegex,"gis")}normalizeTokenSet(e,r){return e}resolveCompositeNumber(e){return 0}}});unwrapExports(parserConfiguration$8);var japaneseNumeric=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),function(e){e.LangMarker="",e.DecimalSeparatorChar=".",e.FractionMarkerToken="",e.NonDecimalSeparatorChar=" ",e.HalfADozenText="",e.WordSeparatorToken="",e.RoundNumberMap=new Map([["k",1e3],["m",1e6],["g",1e9],["t",1e12]]),e.RoundNumberMapChar=new Map([["十",10],["百",100],["千",1e3],["万",1e4],["億",1e8],["兆",1e12]]),e.ZeroToNineMap=new Map([["0",0],["1",1],["2",2],["3",3],["4",4],["5",5],["6",6],["7",7],["8",8],["9",9],["零",0],["一",1],["二",2],["三",3],["四",4],["五",5],["六",6],["七",7],["八",8],["九",9],["半",.5]]),e.FullToHalfMap=new Map([["０","0"],["１","1"],["２","2"],["３","3"],["４","4"],["５","5"],["６","6"],["７","7"],["８","8"],["９","9"],["／","/"],["－","-"],["，","'"],["、","'"],["Ｇ","G"],["Ｍ","M"],["Ｔ","T"],["Ｋ","K"],["ｋ","k"],["．","."]]),e.UnitMap=new Map([["万万","億"],["億万","兆"],["万億","兆"],[" ",""]]),e.RoundDirectList=["万","億","兆"],e.DigitalNumberRegex="((?<=(\\d|\\b))(k|t|m|g)(?=\\b))",e.ZeroToNineFullHalfRegex="[\\d１２３４５６７８９０]",e.DigitNumRegex=`${e.ZeroToNineFullHalfRegex}+`,e.DozenRegex=".*ダース$",e.PercentageRegex=".+(?=パ\\s*ー\\s*セ\\s*ン\\s*ト)|.*(?=[％%])",e.DoubleAndRoundRegex=`${e.ZeroToNineFullHalfRegex}+(\\.${e.ZeroToNineFullHalfRegex}+)?\\s*[万億]{1,2}(\\s*(以上))?`,e.FracSplitRegex="[はと]|分\\s*の",e.ZeroToNineIntegerRegex="[一二三四五六七八九]",e.NegativeNumberTermsRegex="(マ\\s*イ\\s*ナ\\s*ス)",e.NegativeNumberTermsRegexNum="(?<!(\\d+\\s*)|[-－])[-－]",e.NegativeNumberSignRegex=`^${e.NegativeNumberTermsRegex}.*|^${e.NegativeNumberTermsRegexNum}.*`,e.SpeGetNumberRegex=`${e.ZeroToNineFullHalfRegex}|${e.ZeroToNineIntegerRegex}|[半対]|[分厘]`,e.PairRegex=".*[対膳足]$",e.RoundNumberIntegerRegex="[十百千万億兆]",e.WhiteListRegex="(。|，|、|（|）|”｜国|週間|時間|時|匹|キロ|トン|年|個|足|本|\\s|$)",e.NotSingleRegex=`(?<!(第|だい))((${e.RoundNumberIntegerRegex}+(${e.ZeroToNineIntegerRegex}+|${e.ZeroToNineFullHalfRegex}+|十)\\s*))|((${e.ZeroToNineIntegerRegex}+|${e.ZeroToNineFullHalfRegex}+|十)\\s*(${e.RoundNumberIntegerRegex}\\s*){1,2})\\s*(([零]?(${e.ZeroToNineIntegerRegex}+|${e.ZeroToNineFullHalfRegex}+|十)\\s*${e.RoundNumberIntegerRegex}{0,1})\\s*)*\\s*(\\s*(以上)?)`,e.SingleRegex=`((${e.ZeroToNineIntegerRegex}|${e.ZeroToNineFullHalfRegex}|十)(?=${e.WhiteListRegex}))`,e.AllIntRegex=`((((${e.ZeroToNineIntegerRegex}|[十百千])\\s*${e.RoundNumberIntegerRegex}*)|(${e.ZeroToNineFullHalfRegex}\\s*${e.RoundNumberIntegerRegex})){1,2}(\\s*[以上])?)`,e.NumbersSpecialsChars=`((${e.NegativeNumberTermsRegexNum}|${e.NegativeNumberTermsRegex})\\s*)?${e.ZeroToNineFullHalfRegex}+`,e.NumbersSpecialsCharsWithSuffix=`${e.NegativeNumberTermsRegexNum}?${e.ZeroToNineFullHalfRegex}+\\s*(K|k|M|G|T|Ｍ|Ｋ|ｋ|Ｇ|Ｔ)`,e.DottedNumbersSpecialsChar=`${e.NegativeNumberTermsRegexNum}?${e.ZeroToNineFullHalfRegex}{1,3}([,，、]${e.ZeroToNineFullHalfRegex}{3})+`,e.NumbersWithHalfDozen=`半(${e.RoundNumberIntegerRegex}|(ダース))`,e.NumbersWithDozen=`${e.AllIntRegex}(ダース)(?!${e.AllIntRegex})`,e.PointRegexStr="[\\.．]",e.AllFloatRegex=`${e.NegativeNumberTermsRegex}?${e.AllIntRegex}\\s*${e.PointRegexStr}\\s*[一二三四五六七八九](\\s*${e.ZeroToNineIntegerRegex})*`,e.NumbersWithAllowListRegex=`${e.NegativeNumberTermsRegex}?(${e.NotSingleRegex}|${e.SingleRegex})(?!(${e.AllIntRegex}*([、.]${e.ZeroToNineIntegerRegex}+)*|${e.AllFloatRegex})*\\s*${e.PercentageRegex}+)`,e.NumbersAggressiveRegex=`((${e.AllIntRegex})(?!(${e.AllIntRegex}*([、.]${e.ZeroToNineIntegerRegex}+)*|${e.AllFloatRegex})*\\s*${e.PercentageRegex}*))`,e.PointRegex=`${e.PointRegexStr}`,e.DoubleSpecialsChars=`(?<!(${e.ZeroToNineFullHalfRegex}+[\\.．]${e.ZeroToNineFullHalfRegex}*))(${e.NegativeNumberTermsRegexNum}\\s*)?${e.ZeroToNineFullHalfRegex}+[\\.．]${e.ZeroToNineFullHalfRegex}+(?!${e.ZeroToNineFullHalfRegex}*[\\.．]${e.ZeroToNineFullHalfRegex}+)`,e.DoubleSpecialsCharsWithNegatives=`(?<!(${e.ZeroToNineFullHalfRegex}+|\\.\\.|．．))(${e.NegativeNumberTermsRegexNum}\\s*)?[\\.．]${e.ZeroToNineFullHalfRegex}+(?!${e.ZeroToNineFullHalfRegex}*([\\.．]${e.ZeroToNineFullHalfRegex}+))`,e.SimpleDoubleSpecialsChars=`(${e.NegativeNumberTermsRegexNum}\\s*)?${e.ZeroToNineFullHalfRegex}{1,3}([,，]${e.ZeroToNineFullHalfRegex}{3})+[\\.．]${e.ZeroToNineFullHalfRegex}+`,e.DoubleWithMultiplierRegex=`(${e.NegativeNumberTermsRegexNum}\\s*)?${e.ZeroToNineFullHalfRegex}+[\\.．]${e.ZeroToNineFullHalfRegex}+\\s*(K|k|M|G|T|Ｍ|Ｋ|ｋ|Ｇ|Ｔ)`,e.DoubleWithThousandsRegex=`${e.NegativeNumberTermsRegex}{0,1}\\s*(${e.ZeroToNineFullHalfRegex}+([\\.．]${e.ZeroToNineFullHalfRegex}+)?\\s*[万亿萬億]{1,2})`,e.DoubleAllFloatRegex=`(?<!((${e.AllIntRegex}[.]*)|${e.AllFloatRegex})*)${e.AllFloatRegex}(?!${e.ZeroToNineIntegerRegex}*\\s*パーセント)`,e.DoubleExponentialNotationRegex=`(?<!${e.ZeroToNineFullHalfRegex}+[\\.．])(${e.NegativeNumberTermsRegexNum}\\s*)?${e.ZeroToNineFullHalfRegex}+([\\.．]${e.ZeroToNineFullHalfRegex}+)?e(([-－+＋]*[1-9１２３４５６７８９]${e.ZeroToNineFullHalfRegex}*)|[0０](?!${e.ZeroToNineFullHalfRegex}+))`,e.DoubleScientificNotationRegex=`(?<!${e.ZeroToNineFullHalfRegex}+[\\.．])(${e.NegativeNumberTermsRegexNum}\\s*)?(${e.ZeroToNineFullHalfRegex}+([\\.．]${e.ZeroToNineFullHalfRegex}+)?)\\^([-－+＋]*[1-9１２３４５６７８９]${e.ZeroToNineFullHalfRegex}*)`,e.OrdinalRegex=`(第|だい)${e.AllIntRegex}`,e.OrdinalNumbersRegex=`(第|だい)${e.ZeroToNineFullHalfRegex}+`,e.AllFractionNumber=`${e.NegativeNumberTermsRegex}{0,1}((${e.ZeroToNineFullHalfRegex}+|${e.AllIntRegex})\\s*[はと]{0,1}\\s*)?${e.NegativeNumberTermsRegex}{0,1}(${e.ZeroToNineFullHalfRegex}+|${e.AllIntRegex})\\s*分\\s*の\\s*${e.NegativeNumberTermsRegex}{0,1}(${e.ZeroToNineFullHalfRegex}+|${e.AllIntRegex})`,e.FractionNotationSpecialsCharsRegex=`(${e.NegativeNumberTermsRegexNum}\\s*)?${e.ZeroToNineFullHalfRegex}+\\s+${e.ZeroToNineFullHalfRegex}+[/／]${e.ZeroToNineFullHalfRegex}+`,e.FractionNotationRegex=`(${e.NegativeNumberTermsRegexNum}\\s*)?${e.ZeroToNineFullHalfRegex}+[/／]${e.ZeroToNineFullHalfRegex}+`,e.PercentagePointRegex=`(?<!${e.AllIntRegex})(${e.AllFloatRegex}|${e.AllIntRegex})\\s*パ\\s*ー\\s*セ\\s*ン\\s*ト`,e.SimplePercentageRegex=`(${e.AllFloatRegex}|${e.AllIntRegex}|[百])\\s*パ\\s*ー\\s*セ\\s*ン\\s*ト`,e.NumbersPercentagePointRegex=`(${e.ZeroToNineFullHalfRegex})+([\\.．](${e.ZeroToNineFullHalfRegex})+)?\\s*パ\\s*ー\\s*セ\\s*ン\\s*ト`,e.NumbersPercentageWithSeparatorRegex=`(${e.ZeroToNineFullHalfRegex}{1,3}[,，、]${e.ZeroToNineFullHalfRegex}{3})+([\\.．]${e.ZeroToNineFullHalfRegex}+)*\\s*パ\\s*ー\\s*セ\\s*ン\\s*ト`,e.NumbersPercentageWithMultiplierRegex=`(?<!${e.ZeroToNineIntegerRegex})${e.ZeroToNineFullHalfRegex}+[\\.．]${e.ZeroToNineFullHalfRegex}+\\s*(K|k|M|G|T|Ｍ|Ｋ|ｋ|Ｇ|Ｔ)\\s*パ\\s*ー\\s*セ\\s*ン\\s*ト`,e.FractionPercentagePointRegex=`(?<!(${e.ZeroToNineFullHalfRegex}+[\\.．]))${e.ZeroToNineFullHalfRegex}+[\\.．]${e.ZeroToNineFullHalfRegex}+(?!([\\.．]${e.ZeroToNineFullHalfRegex}+))\\s*パ\\s*ー\\s*セ\\s*ン\\s*ト`,e.FractionPercentageWithSeparatorRegex=`${e.ZeroToNineFullHalfRegex}{1,3}([,，、]${e.ZeroToNineFullHalfRegex}{3})+[\\.．]${e.ZeroToNineFullHalfRegex}+\\s*パ\\s*ー\\s*セ\\s*ン\\s*ト`,e.FractionPercentageWithMultiplierRegex=`${e.ZeroToNineFullHalfRegex}+[\\.．]${e.ZeroToNineFullHalfRegex}+\\s*(K|k|M|G|T|Ｍ|Ｋ|ｋ|Ｇ|Ｔ)\\s*パ\\s*ー\\s*セ\\s*ン\\s*ト`,e.SimpleNumbersPercentageRegex=`(?<!${e.ZeroToNineIntegerRegex})${e.ZeroToNineFullHalfRegex}+\\s*パ\\s*ー\\s*セ\\s*ン\\s*ト(?!([\\.．]${e.ZeroToNineFullHalfRegex}+))`,e.SimpleNumbersPercentageWithMultiplierRegex=`(?<!${e.ZeroToNineIntegerRegex})${e.ZeroToNineFullHalfRegex}+\\s*(K|k|M|G|T|Ｍ|Ｋ|ｋ|Ｇ|Ｔ)\\s*パ\\s*ー\\s*セ\\s*ン\\s*ト`,e.SimpleNumbersPercentagePointRegex=`(?!${e.ZeroToNineIntegerRegex})${e.ZeroToNineFullHalfRegex}{1,3}([,，]${e.ZeroToNineFullHalfRegex}{3})+\\s*パ\\s*ー\\s*セ\\s*ン\\s*ト`,e.IntegerPercentageRegex=`${e.ZeroToNineFullHalfRegex}+\\s*パ\\s*ー\\s*セ\\s*ン\\s*ト`,e.IntegerPercentageWithMultiplierRegex=`${e.ZeroToNineFullHalfRegex}+\\s*(K|k|M|G|T|Ｍ|Ｋ|ｋ|Ｇ|Ｔ)\\s*パ\\s*ー\\s*セ\\s*ン\\s*ト`,e.NumbersFractionPercentageRegex=`${e.ZeroToNineFullHalfRegex}{1,3}([,，]${e.ZeroToNineFullHalfRegex}{3})+\\s*パ\\s*ー\\s*セ\\s*ン\\s*ト`,e.SimpleIntegerPercentageRegex=`${e.NegativeNumberTermsRegexNum}?${e.ZeroToNineFullHalfRegex}+([\\.．]${e.ZeroToNineFullHalfRegex}+)?(\\s*)[％%]`,e.NumbersFoldsPercentageRegex=`${e.ZeroToNineFullHalfRegex}(([\\.．]?|\\s*)${e.ZeroToNineFullHalfRegex})?\\s*[の]*\\s*割引`,e.FoldsPercentageRegex=`${e.ZeroToNineIntegerRegex}(\\s*[.]?\\s*${e.ZeroToNineIntegerRegex})?\\s*[の]\\s*割引`,e.SimpleFoldsPercentageRegex=`${e.ZeroToNineFullHalfRegex}\\s*割(\\s*(半|(${e.ZeroToNineFullHalfRegex}\\s*分\\s*${e.ZeroToNineFullHalfRegex}\\s*厘)|${e.ZeroToNineFullHalfRegex}))?`,e.SpecialsPercentageRegex=`(${e.ZeroToNineIntegerRegex}|[十])\\s*割(\\s*(半|${e.ZeroToNineIntegerRegex}))?`,e.NumbersSpecialsPercentageRegex=`(${e.ZeroToNineFullHalfRegex}[\\.．]${e.ZeroToNineFullHalfRegex}|[1１][0０])\\s*割`,e.SimpleSpecialsPercentageRegex=`${e.ZeroToNineIntegerRegex}\\s*[.]\\s*${e.ZeroToNineIntegerRegex}\\s*割`,e.SpecialsFoldsPercentageRegex="半\\s*分|(?<=ダース)",e.TillRegex="(から|--|-|—|——|~)",e.MoreRegex="(大なり|大きい|高い|大きく|>)",e.LessRegex="(小なり|小さい|低い|<)",e.EqualRegex="(等しい|イコール|=)",e.MoreOrEqual="((大なりかイコール)|(大きいかイコール)|(大なりか等しい)|(大きいか等しい)|小さくない|以上|最低)",e.MoreOrEqualSuffix="(より(大なりイコール|小さくない))",e.LessOrEqual=`((${e.LessRegex}\\s*(或|或者)?\\s*${e.EqualRegex})|(小なりかイコール)|(小なりか等しい)|(小さいかイコール)|(小さいか等しい)|(小さいか等しい)|大さくない|以下|最大)`,e.LessOrEqualSuffix="(小なりイコール|大さくない)",e.OneNumberRangeMoreRegex1=`(?<number1>((?!(((，|、)(?!\\d+))|((,|、)(?!\\d+))|。)).)+)\\s*((より)\\s*((${e.MoreOrEqual}|${e.MoreRegex}))|超える|を超える)`,e.OneNumberRangeMoreRegex2="(?<number1>((?!((，|、(?!\\d+))|(,|、(?!\\d+))|。)).)+)\\s*(より)?(大なり)",e.OneNumberRangeMoreRegex3="(?<number1>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)\\s*(以上|最低)(?![万億]{1,2})",e.OneNumberRangeMoreRegex4=`(${e.MoreOrEqual}|${e.MoreRegex})\\s*(?<number1>((?!(と|は|((と)?同時に)|((と)?そして)|が|，|、|,|(，(?!\\d+))|(,(?!\\d+))|。)).)+)`,e.OneNumberRangeMoreSeparateRegex="^[.]",e.OneNumberRangeLessSeparateRegex="^[.]",e.OneNumberRangeLessRegex1=`(?<number2>((?!(((，|、)(?!\\d+))|((,|、)(?!\\d+))|。)).)+)\\s*(より)\\s*(${e.LessOrEqual}|${e.LessRegex})`,e.OneNumberRangeLessRegex2="(?<number2>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)\\s*(より)?(小な)",e.OneNumberRangeLessRegex3="(?<number2>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)\\s*(以下|未満)(?![万億]{1,2})",e.OneNumberRangeLessRegex4=`(${e.LessOrEqual}|${e.LessRegex})\\s*(?<number2>((?!(と|は|((と)?同時に)|((と)?そして)|が|，|、|,|(，(?!\\d+))|(,(?!\\d+))|。)).)+)`,e.OneNumberRangeEqualRegex=`(((?<number1>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)\\s*(に)\\s*${e.EqualRegex})|(${e.EqualRegex}\\s*(?<number1>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)))`,e.TwoNumberRangeRegex1=`(?<number1>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)\\s*(と|${e.TillRegex})\\s*(?<number2>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)\\s*(の間)`,e.TwoNumberRangeRegex2=`(${e.OneNumberRangeMoreRegex1}|${e.OneNumberRangeMoreRegex2}|${e.OneNumberRangeMoreRegex3}|${e.OneNumberRangeMoreRegex4})\\s*(と|は|((と)?同時に)|((と)?そして)|が|，|、|,)?\\s*(${e.OneNumberRangeLessRegex1}|${e.OneNumberRangeLessRegex2}|${e.OneNumberRangeLessRegex3}|${e.OneNumberRangeLessRegex4})`,e.TwoNumberRangeRegex3=`(${e.OneNumberRangeLessRegex1}|${e.OneNumberRangeLessRegex2}|${e.OneNumberRangeLessRegex3}|${e.OneNumberRangeLessRegex4})\\s*(と|は|((と)?同時に)|((と)?そして)|が|，|、|,)?\\s*(${e.OneNumberRangeMoreRegex1}|${e.OneNumberRangeMoreRegex2}|${e.OneNumberRangeMoreRegex3}|${e.OneNumberRangeMoreRegex4})`,e.TwoNumberRangeRegex4=`(?<number1>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)\\s*${e.TillRegex}\\s*(?<number2>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)`,e.AmbiguousFractionConnectorsRegex="^[.]"}(r.JapaneseNumeric||(r.JapaneseNumeric={}))});unwrapExports(japaneseNumeric);var parserConfiguration$10=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.JapaneseNumberParserConfiguration=class{constructor(e){e||(e=new culture$2.CultureInfo(culture$2.Culture.Japanese)),this.cultureInfo=e,this.langMarker=japaneseNumeric.JapaneseNumeric.LangMarker,this.decimalSeparatorChar=japaneseNumeric.JapaneseNumeric.DecimalSeparatorChar,this.fractionMarkerToken=japaneseNumeric.JapaneseNumeric.FractionMarkerToken,this.nonDecimalSeparatorChar=japaneseNumeric.JapaneseNumeric.NonDecimalSeparatorChar,this.halfADozenText=japaneseNumeric.JapaneseNumeric.HalfADozenText,this.wordSeparatorToken=japaneseNumeric.JapaneseNumeric.WordSeparatorToken,this.writtenDecimalSeparatorTexts=[],this.writtenGroupSeparatorTexts=[],this.writtenIntegerSeparatorTexts=[],this.writtenFractionSeparatorTexts=[],this.cardinalNumberMap=new Map,this.ordinalNumberMap=new Map,this.roundNumberMap=japaneseNumeric.JapaneseNumeric.RoundNumberMap,this.halfADozenRegex=null,this.digitalNumberRegex=recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.DigitalNumberRegex,"gis"),this.zeroToNineMap=japaneseNumeric.JapaneseNumeric.ZeroToNineMap,this.roundNumberMapChar=japaneseNumeric.JapaneseNumeric.RoundNumberMapChar,this.fullToHalfMap=japaneseNumeric.JapaneseNumeric.FullToHalfMap,this.tratoSimMap=null,this.unitMap=japaneseNumeric.JapaneseNumeric.UnitMap,this.roundDirectList=japaneseNumeric.JapaneseNumeric.RoundDirectList,this.digitNumRegex=recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.DigitNumRegex,"gis"),this.dozenRegex=recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.DozenRegex,"gis"),this.percentageRegex=recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.PercentageRegex,"gis"),this.doubleAndRoundRegex=recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.DoubleAndRoundRegex,"gis"),this.fracSplitRegex=recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.FracSplitRegex,"gis"),this.negativeNumberSignRegex=recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.NegativeNumberSignRegex,"is"),this.pointRegex=recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.PointRegex,"gis"),this.speGetNumberRegex=recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.SpeGetNumberRegex,"gis"),this.pairRegex=recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.PairRegex,"gis"),this.roundNumberIntegerRegex=recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.RoundNumberIntegerRegex,"gis")}normalizeTokenSet(e,r){return e}resolveCompositeNumber(e){return 0}}});unwrapExports(parserConfiguration$10);var INFINITY$1=1/0,symbolTag$1="[object Symbol]",reRegExpChar=/[\\^$.*+?()[\]{}|]/g,reHasRegExpChar=RegExp(reRegExpChar.source),freeGlobal$1="object"==typeof commonjsGlobal&&commonjsGlobal&&commonjsGlobal.Object===Object&&commonjsGlobal,freeSelf$1="object"==typeof self&&self&&self.Object===Object&&self,root$1=freeGlobal$1||freeSelf$1||Function("return this")(),objectProto$1=Object.prototype,objectToString$1=objectProto$1.toString,Symbol$2=root$1.Symbol,symbolProto$1=Symbol$2?Symbol$2.prototype:void 0,symbolToString$1=symbolProto$1?symbolProto$1.toString:void 0;function baseToString$1(e){if("string"==typeof e)return e;if(isSymbol$1(e))return symbolToString$1?symbolToString$1.call(e):"";var r=e+"";return"0"==r&&1/e==-INFINITY$1?"-0":r}function isObjectLike$1(e){return!!e&&"object"==typeof e}function isSymbol$1(e){return"symbol"==typeof e||isObjectLike$1(e)&&objectToString$1.call(e)==symbolTag$1}function toString$1(e){return null==e?"":baseToString$1(e)}function escapeRegExp(e){return(e=toString$1(e))&&reHasRegExpChar.test(e)?e.replace(reRegExpChar,"\\$&"):e}var lodash_escaperegexp=escapeRegExp,extractors$4=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.BaseNumberExtractor=class{constructor(){this.extractType="",this.negativeNumberTermsRegex=null}extract(e){if(!e||0===e.trim().length)return[];let r=new Array,u=new Map,t=new Array(e.length);for(let r=0;r<e.length;r++)t[r]=!1;this.regexes.map(r=>({matches:recognizersText.RegExpUtility.getMatches(r.regExp,e),value:r.value})).filter(e=>e.matches&&e.matches.length).forEach(e=>{e.matches.forEach(r=>{for(let e=0;e<r.length;e++)t[r.index+e]=!0;u.set(r,e.value)})});let n=-1;for(let a=0;a<e.length;a++)if(t[a]){if(a+1===e.length||!t[a+1]){let t=n+1,d=a-n,i=e.substring(t,t+d),s=Array.from(u.keys()).find(e=>e.index===t&&e.length===d);if(null!==this.negativeNumberTermsRegex){let r=e.substr(0,t).match(this.negativeNumberTermsRegex);r&&(t=r.index,d+=r[0].length,i=r[0]+i)}s&&r.push({start:t,length:d,text:i,type:this.extractType,data:u.has(s)?u.get(s):null})}}else n=a;return r}generateLongFormatNumberRegexes(e,r=baseNumbers.BaseNumbers.PlaceHolderDefault){let u=lodash_escaperegexp(e.thousandsMark),t=lodash_escaperegexp(e.decimalsMark),n="\0"===e.decimalsMark?baseNumbers.BaseNumbers.IntegerRegexDefinition(r,u):baseNumbers.BaseNumbers.DoubleRegexDefinition(r,u,t);return recognizersText.RegExpUtility.getSafeRegExp(n,"gis")}};class u{constructor(e){this.extractType=constants.Constants.SYS_NUM_PERCENTAGE,this.numberExtractor=e,this.regexes=this.initRegexes()}extract(e){let r,u,t=e,n=this.preprocessStrWithNumberExtracted(t);e=n.source,r=n.positionMap,u=n.numExtResults;let a=this.regexes.map(r=>recognizersText.RegExpUtility.getMatches(r,e)),d=new Array(e.length);for(let r=0;r<e.length;r++)d[r]=!1;for(let e=0;e<a.length;e++)a[e].forEach(e=>{for(let r=0;r<e.length;r++)d[r+e.index]=!0});let i=new Array,s=-1;for(let r=0;r<e.length;r++)if(d[r]){if(r+1===e.length||!1===d[r+1]){let u=s+1,t=r-s,n={start:u,length:t,text:e.substring(u,u+t),type:this.extractType};i.push(n)}}else s=r;return this.postProcessing(i,t,r,u),i}preprocessStrWithNumberExtracted(e){let r,u,t=new Map,n=this.numberExtractor.extract(e),a=baseNumbers.BaseNumbers.NumberReplaceToken,d=new Array(e.length),i=new Array;for(let r=0;r<e.length;r++)d[r]=-1;for(let e=0;e<n.length;e++){let t=n[e];r=t.start,u=t.length+r;for(let t=r;t<u;t++)-1===d[t]&&(d[t]=e)}r=0;for(let u=1;u<e.length;u++)d[u]!==d[u-1]&&(i.push([r,u-1]),r=u);i.push([r,e.length-1]);let s="",o=0;return i.forEach(n=>{if(r=n[0],u=n[1],-1===d[r]){s+=e.substring(r,u+1);for(let e=r;e<=u;e++)t.set(o++,e)}else{e.substring(r,u+1);s+=a;for(let e=0;e<a.length;e++)t.set(o++,r)}}),t.set(o++,e.length),{numExtResults:n,source:s,positionMap:t}}postProcessing(e,r,u,t){let n=baseNumbers.BaseNumbers.NumberReplaceToken;for(let a=0;a<e.length;a++){let d=e[a].start,i=d+e[a].length,s=e[a].text;if(u.has(d)&&u.has(i)){let o=u.get(d),c=u.get(i)-o;e[a].start=o,e[a].length=c,e[a].text=r.substring(o,o+c).trim();let l=s.indexOf(n);if(-1!==l){let i=d+l;if(u.has(l)){let d=r.substring(u.get(i),u.get(i+n.length));for(let r=a;r<t.length;r++)if(e[a].start===t[r].start&&e[a].text.includes(t[r].text)){e[a].data=[d,t[r]];break}}}}}}buildRegexes(e,r=!0){return e.map(e=>{let u="gs";return r&&(u+="i"),recognizersText.RegExpUtility.getSafeRegExp(e,u)})}}u.numExtType=constants.Constants.SYS_NUM,r.BasePercentageExtractor=u});unwrapExports(extractors$4);var extractors$2=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});class u extends extractors$4.BaseNumberExtractor{constructor(e=models$2.NumberMode.Default){super(),this.extractType=constants.Constants.SYS_NUM,this.negativeNumberTermsRegex=recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.NegativeNumberTermsRegex+"$","is");let r=new Array,u=null;switch(e){case models$2.NumberMode.PureNumber:u=new t(englishNumeric.EnglishNumeric.PlaceHolderPureNumber);break;case models$2.NumberMode.Currency:r.push({regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.CurrencyRegex,"gs"),value:"IntegerNum"});break;case models$2.NumberMode.Default:}null===u&&(u=new t),u.regexes.forEach(e=>r.push(e)),(new d).regexes.forEach(e=>r.push(e)),this.regexes=r}}r.EnglishNumberExtractor=u;class t extends extractors$4.BaseNumberExtractor{constructor(e=englishNumeric.EnglishNumeric.PlaceHolderDefault){super(),this.extractType=constants.Constants.SYS_NUM_CARDINAL;let r=new Array;new n(e).regexes.forEach(e=>r.push(e)),new a(e).regexes.forEach(e=>r.push(e)),this.regexes=r}}r.EnglishCardinalExtractor=t;class n extends extractors$4.BaseNumberExtractor{constructor(e=englishNumeric.EnglishNumeric.PlaceHolderDefault){super(),this.extractType=constants.Constants.SYS_NUM_INTEGER;let r=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.NumbersWithPlaceHolder(e),"gi"),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.NumbersWithSuffix,"gs"),value:"IntegerNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.integerNumComma,e),value:"IntegerNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.integerNumBlank,e),value:"IntegerNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.integerNumNoBreakSpace,e),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.RoundNumberIntegerRegexWithLocks,"gis"),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.NumbersWithDozenSuffix,"gis"),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.AllIntRegexWithLocks,"gis"),value:"IntegerEng"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.AllIntRegexWithDozenSuffixLocks,"gis"),value:"IntegerEng"});this.regexes=r}}r.EnglishIntegerExtractor=n;class a extends extractors$4.BaseNumberExtractor{constructor(e=englishNumeric.EnglishNumeric.PlaceHolderDefault){super(),this.extractType=constants.Constants.SYS_NUM_DOUBLE;let r=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.DoubleDecimalPointRegex(e),"gis"),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.DoubleWithoutIntegralRegex(e),"gis"),value:"DoubleNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.doubleNumCommaDot,e),value:"DoubleNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.doubleNumNoBreakSpaceDot,e),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.DoubleWithMultiplierRegex,"gs"),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.DoubleWithRoundNumber,"gis"),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.DoubleAllFloatRegex,"gis"),value:"DoubleEng"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.DoubleExponentialNotationRegex,"gis"),value:"DoublePow"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.DoubleCaretExponentialNotationRegex,"gis"),value:"DoublePow"});this.regexes=r}}r.EnglishDoubleExtractor=a;class d extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_FRACTION;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.FractionNotationWithSpacesRegex,"gis"),value:"FracNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.FractionNotationRegex,"gis"),value:"FracNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.FractionNounRegex,"gis"),value:"FracEng"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.FractionNounWithArticleRegex,"gis"),value:"FracEng"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.FractionPrepositionRegex,"gis"),value:"FracEng"});this.regexes=e}}r.EnglishFractionExtractor=d;r.EnglishOrdinalExtractor=class extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_ORDINAL;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.OrdinalSuffixRegex,"gis"),value:"OrdinalNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.OrdinalNumericRegex,"gis"),value:"OrdinalNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.OrdinalEnglishRegex,"gis"),value:"OrdEng"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(englishNumeric.EnglishNumeric.OrdinalRoundNumberRegex,"gis"),value:"OrdEng"});this.regexes=e}};r.EnglishPercentageExtractor=class extends extractors$4.BasePercentageExtractor{constructor(){super(new u)}initRegexes(){let e=[englishNumeric.EnglishNumeric.NumberWithSuffixPercentage,englishNumeric.EnglishNumeric.NumberWithPrefixPercentage];return this.buildRegexes(e)}}});unwrapExports(extractors$2);var extractors$6=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});class u extends extractors$4.BaseNumberExtractor{constructor(e=models$2.NumberMode.Default){super(),this.extractType=constants.Constants.SYS_NUM;let r=new Array,u=null;switch(e){case models$2.NumberMode.PureNumber:u=new t(spanishNumeric.SpanishNumeric.PlaceHolderPureNumber);break;case models$2.NumberMode.Currency:r.push({regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.CurrencyRegex,"gs"),value:"IntegerNum"});break;case models$2.NumberMode.Default:}null===u&&(u=new t),u.regexes.forEach(e=>r.push(e)),(new d).regexes.forEach(e=>r.push(e)),this.regexes=r}}r.SpanishNumberExtractor=u;class t extends extractors$4.BaseNumberExtractor{constructor(e=spanishNumeric.SpanishNumeric.PlaceHolderDefault){super(),this.extractType=constants.Constants.SYS_NUM_CARDINAL;let r=new Array;new n(e).regexes.forEach(e=>r.push(e)),new a(e).regexes.forEach(e=>r.push(e)),this.regexes=r}}r.SpanishCardinalExtractor=t;class n extends extractors$4.BaseNumberExtractor{constructor(e=spanishNumeric.SpanishNumeric.PlaceHolderDefault){super(),this.extractType=constants.Constants.SYS_NUM_INTEGER;let r=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.NumbersWithPlaceHolder(e),"gi"),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.NumbersWithSuffix,"gs"),value:"IntegerNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.integerNumDot,e),value:"IntegerNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.integerNumBlank,e),value:"IntegerNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.integerNumNoBreakSpace,e),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.RoundNumberIntegerRegexWithLocks),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.NumbersWithDozenSuffix),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.AllIntRegexWithLocks),value:"IntegerSpa"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.AllIntRegexWithDozenSuffixLocks),value:"IntegerSpa"});this.regexes=r}}r.SpanishIntegerExtractor=n;class a extends extractors$4.BaseNumberExtractor{constructor(e=spanishNumeric.SpanishNumeric.PlaceHolderDefault){super(),this.extractType=constants.Constants.SYS_NUM_DOUBLE;let r=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.DoubleDecimalPointRegex(e)),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.DoubleWithoutIntegralRegex(e)),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.DoubleWithMultiplierRegex,"gs"),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.DoubleWithRoundNumber),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.DoubleAllFloatRegex),value:"DoubleSpa"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.DoubleExponentialNotationRegex),value:"DoublePow"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.DoubleCaretExponentialNotationRegex),value:"DoublePow"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.doubleNumDotComma,e),value:"DoubleNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.doubleNumNoBreakSpaceComma,e),value:"DoubleNum"});this.regexes=r}}r.SpanishDoubleExtractor=a;class d extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_FRACTION;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.FractionNotationRegex),value:"FracNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.FractionNotationWithSpacesRegex),value:"FracNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.FractionNounRegex),value:"FracSpa"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.FractionNounWithArticleRegex),value:"FracSpa"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.FractionPrepositionRegex),value:"FracSpa"});this.regexes=e}}r.SpanishFractionExtractor=d;r.SpanishOrdinalExtractor=class extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_ORDINAL;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.OrdinalSuffixRegex),value:"OrdinalNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(spanishNumeric.SpanishNumeric.OrdinalNounRegex),value:"OrdSpa"});this.regexes=e}};r.SpanishPercentageExtractor=class extends extractors$4.BasePercentageExtractor{constructor(){super(new u)}initRegexes(){let e=[spanishNumeric.SpanishNumeric.NumberWithPrefixPercentage];return this.buildRegexes(e)}}});unwrapExports(extractors$6);var extractors$8=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});class u extends extractors$4.BaseNumberExtractor{constructor(e=models$2.NumberMode.Default){super(),this.extractType=constants.Constants.SYS_NUM;let r=new Array,u=null;switch(e){case models$2.NumberMode.PureNumber:u=new t(portugueseNumeric.PortugueseNumeric.PlaceHolderPureNumber);break;case models$2.NumberMode.Currency:r.push({regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.CurrencyRegex,"gs"),value:"IntegerNum"});break;case models$2.NumberMode.Default:}null===u&&(u=new t),u.regexes.forEach(e=>r.push(e)),(new d).regexes.forEach(e=>r.push(e)),this.regexes=r}}r.PortugueseNumberExtractor=u;class t extends extractors$4.BaseNumberExtractor{constructor(e=portugueseNumeric.PortugueseNumeric.PlaceHolderDefault){super(),this.extractType=constants.Constants.SYS_NUM_CARDINAL;let r=new Array;new n(e).regexes.forEach(e=>r.push(e)),new a(e).regexes.forEach(e=>r.push(e)),this.regexes=r}}r.PortugueseCardinalExtractor=t;class n extends extractors$4.BaseNumberExtractor{constructor(e=portugueseNumeric.PortugueseNumeric.PlaceHolderDefault){super(),this.extractType=constants.Constants.SYS_NUM_INTEGER;let r=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.NumbersWithPlaceHolder(e),"gi"),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.NumbersWithSuffix,"gs"),value:"IntegerNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.integerNumDot,e),value:"IntegerNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.integerNumBlank,e),value:"IntegerNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.integerNumNoBreakSpace,e),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.RoundNumberIntegerRegexWithLocks),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.NumbersWithDozen2Suffix),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.NumbersWithDozenSuffix),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.AllIntRegexWithLocks),value:"IntegerPor"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.AllIntRegexWithDozenSuffixLocks),value:"IntegerPor"});this.regexes=r}}r.PortugueseIntegerExtractor=n;class a extends extractors$4.BaseNumberExtractor{constructor(e=portugueseNumeric.PortugueseNumeric.PlaceHolderDefault){super(),this.extractType=constants.Constants.SYS_NUM_DOUBLE;let r=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.DoubleDecimalPointRegex(e)),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.DoubleWithoutIntegralRegex(e)),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.DoubleWithMultiplierRegex,"gs"),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.DoubleWithRoundNumber),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.DoubleAllFloatRegex),value:"DoublePor"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.DoubleExponentialNotationRegex),value:"DoublePow"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.DoubleCaretExponentialNotationRegex),value:"DoublePow"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.doubleNumDotComma,e),value:"DoubleNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.doubleNumNoBreakSpaceComma,e),value:"DoubleNum"});this.regexes=r}}r.PortugueseDoubleExtractor=a;class d extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_FRACTION;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.FractionNotationRegex),value:"FracNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.FractionNotationWithSpacesRegex),value:"FracNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.FractionNounRegex),value:"FracPor"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.FractionNounWithArticleRegex),value:"FracPor"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.FractionPrepositionRegex),value:"FracPor"});this.regexes=e}}r.PortugueseFractionExtractor=d;r.PortugueseOrdinalExtractor=class extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_ORDINAL;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.OrdinalSuffixRegex),value:"OrdinalNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(portugueseNumeric.PortugueseNumeric.OrdinalEnglishRegex),value:"OrdinalPor"});this.regexes=e}};r.PortuguesePercentageExtractor=class extends extractors$4.BasePercentageExtractor{constructor(){super(new u)}initRegexes(){let e=[portugueseNumeric.PortugueseNumeric.NumberWithSuffixPercentage];return this.buildRegexes(e)}}});unwrapExports(extractors$8);var extractors$10=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});class u extends extractors$4.BaseNumberExtractor{constructor(e=models$2.NumberMode.Default){super(),this.extractType=constants.Constants.SYS_NUM;let r=new Array,u=null;switch(e){case models$2.NumberMode.PureNumber:u=new t(frenchNumeric.FrenchNumeric.PlaceHolderPureNumber);break;case models$2.NumberMode.Currency:r.push({regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.CurrencyRegex,"gs"),value:"IntegerNum"});break;case models$2.NumberMode.Default:}null===u&&(u=new t),u.regexes.forEach(e=>r.push(e)),(new d).regexes.forEach(e=>r.push(e)),this.regexes=r}}r.FrenchNumberExtractor=u;class t extends extractors$4.BaseNumberExtractor{constructor(e=frenchNumeric.FrenchNumeric.PlaceHolderDefault){super(),this.extractType=constants.Constants.SYS_NUM_CARDINAL;let r=new Array;new n(e).regexes.forEach(e=>r.push(e)),new a(e).regexes.forEach(e=>r.push(e)),this.regexes=r}}r.FrenchCardinalExtractor=t;class n extends extractors$4.BaseNumberExtractor{constructor(e=frenchNumeric.FrenchNumeric.PlaceHolderDefault){super(),this.extractType=constants.Constants.SYS_NUM_INTEGER;let r=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.NumbersWithPlaceHolder(e),"gi"),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.NumbersWithSuffix,"gs"),value:"IntegerNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.integerNumDot,e),value:"IntegerNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.integerNumBlank,e),value:"IntegerNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.integerNumNoBreakSpace,e),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.RoundNumberIntegerRegexWithLocks),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.NumbersWithDozenSuffix),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.AllIntRegexWithLocks),value:"IntegerFr"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.AllIntRegexWithDozenSuffixLocks),value:"IntegerFr"});this.regexes=r}}r.FrenchIntegerExtractor=n;class a extends extractors$4.BaseNumberExtractor{constructor(e=frenchNumeric.FrenchNumeric.PlaceHolderDefault){super(),this.extractType=constants.Constants.SYS_NUM_DOUBLE;let r=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.DoubleDecimalPointRegex(e)),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.DoubleWithoutIntegralRegex(e)),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.DoubleWithMultiplierRegex,"gs"),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.DoubleWithRoundNumber),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.DoubleAllFloatRegex),value:"DoubleFr"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.DoubleExponentialNotationRegex),value:"DoublePow"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.DoubleCaretExponentialNotationRegex),value:"DoublePow"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.doubleNumDotComma,e),value:"DoubleNum"},{regExp:this.generateLongFormatNumberRegexes(models$2.LongFormatType.doubleNumNoBreakSpaceComma,e),value:"DoubleNum"});this.regexes=r}}r.FrenchDoubleExtractor=a;class d extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_FRACTION;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.FractionNotationRegex),value:"FracNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.FractionNotationWithSpacesRegex),value:"FracNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.FractionNounRegex),value:"FracFr"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.FractionNounWithArticleRegex),value:"FracFr"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.FractionPrepositionRegex),value:"FracFr"});this.regexes=e}}r.FrenchFractionExtractor=d;r.FrenchOrdinalExtractor=class extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_ORDINAL;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.OrdinalSuffixRegex),value:"OrdinalNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(frenchNumeric.FrenchNumeric.OrdinalFrenchRegex),value:"OrdFr"});this.regexes=e}};r.FrenchPercentageExtractor=class extends extractors$4.BasePercentageExtractor{constructor(){super(new u)}initRegexes(){let e=[frenchNumeric.FrenchNumeric.NumberWithSuffixPercentage,frenchNumeric.FrenchNumeric.NumberWithPrefixPercentage];return this.buildRegexes(e)}}});unwrapExports(extractors$10);var extractors$12=createCommonjsModule(function(e,r){"use strict";var u;Object.defineProperty(r,"__esModule",{value:!0}),function(e){e[e.Default=0]="Default",e[e.ExtractAll=1]="ExtractAll"}(u=r.ChineseNumberExtractorMode||(r.ChineseNumberExtractorMode={}));r.ChineseNumberExtractor=class extends extractors$4.BaseNumberExtractor{constructor(e=u.Default){super(),this.extractType=constants.Constants.SYS_NUM;let r=new Array;new t(e).regexes.forEach(e=>r.push(e)),(new d).regexes.forEach(e=>r.push(e)),this.regexes=r}};class t extends extractors$4.BaseNumberExtractor{constructor(e=u.Default){super(),this.extractType=constants.Constants.SYS_NUM_CARDINAL;let r=new Array;new n(e).regexes.forEach(e=>r.push(e)),(new a).regexes.forEach(e=>r.push(e)),this.regexes=r}}r.ChineseCardinalExtractor=t;class n extends extractors$4.BaseNumberExtractor{constructor(e=u.Default){super(),this.extractType=constants.Constants.SYS_NUM_INTEGER;let r=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.NumbersSpecialsChars,"gi"),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.NumbersSpecialsCharsWithSuffix,"gs"),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.DottedNumbersSpecialsChar,"gis"),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.NumbersWithHalfDozen,"gis"),value:"IntegerChs"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.NumbersWithDozen,"gis"),value:"IntegerChs"});switch(e){case u.Default:r.push({regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.NumbersWithAllowListRegex,"gi"),value:"IntegerChs"});break;case u.ExtractAll:r.push({regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.NumbersAggressiveRegex,"gi"),value:"IntegerChs"})}this.regexes=r}}r.ChineseIntegerExtractor=n;class a extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_DOUBLE;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.DoubleSpecialsChars,"gis"),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.DoubleSpecialsCharsWithNegatives,"gis"),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.SimpleDoubleSpecialsChars,"gis"),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.DoubleWithMultiplierRegex,"gi"),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.DoubleWithThousandsRegex,"gi"),value:"DoubleChs"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.DoubleAllFloatRegex,"gi"),value:"DoubleChs"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.DoubleExponentialNotationRegex,"gis"),value:"DoublePow"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.DoubleScientificNotationRegex,"gis"),value:"DoublePow"});this.regexes=e}}r.ChineseDoubleExtractor=a;class d extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_FRACTION;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.FractionNotationSpecialsCharsRegex,"gis"),value:"FracNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.FractionNotationRegex,"gis"),value:"FracNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.AllFractionNumber,"gi"),value:"FracChs"});this.regexes=e}}r.ChineseFractionExtractor=d;r.ChineseOrdinalExtractor=class extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_ORDINAL;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.OrdinalRegex,"gi"),value:"OrdinalChs"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.OrdinalNumbersRegex,"gi"),value:"OrdinalChs"});this.regexes=e}};r.ChinesePercentageExtractor=class extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_PERCENTAGE;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.PercentagePointRegex,"gi"),value:"PerChs"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.SimplePercentageRegex,"gi"),value:"PerChs"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.NumbersPercentagePointRegex,"gis"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.NumbersPercentageWithSeparatorRegex,"gis"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.NumbersPercentageWithMultiplierRegex,"gi"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.FractionPercentagePointRegex,"gis"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.FractionPercentageWithSeparatorRegex,"gis"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.FractionPercentageWithMultiplierRegex,"gi"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.SimpleNumbersPercentageRegex,"gis"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.SimpleNumbersPercentageWithMultiplierRegex,"gi"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.SimpleNumbersPercentagePointRegex,"gis"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.IntegerPercentageRegex,"gis"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.IntegerPercentageWithMultiplierRegex,"gi"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.NumbersFractionPercentageRegex,"gis"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.SimpleIntegerPercentageRegex,"gis"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.NumbersFoldsPercentageRegex,"gis"),value:"PerSpe"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.FoldsPercentageRegex,"gis"),value:"PerSpe"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.SimpleFoldsPercentageRegex,"gis"),value:"PerSpe"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.SpecialsPercentageRegex,"gis"),value:"PerSpe"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.NumbersSpecialsPercentageRegex,"gis"),value:"PerSpe"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.SimpleSpecialsPercentageRegex,"gis"),value:"PerSpe"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(chineseNumeric.ChineseNumeric.SpecialsFoldsPercentageRegex,"gis"),value:"PerSpe"});this.regexes=e}}});unwrapExports(extractors$12);var extractors$14=createCommonjsModule(function(e,r){"use strict";var u;Object.defineProperty(r,"__esModule",{value:!0}),function(e){e[e.Default=0]="Default",e[e.ExtractAll=1]="ExtractAll"}(u=r.JapaneseNumberExtractorMode||(r.JapaneseNumberExtractorMode={}));r.JapaneseNumberExtractor=class extends extractors$4.BaseNumberExtractor{constructor(e=u.Default){super(),this.extractType=constants.Constants.SYS_NUM;let r=new Array;new t(e).regexes.forEach(e=>r.push(e)),(new d).regexes.forEach(e=>r.push(e)),this.regexes=r}};class t extends extractors$4.BaseNumberExtractor{constructor(e=u.Default){super(),this.extractType=constants.Constants.SYS_NUM_CARDINAL;let r=new Array;new n(e).regexes.forEach(e=>r.push(e)),(new a).regexes.forEach(e=>r.push(e)),this.regexes=r}}r.JapaneseCardinalExtractor=t;class n extends extractors$4.BaseNumberExtractor{constructor(e=u.Default){super(),this.extractType=constants.Constants.SYS_NUM_INTEGER;let r=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.NumbersSpecialsChars,"gi"),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.NumbersSpecialsCharsWithSuffix,"gi"),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.DottedNumbersSpecialsChar,"gi"),value:"IntegerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.NumbersWithHalfDozen,"gi"),value:"IntegerJpn"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.NumbersWithDozen,"gi"),value:"IntegerJpn"});switch(e){case u.Default:r.push({regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.NumbersWithAllowListRegex,"gi"),value:"IntegerJpn"});break;case u.ExtractAll:r.push({regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.NumbersAggressiveRegex,"gi"),value:"IntegerJpn"})}this.regexes=r}}r.JapaneseIntegerExtractor=n;class a extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_DOUBLE;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.DoubleSpecialsChars,"gis"),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.DoubleSpecialsCharsWithNegatives,"gis"),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.SimpleDoubleSpecialsChars,"gis"),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.DoubleWithMultiplierRegex,"gis"),value:"DoubleNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.DoubleWithThousandsRegex,"gis"),value:"DoubleJpn"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.DoubleExponentialNotationRegex,"gis"),value:"DoublePow"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.DoubleScientificNotationRegex,"gis"),value:"DoublePow"});this.regexes=e}}r.JapaneseDoubleExtractor=a;class d extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_FRACTION;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.FractionNotationSpecialsCharsRegex,"gis"),value:"FracNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.FractionNotationRegex,"gis"),value:"FracNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.AllFractionNumber,"gis"),value:"FracJpn"});this.regexes=e}}r.JapaneseFractionExtractor=d;r.JapaneseOrdinalExtractor=class extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_ORDINAL;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.OrdinalRegex,"gi"),value:"OrdinalJpn"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.OrdinalNumbersRegex,"gi"),value:"OrdinalJpn"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.NumbersFoldsPercentageRegex,"gi"),value:"OrdinalJpn"});this.regexes=e}};r.JapanesePercentageExtractor=class extends extractors$4.BaseNumberExtractor{constructor(){super(),this.extractType=constants.Constants.SYS_NUM_PERCENTAGE;let e=new Array({regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.SimplePercentageRegex,"gi"),value:"PerJpn"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.NumbersPercentagePointRegex,"gis"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.NumbersPercentageWithSeparatorRegex,"gis"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.NumbersPercentageWithMultiplierRegex,"gi"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.SimpleNumbersPercentageWithMultiplierRegex,"gi"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.SimpleIntegerPercentageRegex,"gis"),value:"PerNum"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.NumbersFoldsPercentageRegex,"gis"),value:"PerSpe"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.FoldsPercentageRegex,"gis"),value:"PerSpe"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.SimpleFoldsPercentageRegex,"gis"),value:"PerSpe"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.SpecialsPercentageRegex,"gis"),value:"PerSpe"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.NumbersSpecialsPercentageRegex,"gis"),value:"PerSpe"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.SimpleSpecialsPercentageRegex,"gis"),value:"PerSpe"},{regExp:recognizersText.RegExpUtility.getSafeRegExp(japaneseNumeric.JapaneseNumeric.SpecialsFoldsPercentageRegex,"gis"),value:"PerSpe"});this.regexes=e}}});unwrapExports(extractors$14);var numberRecognizer=createCommonjsModule(function(e,r){"use strict";var u;function t(e,r,u,t){return e(new n(u,t)).parse(r)}Object.defineProperty(r,"__esModule",{value:!0}),function(e){e[e.None=0]="None"}(u=r.NumberOptions||(r.NumberOptions={})),r.recognizeNumber=function(e,r,n=u.None,a=!0){return t(e=>e.getNumberModel(r,a),e,r,n)},r.recognizeOrdinal=function(e,r,n=u.None,a=!0){return t(e=>e.getOrdinalModel(r,a),e,r,n)},r.recognizePercentage=function(e,r,n=u.None,a=!0){return t(e=>e.getPercentageModel(r,a),e,r,n)};class n extends recognizersText.Recognizer{constructor(e,r=u.None,t=!1){super(e,r,t)}InitializeConfiguration(){this.registerModel("NumberModel",culture$2.Culture.English,e=>new models$2.NumberModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Number,new parserConfiguration.EnglishNumberParserConfiguration),new extractors$2.EnglishNumberExtractor(models$2.NumberMode.PureNumber))),this.registerModel("OrdinalModel",culture$2.Culture.English,e=>new models$2.OrdinalModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Ordinal,new parserConfiguration.EnglishNumberParserConfiguration),new extractors$2.EnglishOrdinalExtractor)),this.registerModel("PercentModel",culture$2.Culture.English,e=>new models$2.PercentModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Percentage,new parserConfiguration.EnglishNumberParserConfiguration),new extractors$2.EnglishPercentageExtractor)),this.registerModel("NumberModel",culture$2.Culture.Spanish,e=>new models$2.NumberModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Number,new parserConfiguration$2.SpanishNumberParserConfiguration),new extractors$6.SpanishNumberExtractor(models$2.NumberMode.PureNumber))),this.registerModel("OrdinalModel",culture$2.Culture.Spanish,e=>new models$2.OrdinalModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Ordinal,new parserConfiguration$2.SpanishNumberParserConfiguration),new extractors$6.SpanishOrdinalExtractor)),this.registerModel("PercentModel",culture$2.Culture.Spanish,e=>new models$2.PercentModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Percentage,new parserConfiguration$2.SpanishNumberParserConfiguration),new extractors$6.SpanishPercentageExtractor)),this.registerModel("NumberModel",culture$2.Culture.Portuguese,e=>new models$2.NumberModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Number,new parserConfiguration$4.PortugueseNumberParserConfiguration),new extractors$8.PortugueseNumberExtractor(models$2.NumberMode.PureNumber))),this.registerModel("OrdinalModel",culture$2.Culture.Portuguese,e=>new models$2.OrdinalModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Ordinal,new parserConfiguration$4.PortugueseNumberParserConfiguration),new extractors$8.PortugueseOrdinalExtractor)),this.registerModel("PercentModel",culture$2.Culture.Portuguese,e=>new models$2.PercentModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Percentage,new parserConfiguration$4.PortugueseNumberParserConfiguration),new extractors$8.PortuguesePercentageExtractor)),this.registerModel("NumberModel",culture$2.Culture.Chinese,e=>new models$2.NumberModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Number,new parserConfiguration$8.ChineseNumberParserConfiguration),new extractors$12.ChineseNumberExtractor)),this.registerModel("OrdinalModel",culture$2.Culture.Chinese,e=>new models$2.OrdinalModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Ordinal,new parserConfiguration$8.ChineseNumberParserConfiguration),new extractors$12.ChineseOrdinalExtractor)),this.registerModel("PercentModel",culture$2.Culture.Chinese,e=>new models$2.PercentModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Percentage,new parserConfiguration$8.ChineseNumberParserConfiguration),new extractors$12.ChinesePercentageExtractor)),this.registerModel("NumberModel",culture$2.Culture.Japanese,e=>new models$2.NumberModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Number,new parserConfiguration$10.JapaneseNumberParserConfiguration),new extractors$14.JapaneseNumberExtractor)),this.registerModel("OrdinalModel",culture$2.Culture.Japanese,e=>new models$2.OrdinalModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Ordinal,new parserConfiguration$10.JapaneseNumberParserConfiguration),new extractors$14.JapaneseOrdinalExtractor)),this.registerModel("PercentModel",culture$2.Culture.Japanese,e=>new models$2.PercentModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Percentage,new parserConfiguration$10.JapaneseNumberParserConfiguration),new extractors$14.JapanesePercentageExtractor)),this.registerModel("NumberModel",culture$2.Culture.French,e=>new models$2.NumberModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Number,new parserConfiguration$6.FrenchNumberParserConfiguration),new extractors$10.FrenchNumberExtractor(models$2.NumberMode.PureNumber))),this.registerModel("OrdinalModel",culture$2.Culture.French,e=>new models$2.OrdinalModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Ordinal,new parserConfiguration$6.FrenchNumberParserConfiguration),new extractors$10.FrenchOrdinalExtractor)),this.registerModel("PercentModel",culture$2.Culture.French,e=>new models$2.PercentModel(agnosticNumberParser.AgnosticNumberParserFactory.getParser(agnosticNumberParser.AgnosticNumberParserType.Percentage,new parserConfiguration$6.FrenchNumberParserConfiguration),new extractors$10.FrenchPercentageExtractor))}IsValidOptions(e){return e>=0&&e<=u.None}getNumberModel(e=null,r=!0){return this.getModel("NumberModel",e,r)}getOrdinalModel(e=null,r=!0){return this.getModel("OrdinalModel",e,r)}getPercentageModel(e=null,r=!0){return this.getModel("PercentModel",e,r)}}r.default=n});unwrapExports(numberRecognizer);var recognizersTextNumber=createCommonjsModule(function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.NumberRecognizer=numberRecognizer.default,r.NumberOptions=numberRecognizer.NumberOptions,r.recognizeNumber=numberRecognizer.recognizeNumber,r.recognizeOrdinal=numberRecognizer.recognizeOrdinal,r.recognizePercentage=numberRecognizer.recognizePercentage,r.Culture=culture$2.Culture,r.CultureInfo=culture$2.CultureInfo,r.FormatUtility=recognizersText.FormatUtility,r.StringUtility=recognizersText.StringUtility,r.Match=recognizersText.Match,r.RegExpUtility=recognizersText.RegExpUtility,r.BaseNumbers=baseNumbers.BaseNumbers,r.EnglishNumeric=englishNumeric.EnglishNumeric,r.SpanishNumeric=spanishNumeric.SpanishNumeric,r.FrenchNumeric=frenchNumeric.FrenchNumeric,r.ChineseNumeric=chineseNumeric.ChineseNumeric,r.JapaneseNumeric=japaneseNumeric.JapaneseNumeric,r.Constants=constants.Constants,r.BaseNumberExtractor=extractors$4.BaseNumberExtractor,r.BasePercentageExtractor=extractors$4.BasePercentageExtractor,r.NumberMode=models$2.NumberMode,r.LongFormatType=models$2.LongFormatType,r.AbstractNumberModel=models$2.AbstractNumberModel,r.NumberModel=models$2.NumberModel,r.OrdinalModel=models$2.OrdinalModel,r.PercentModel=models$2.PercentModel,r.AgnosticNumberParserType=agnosticNumberParser.AgnosticNumberParserType,r.AgnosticNumberParserFactory=agnosticNumberParser.AgnosticNumberParserFactory,r.BaseNumberParser=parsers$2.BaseNumberParser,r.BasePercentageParser=parsers$2.BasePercentageParser,r.EnglishCardinalExtractor=extractors$2.EnglishCardinalExtractor,r.EnglishDoubleExtractor=extractors$2.EnglishDoubleExtractor,r.EnglishFractionExtractor=extractors$2.EnglishFractionExtractor,r.EnglishIntegerExtractor=extractors$2.EnglishIntegerExtractor,r.EnglishNumberExtractor=extractors$2.EnglishNumberExtractor,r.EnglishOrdinalExtractor=extractors$2.EnglishOrdinalExtractor,r.EnglishPercentageExtractor=extractors$2.EnglishPercentageExtractor,r.EnglishNumberParserConfiguration=parserConfiguration.EnglishNumberParserConfiguration,r.SpanishCardinalExtractor=extractors$6.SpanishCardinalExtractor,r.SpanishDoubleExtractor=extractors$6.SpanishDoubleExtractor,r.SpanishFractionExtractor=extractors$6.SpanishFractionExtractor,r.SpanishIntegerExtractor=extractors$6.SpanishIntegerExtractor,r.SpanishNumberExtractor=extractors$6.SpanishNumberExtractor,r.SpanishOrdinalExtractor=extractors$6.SpanishOrdinalExtractor,r.SpanishPercentageExtractor=extractors$6.SpanishPercentageExtractor,r.SpanishNumberParserConfiguration=parserConfiguration$2.SpanishNumberParserConfiguration,r.PortugueseCardinalExtractor=extractors$8.PortugueseCardinalExtractor,r.PortugueseDoubleExtractor=extractors$8.PortugueseDoubleExtractor,r.PortugueseFractionExtractor=extractors$8.PortugueseFractionExtractor,r.PortugueseIntegerExtractor=extractors$8.PortugueseIntegerExtractor,r.PortugueseNumberExtractor=extractors$8.PortugueseNumberExtractor,r.PortugueseOrdinalExtractor=extractors$8.PortugueseOrdinalExtractor,r.PortuguesePercentageExtractor=extractors$8.PortuguesePercentageExtractor,r.PortugueseNumberParserConfiguration=parserConfiguration$4.PortugueseNumberParserConfiguration,r.FrenchCardinalExtractor=extractors$10.FrenchCardinalExtractor,r.FrenchDoubleExtractor=extractors$10.FrenchDoubleExtractor,r.FrenchFractionExtractor=extractors$10.FrenchFractionExtractor,r.FrenchIntegerExtractor=extractors$10.FrenchIntegerExtractor,r.FrenchNumberExtractor=extractors$10.FrenchNumberExtractor,r.FrenchOrdinalExtractor=extractors$10.FrenchOrdinalExtractor,r.FrenchPercentageExtractor=extractors$10.FrenchPercentageExtractor,r.FrenchNumberParserConfiguration=parserConfiguration$6.FrenchNumberParserConfiguration,r.ChineseCardinalExtractor=extractors$12.ChineseCardinalExtractor,r.ChineseDoubleExtractor=extractors$12.ChineseDoubleExtractor,r.ChineseFractionExtractor=extractors$12.ChineseFractionExtractor,r.ChineseIntegerExtractor=extractors$12.ChineseIntegerExtractor,r.ChineseNumberExtractor=extractors$12.ChineseNumberExtractor,r.ChineseOrdinalExtractor=extractors$12.ChineseOrdinalExtractor,r.ChinesePercentageExtractor=extractors$12.ChinesePercentageExtractor,r.ChineseNumberExtractorMode=extractors$12.ChineseNumberExtractorMode,r.ChineseNumberParserConfiguration=parserConfiguration$8.ChineseNumberParserConfiguration,r.JapaneseCardinalExtractor=extractors$14.JapaneseCardinalExtractor,r.JapaneseDoubleExtractor=extractors$14.JapaneseDoubleExtractor,r.JapaneseFractionExtractor=extractors$14.JapaneseFractionExtractor,r.JapaneseIntegerExtractor=extractors$14.JapaneseIntegerExtractor,r.JapaneseNumberExtractor=extractors$14.JapaneseNumberExtractor,r.JapaneseOrdinalExtractor=extractors$14.JapaneseOrdinalExtractor,r.JapanesePercentageExtractor=extractors$14.JapanesePercentageExtractor,r.JapaneseNumberExtractorMode=extractors$14.JapaneseNumberExtractorMode,r.JapaneseNumberParserConfiguration=parserConfiguration$10.JapaneseNumberParserConfiguration}),recognizersTextNumber$1=unwrapExports(recognizersTextNumber),recognizersTextNumber_1=recognizersTextNumber.NumberRecognizer,recognizersTextNumber_2=recognizersTextNumber.NumberOptions,recognizersTextNumber_3=recognizersTextNumber.recognizeNumber,recognizersTextNumber_4=recognizersTextNumber.recognizeOrdinal,recognizersTextNumber_5=recognizersTextNumber.recognizePercentage,recognizersTextNumber_6=recognizersTextNumber.Culture,recognizersTextNumber_7=recognizersTextNumber.CultureInfo,recognizersTextNumber_8=recognizersTextNumber.FormatUtility,recognizersTextNumber_9=recognizersTextNumber.StringUtility,recognizersTextNumber_10=recognizersTextNumber.Match,recognizersTextNumber_11=recognizersTextNumber.RegExpUtility,recognizersTextNumber_12=recognizersTextNumber.BaseNumbers,recognizersTextNumber_13=recognizersTextNumber.EnglishNumeric,recognizersTextNumber_14=recognizersTextNumber.SpanishNumeric,recognizersTextNumber_15=recognizersTextNumber.FrenchNumeric,recognizersTextNumber_16=recognizersTextNumber.ChineseNumeric,recognizersTextNumber_17=recognizersTextNumber.JapaneseNumeric,recognizersTextNumber_18=recognizersTextNumber.Constants,recognizersTextNumber_19=recognizersTextNumber.BaseNumberExtractor,recognizersTextNumber_20=recognizersTextNumber.BasePercentageExtractor,recognizersTextNumber_21=recognizersTextNumber.NumberMode,recognizersTextNumber_22=recognizersTextNumber.LongFormatType,recognizersTextNumber_23=recognizersTextNumber.AbstractNumberModel,recognizersTextNumber_24=recognizersTextNumber.NumberModel,recognizersTextNumber_25=recognizersTextNumber.OrdinalModel,recognizersTextNumber_26=recognizersTextNumber.PercentModel,recognizersTextNumber_27=recognizersTextNumber.AgnosticNumberParserType,recognizersTextNumber_28=recognizersTextNumber.AgnosticNumberParserFactory,recognizersTextNumber_29=recognizersTextNumber.BaseNumberParser,recognizersTextNumber_30=recognizersTextNumber.BasePercentageParser,recognizersTextNumber_31=recognizersTextNumber.EnglishCardinalExtractor,recognizersTextNumber_32=recognizersTextNumber.EnglishDoubleExtractor,recognizersTextNumber_33=recognizersTextNumber.EnglishFractionExtractor,recognizersTextNumber_34=recognizersTextNumber.EnglishIntegerExtractor,recognizersTextNumber_35=recognizersTextNumber.EnglishNumberExtractor,recognizersTextNumber_36=recognizersTextNumber.EnglishOrdinalExtractor,recognizersTextNumber_37=recognizersTextNumber.EnglishPercentageExtractor,recognizersTextNumber_38=recognizersTextNumber.EnglishNumberParserConfiguration,recognizersTextNumber_39=recognizersTextNumber.SpanishCardinalExtractor,recognizersTextNumber_40=recognizersTextNumber.SpanishDoubleExtractor,recognizersTextNumber_41=recognizersTextNumber.SpanishFractionExtractor,recognizersTextNumber_42=recognizersTextNumber.SpanishIntegerExtractor,recognizersTextNumber_43=recognizersTextNumber.SpanishNumberExtractor,recognizersTextNumber_44=recognizersTextNumber.SpanishOrdinalExtractor,recognizersTextNumber_45=recognizersTextNumber.SpanishPercentageExtractor,recognizersTextNumber_46=recognizersTextNumber.SpanishNumberParserConfiguration,recognizersTextNumber_47=recognizersTextNumber.PortugueseCardinalExtractor,recognizersTextNumber_48=recognizersTextNumber.PortugueseDoubleExtractor,recognizersTextNumber_49=recognizersTextNumber.PortugueseFractionExtractor,recognizersTextNumber_50=recognizersTextNumber.PortugueseIntegerExtractor,recognizersTextNumber_51=recognizersTextNumber.PortugueseNumberExtractor,recognizersTextNumber_52=recognizersTextNumber.PortugueseOrdinalExtractor,recognizersTextNumber_53=recognizersTextNumber.PortuguesePercentageExtractor,recognizersTextNumber_54=recognizersTextNumber.PortugueseNumberParserConfiguration,recognizersTextNumber_55=recognizersTextNumber.FrenchCardinalExtractor,recognizersTextNumber_56=recognizersTextNumber.FrenchDoubleExtractor,recognizersTextNumber_57=recognizersTextNumber.FrenchFractionExtractor,recognizersTextNumber_58=recognizersTextNumber.FrenchIntegerExtractor,recognizersTextNumber_59=recognizersTextNumber.FrenchNumberExtractor,recognizersTextNumber_60=recognizersTextNumber.FrenchOrdinalExtractor,recognizersTextNumber_61=recognizersTextNumber.FrenchPercentageExtractor,recognizersTextNumber_62=recognizersTextNumber.FrenchNumberParserConfiguration,recognizersTextNumber_63=recognizersTextNumber.ChineseCardinalExtractor,recognizersTextNumber_64=recognizersTextNumber.ChineseDoubleExtractor,recognizersTextNumber_65=recognizersTextNumber.ChineseFractionExtractor,recognizersTextNumber_66=recognizersTextNumber.ChineseIntegerExtractor,recognizersTextNumber_67=recognizersTextNumber.ChineseNumberExtractor,recognizersTextNumber_68=recognizersTextNumber.ChineseOrdinalExtractor,recognizersTextNumber_69=recognizersTextNumber.ChinesePercentageExtractor,recognizersTextNumber_70=recognizersTextNumber.ChineseNumberExtractorMode,recognizersTextNumber_71=recognizersTextNumber.ChineseNumberParserConfiguration,recognizersTextNumber_72=recognizersTextNumber.JapaneseCardinalExtractor,recognizersTextNumber_73=recognizersTextNumber.JapaneseDoubleExtractor,recognizersTextNumber_74=recognizersTextNumber.JapaneseFractionExtractor,recognizersTextNumber_75=recognizersTextNumber.JapaneseIntegerExtractor,recognizersTextNumber_76=recognizersTextNumber.JapaneseNumberExtractor,recognizersTextNumber_77=recognizersTextNumber.JapaneseOrdinalExtractor,recognizersTextNumber_78=recognizersTextNumber.JapanesePercentageExtractor,recognizersTextNumber_79=recognizersTextNumber.JapaneseNumberExtractorMode,recognizersTextNumber_80=recognizersTextNumber.JapaneseNumberParserConfiguration;export{recognizersTextNumber_1 as NumberRecognizer,recognizersTextNumber_2 as NumberOptions,recognizersTextNumber_3 as recognizeNumber,recognizersTextNumber_4 as recognizeOrdinal,recognizersTextNumber_5 as recognizePercentage,recognizersTextNumber_6 as Culture,recognizersTextNumber_7 as CultureInfo,recognizersTextNumber_8 as FormatUtility,recognizersTextNumber_9 as StringUtility,recognizersTextNumber_10 as Match,recognizersTextNumber_11 as RegExpUtility,recognizersTextNumber_12 as BaseNumbers,recognizersTextNumber_13 as EnglishNumeric,recognizersTextNumber_14 as SpanishNumeric,recognizersTextNumber_15 as FrenchNumeric,recognizersTextNumber_16 as ChineseNumeric,recognizersTextNumber_17 as JapaneseNumeric,recognizersTextNumber_18 as Constants,recognizersTextNumber_19 as BaseNumberExtractor,recognizersTextNumber_20 as BasePercentageExtractor,recognizersTextNumber_21 as NumberMode,recognizersTextNumber_22 as LongFormatType,recognizersTextNumber_23 as AbstractNumberModel,recognizersTextNumber_24 as NumberModel,recognizersTextNumber_25 as OrdinalModel,recognizersTextNumber_26 as PercentModel,recognizersTextNumber_27 as AgnosticNumberParserType,recognizersTextNumber_28 as AgnosticNumberParserFactory,recognizersTextNumber_29 as BaseNumberParser,recognizersTextNumber_30 as BasePercentageParser,recognizersTextNumber_31 as EnglishCardinalExtractor,recognizersTextNumber_32 as EnglishDoubleExtractor,recognizersTextNumber_33 as EnglishFractionExtractor,recognizersTextNumber_34 as EnglishIntegerExtractor,recognizersTextNumber_35 as EnglishNumberExtractor,recognizersTextNumber_36 as EnglishOrdinalExtractor,recognizersTextNumber_37 as EnglishPercentageExtractor,recognizersTextNumber_38 as EnglishNumberParserConfiguration,recognizersTextNumber_39 as SpanishCardinalExtractor,recognizersTextNumber_40 as SpanishDoubleExtractor,recognizersTextNumber_41 as SpanishFractionExtractor,recognizersTextNumber_42 as SpanishIntegerExtractor,recognizersTextNumber_43 as SpanishNumberExtractor,recognizersTextNumber_44 as SpanishOrdinalExtractor,recognizersTextNumber_45 as SpanishPercentageExtractor,recognizersTextNumber_46 as SpanishNumberParserConfiguration,recognizersTextNumber_47 as PortugueseCardinalExtractor,recognizersTextNumber_48 as PortugueseDoubleExtractor,recognizersTextNumber_49 as PortugueseFractionExtractor,recognizersTextNumber_50 as PortugueseIntegerExtractor,recognizersTextNumber_51 as PortugueseNumberExtractor,recognizersTextNumber_52 as PortugueseOrdinalExtractor,recognizersTextNumber_53 as PortuguesePercentageExtractor,recognizersTextNumber_54 as PortugueseNumberParserConfiguration,recognizersTextNumber_55 as FrenchCardinalExtractor,recognizersTextNumber_56 as FrenchDoubleExtractor,recognizersTextNumber_57 as FrenchFractionExtractor,recognizersTextNumber_58 as FrenchIntegerExtractor,recognizersTextNumber_59 as FrenchNumberExtractor,recognizersTextNumber_60 as FrenchOrdinalExtractor,recognizersTextNumber_61 as FrenchPercentageExtractor,recognizersTextNumber_62 as FrenchNumberParserConfiguration,recognizersTextNumber_63 as ChineseCardinalExtractor,recognizersTextNumber_64 as ChineseDoubleExtractor,recognizersTextNumber_65 as ChineseFractionExtractor,recognizersTextNumber_66 as ChineseIntegerExtractor,recognizersTextNumber_67 as ChineseNumberExtractor,recognizersTextNumber_68 as ChineseOrdinalExtractor,recognizersTextNumber_69 as ChinesePercentageExtractor,recognizersTextNumber_70 as ChineseNumberExtractorMode,recognizersTextNumber_71 as ChineseNumberParserConfiguration,recognizersTextNumber_72 as JapaneseCardinalExtractor,recognizersTextNumber_73 as JapaneseDoubleExtractor,recognizersTextNumber_74 as JapaneseFractionExtractor,recognizersTextNumber_75 as JapaneseIntegerExtractor,recognizersTextNumber_76 as JapaneseNumberExtractor,recognizersTextNumber_77 as JapaneseOrdinalExtractor,recognizersTextNumber_78 as JapanesePercentageExtractor,recognizersTextNumber_79 as JapaneseNumberExtractorMode,recognizersTextNumber_80 as JapaneseNumberParserConfiguration};export default recognizersTextNumber$1;