# Spoken is language designed to be able to control a text editor by using voice commands.

name: Spoken
desc: Spoken is language designed to be able to control a text editor by using voice commands.
categories:
  line:
    desc: Things related to line manipulation
    commands:
      - id: 0x0
        desc: Moves the cursor to a different line.
        phrases:
          en:
            - go to line {number:numeral}
            - line {number:numeral}
          pt_br:
            - vá para linha {number:numeral}
            - linha {number:numeral}
        impl: |
          async function goToLine(command, editor, context) {
            // yara yara do something
            return await editor.goToLine(command.number)
          }

      - id: 0x1
        desc: Creates a new line below the current line.
        phrases:
          en:
            [
              new line below,
              create a new line below,
              new line,
              create a new line,
            ]
          pt_br:
            [
              linha nova abaixo,
              crie uma linha nova abaixo,
              linha nova,
              crie uma linha nova,
            ]
        impl: |
          async function newLineBelow(command, editor, context) {
            return await editor.newLine()
          }

      - id: 0x2

        desc: Creates a new line above the current line.
        phrases:
          en: [new line above, create a new line above]
          pt_br: [linha nova acima, crie uma linha nova acima]
        impl: |
          function newLineAbove(command, editor, context) {
            // yara yara something
          }

      - id: 0x3
        desc: Removes the specified line. If none was provided the current line will be removed.
        phrases:
          en:
            - remove line {numeral}
            - remove the line {numeral}
          pt_br:
            - remova linha {numeral}
            - remova a linha {numeral}
        impl: |
          function removeLine(command, editor, context) {
            // yara yara something
          }

      - id: 0x4
        desc: Selects the specifed term in the specified line, if no line was provided the current will be used.
        phrases:
          en:
            - select the {term} in the line {numeral}
            - select {term} on line {numeral}
          pt_br:
            - selecione o termo {term} na linha {numeral}
            - selecione {term} na linha {numeral}
            - na linha {numeral} selecione {term}
        impl: |
          function selectTerm(command, editor, context) {
            // yara yara something
          }

  write:
    desc: Things related to text input
    commands:
      - id: 0x400
        desc: Just write something.
        phrases:
          en:
            - write {text:any}
            - write the following term {text:any}
          pt_br:
            - escreva {text:any}
            - escreva o seguinte termo {text:any}
        impl: |
          async function write(command, editor, context) {
            console.log('[Spoken]: Executing:\n\t "Write {term}"')
            return await editor.write(command.text)
          }

      - id: 0x401
        desc: Declares a constant or a variable.
        phrases:
          en:
            - declare a {memType:constant|variable} called {name:term}
            - declare a {memType:constant|variable} called {name:term} with value {value:term}
            - declare a {memType:constant|variable} called {name:term} of type {type:term}
            - declare a {memType:constant|variable} called {name:term} of type {type:term} with value {value:term}
          pt_br:
            - declare uma {memType:constante|variável} chamada {name:term}
            - declare uma {memType:constante|variável} chamada {name:term} com o valor {value:term}
            - declare uma {memType:constante|variável} chamada {name:term} do tipo {type:term}
            - declare uma {memType:constante|variável} chamada {name:term} do tipo {type:term} com o valor {value:term}
            ### remove this
            - declaro uma {memType:constante|variável} chamada {name:term}
            - declaro uma {memType:constante|variável} chamada {name:term} com o valor {value:term}
            - declaro uma {memType:constante|variável} chamada {name:term} do tipo {type:term}
            - declaro uma {memType:constante|variável} chamada {name:term} do tipo {type:term} com o valor {value:term}
            ### remove this as well
            - declaro uma {memType:constante|variável} chamada {name:term} com valor {value:term}
            - declaro uma {memType:constante|variável} chamada {name:term} do tipo {type:term} com valor {value:term}
            - declare uma {memType:constante|variável} chamada {name:term} com valor {value:term}
            - declare uma {memType:constante|variável} chamada {name:term} do tipo {type:term} com valor {value:term}
        impl: |
          async function declareConst(c, editor, context) {
            console.log('[Spoken]: Executing: "Declare a variable."')
            // const { text, lineNumber } = editor.getLine()
            const memType = parseInt(c.memType || 0, 10) === 0 ? 'const ' : 'let '
            const type = c.type ? `:${c.type}` : ''
            const value = c.value ? ` = ${c.value}` : '' 

            const text = `${memType}${c.name}${type}${value}`

            await editor.write(text)
            return await editor.indentSelection([undefined, 0], [undefined, text.length])
          }

# Spoken - VsCode
# Spoken - Java
